<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="705697de-fe6c-4221-83d2-069cb03e63eb" created="2.4.0" activeEnvironment="Default environment" name="PageFreezer" resourceRoot="" updated="2.4.0 2018-06-08T12:50:23Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="APIs"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="true"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="Sanity-Test"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="/Applications/ReadyAPI-2.4.0.app/Contents/Resources/app/bin"/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="/Users/mehakverma/Documents/Reports"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="true"/>
</xml-fragment>]]></con:setting>
  </con:settings>
  <con:interface xsi:type="con:RestService" id="057c3c73-67d4-4c24-8641-d7343ecf8e36" name="Social Media 2.0 GUI API" type="rest_ex" wadlVersion="https://swagger.io/swagger2/specification" definitionUrl="/Users/mehakverma/Downloads/convertcsv.json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>Social Media 2.0 API specification</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/Users/mehakverma/Downloads/convertcsv.json">
      <con:part>
        <con:url>file:/Users/mehakverma/Downloads/convertcsv.json</con:url>
        <con:content>{
   "swagger": "2.0",
   "info": {
      "title": "Social Media 2.0 GUI API",
      "description": "Social Media 2.0 API specification",
      "version": "1.0"
   },
   "host": "socialmedia",
   "schemes": [
      "https"
   ],
   "produces": [
      "application/json"
   ],
   "paths": {
      "/v1/instance": {
         "get": {
            "summary": "List all instances.",
            "tags": [
               "instance"
            ],
            "responses": {
               "200": {
                  "description": "List of all instances."
               }
            }
         },
         "post": {
            "summary": "Creates an instance.",
            "parameters": [
               {
                  "name": "name",
                  "in": "formData",
                  "description": "The name of the client.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "nameid",
                  "in": "formData",
                  "description": "The user might choose the instance nameid, which is a representation of\nthe name with NO specials characters or spaces and maximum of 25.\nIf not supplied, the backend generates one from the name. Once set,\nit cannot be changed.\n",
                  "type": "string",
                  "required": false
               }
            ],
            "tags": [
               "instance"
            ],
            "responses": {
               "200": {
                  "description": "Instance created."
               },
               "400": {
                  "description": "Invalid or missing parameters."
               },
               "409": {
                  "description": "Instance already exists."
               }
            }
         }
      },
      "/v1/instance/{instance_id}": {
         "put": {
            "summary": "Updates an instance.",
            "parameters": [
               {
                  "name": "instance_id",
                  "in": "path",
                  "description": "The instance ID.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "The updated instance name.",
                  "type": "string",
                  "required": true
               }
            ],
            "tags": [
               "instance"
            ],
            "responses": {
               "200": {
                  "description": "Instance updated."
               },
               "404": {
                  "description": "Instance not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "delete": {
            "summary": "Deletes an instance.",
            "parameters": [
               {
                  "name": "instance_id",
                  "in": "path",
                  "description": "The instance ID.",
                  "type": "string",
                  "required": true
               }
            ],
            "tags": [
               "instance"
            ],
            "responses": {
               "200": {
                  "description": "Instance deleted."
               },
               "404": {
                  "description": "Instance not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/instance/{instance_id}/client": {
         "get": {
            "summary": "Lists all clients under this instance.",
            "parameters": [
               {
                  "name": "instance_id",
                  "in": "path",
                  "description": "The instance ID.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "no_cache",
                  "in": "query",
                  "description": "If on, it bypass the cache.",
                  "type": "boolean",
                  "required": false
               }
            ],
            "tags": [
               "client"
            ],
            "responses": {
               "200": {
                  "description": "List of clients under the instance.",
                  "schema": {
                     "$ref": "#/definitions/ClientCreated"
                  }
               },
               "400": {
                  "description": "Missing required parameter.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Creates a client under this instance.",
            "parameters": [
               {
                  "name": "instance_id",
                  "in": "path",
                  "description": "The instance ID.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "The name of the client.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "nameid",
                  "in": "formData",
                  "description": "The user might choose his own nameid, which is a representation of\nthe name with NO specials characters or spaces and maximum of 25.\nIf not supplied, the backend generates one from the name. Once set,\nit cannot be changed.\n",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "language",
                  "in": "formData",
                  "description": "Language of the client, current choices are \"en\" or \"nl\". Defaults to \"en\"",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "timezone",
                  "in": "formData",
                  "description": "The client's timezone. Example is \"Europe/Tallinn\". For a full list, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "client"
            ],
            "responses": {
               "200": {
                  "description": "Client succesfully created.",
                  "schema": {
                     "$ref": "#/definitions/ClientCreated"
                  }
               },
               "400": {
                  "description": "Missing required parameter.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "409": {
                  "description": "Client already exists.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "delete": {
            "summary": "Deletes a client.",
            "parameters": [
               {
                  "name": "instance_id",
                  "in": "path",
                  "description": "The instance ID.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "client_id",
                  "in": "formData",
                  "description": "The client ID.",
                  "type": "string",
                  "required": true
               }
            ],
            "tags": [
               "client"
            ],
            "responses": {
               "200": {
                  "description": "Client succesfully deleted."
               },
               "404": {
                  "description": "Client not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/client": {
         "get": {
            "summary": "Lists all clients under all instances. Acessible only for SYSTEM users.",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "client",
               "system"
            ],
            "responses": {
               "200": {
                  "description": "A dictionary of lists. Each key is an instance ID and the value is a list of all clients under that instance."
               },
               "403": {
                  "description": "User cannot access it. Endpoint valid only for SYSTEM users.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/client/{client_id}": {
         "get": {
            "summary": "Gets detail of a client.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the user that is making the request",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "client"
            ],
            "responses": {
               "200": {
                  "description": "Client retrieved."
               },
               "404": {
                  "description": "Client not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "patch": {
            "summary": "Edits a client.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the user that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "The client name. Currently the only update-able field.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "instance_id",
                  "in": "formData",
                  "description": "The instance_id of the client. If not passed, will use the current one.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "default_retention_tag",
                  "in": "formData",
                  "description": "Sets default retention tag for account. Options currently are \"permanent\" and \"temporary\". It can also be sent empty or with string \"null\" to make it empty/null. If a value is in this field, then every activity captured will contain this tag as a retention tag.",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "alerts_enabled",
                  "in": "formData",
                  "description": "Sets if alerts is enabled for customer or not. Defaults to False.",
                  "type": "boolean",
                  "required": false
               }
            ],
            "tags": [
               "client"
            ],
            "responses": {
               "200": {
                  "description": "Client updated."
               },
               "404": {
                  "description": "Client not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/client/{client_id}/accounts": {
         "get": {
            "summary": "Retrieves clients accounts",
            "description": "The Client endpoint returns information about the accounts belonging to\na specific client. Filtering includes the network name.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the user that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "include_types",
                  "in": "query",
                  "description": "If true it will include what activity types that account has.",
                  "type": "boolean",
                  "required": false
               },
               {
                  "name": "network",
                  "in": "query",
                  "description": "shortname/id of the social media network to filter. Might be a CSV list.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "pagination token - defines pagination start",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "to define the order in which the accounts are displayed select from {'asc','desc'}",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "client"
            ],
            "responses": {
               "200": {
                  "description": "A dictionary with metadata plus the `data` array of accounts",
                  "schema": {
                     "$ref": "#/definitions/AccountList"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `client_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/url/info": {
         "get": {
            "summary": "Retrives information about a social media account based on the profile URL.",
            "parameters": [
               {
                  "name": "url",
                  "in": "query",
                  "description": "The full URL of the profile.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "network",
                  "in": "query",
                  "description": "Optional, works as a hint. The network of the account.",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "account"
            ],
            "responses": {
               "200": {
                  "description": "data of the account such as name, ID, network and profile type."
               },
               "404": {
                  "description": "Account not found in the social media.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "502": {
                  "description": "Trouble communicating with Social Media API.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account": {
         "post": {
            "summary": "Creates an account.",
            "description": "The minimum data for creating an account is client_id and url.\nWith this minimum input the SMAPI is capable of figuring out social network, account ID and name.\nIt is possible to trigger account authorization by sending the \"oauth\" parameter. In this case,\n\"admin_email\" must be supplied too.\n\nFor debugging purposes, you can send any database field name in the querystring and it will be inserted\ninto the database.\n\nIf \"sm_account_id\" is present, we will NOT validate the URL. In this case, you are supposed to provide all\nthe relevant fields to insert the account, such as sm_network, sm_type and so on.\n\nURL Validation Support:  Facebook and Twitter\nOAauth Support: Facebook, Twitter, LinkedIn, Yammer and Instagram.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "formData",
                  "description": "id for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "url",
                  "in": "formData",
                  "description": "The social media URL of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "capture_since",
                  "in": "formData",
                  "description": "An unix timestamp indicating an initial capture time.",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "capture_interval",
                  "in": "formData",
                  "description": "Number of seconds to wait between each account capture. If not passed, account will be captured using the default capture interval, currently 3600 seconds or 1 hour.",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "oauth",
                  "in": "formData",
                  "description": "If present, admin_email must be too. Note that some networks+types, REQUIRES OAuth. For these, this value will have no impact.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "usergroups_roles",
                  "in": "formData",
                  "description": "User group name and role name in the format of \"group_name:role_name\". You can pass multiple groups.\nA group can only contain one role. This associates the account with that group in a particular role.\nIn another words, this allows you to say:\n   - group1 is a VIEWER in this account.\n   - group2 is a MANAGER in this account.\n   - group1 is SUPER USER in another account.\n",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "paused",
                  "in": "formData",
                  "description": "By default, all accounts are created in a PAUSED state. If you dont want that, pass 0 in this flag.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "is_public",
                  "in": "formData",
                  "description": "By default, all accounts are private. This is a boolean flag to change that. When enabled, the public_slug will be assigned.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "admin_email",
                  "in": "formData",
                  "description": "The e-mail to which the OAuth authorization invitation will be sent.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "permission",
                  "in": "formData",
                  "description": "Additional permissions. So far, only \"inbox\" is supported. When used, we archive the inbox in FB too.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "oauth-message",
                  "in": "formData",
                  "description": "An email messge to be sent to the admin_email in case oauth is needed/requested.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "Account name - usually the account owner name or company name.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "sm_network",
                  "in": "formData",
                  "description": "The social media code, such as FB, TW and so on.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "sm_type",
                  "in": "formData",
                  "description": "The social media account type code, such as us, pg, pr, etc...",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "sm_account_id",
                  "in": "formData",
                  "description": "The social media ID itself. In other words, the use ID in the social media.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "enterprise",
                  "in": "formData",
                  "description": "if it's an enterprise account, such as Workplace, you should send true.",
                  "type": "boolean",
                  "required": false
               },
               {
                  "name": "community_id",
                  "in": "formData",
                  "description": "Optional for Workplace. Facebook now avails of a Graph API endpoint\nthat backend can retrieve this with a valid token. It is still accepte for\nbackwards compatibility, but it's not required anymore for Workplace.\nUser must copy and paste from his Workplace settings.\n",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "members_ids",
                  "in": "formData",
                  "description": "Used in Enterprise accounts. A CSV of user IDs that the user wishes to capture. These ids can be had in the Capturables endpoint.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "groups_ids",
                  "in": "formData",
                  "description": "Used in Enterprise accounts. A CSV of group IDs that the user wishes to capture. These ids can be had in the Capturables endpoint.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "token",
                  "in": "formData",
                  "description": "If you already have a token for the account (like Workplace), you can send it using token parameter. If this is sent, no authorization will be performed. Also \"connect\" will be saved as connected_through in the auth data.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "connected_through_name",
                  "in": "formData",
                  "description": "Used if token is sent, the name of the person who authorized.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "connected_through_surname",
                  "in": "formData",
                  "description": "Used if token is sent, the surname of the person who authorized.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "token_expires",
                  "in": "formData",
                  "descrition": "When the token expires, a timestamp in seconds. Don't send for infinite or use 0.",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "is_3rdparty",
                  "in": "formData",
                  "description": "If true, tells the backend that we must capture this account with the user private token.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "preferences",
                  "in": "formData",
                  "type": "string",
                  "required": false,
                  "description": "list of preferences for account separated by comma"
               }
            ],
            "tags": [
               "account"
            ],
            "responses": {
               "200": {
                  "description": "Account inserted successfully."
               },
               "400": {
                  "description": "Missing a required field or invalid profile token.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user_id does not have the permission for this operation",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Client/User not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "You requested OAuth but this network+type does not support OAuth at all.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "delete": {
            "summary": "Purges one or more account(s) completely.",
            "description": "Purges one or more accounts in background. This request only returns a 202 - Accepted response.\nAccount purging is managed in background, so that the consumer won't hang waiting for the request to complete.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "query",
                  "description": "id for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "query",
                  "description": "One or more account IDs separated by comma (CSV).",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "bulk",
               "account"
            ],
            "responses": {
               "202": {
                  "description": "Account(s) correctly queued for purge"
               },
               "400": {
                  "description": "Missing a required field or invalid profile token.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user_id does not have the permission for this operation",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/enterprise/{client_id}/": {
         "get": {
            "summary": "Lists all enterprise groups of a client or all in case of system user and client_id not specified",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The client to list all enterprise accounts belonging to it. it's optional"
               }
            ],
            "tags": [
               "enterprise"
            ],
            "responses": {
               "200": {
                  "description": "A list of enterprises accounts."
               },
               "404": {
                  "description": "client not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Create enterprise group with auto creating accounts specified or all if no members_ids or groups_ids specified",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The client to list all enterprise accounts belonging to it. it's optional"
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "description": "Data to create group with. members_ids and groups_ids are optional",
                  "schema": {
                     "type": "object",
                     "properties": {
                        "client_id": {
                           "type": "string"
                        },
                        "name": {
                           "type": "string"
                        },
                        "sm_network": {
                           "type": "string"
                        },
                        "url": {
                           "type": "string"
                        },
                        "usergroups_roles": {
                           "type": "string"
                        },
                        "token": {
                           "type": "string"
                        },
                        "members_ids": {
                           "type": "array",
                           "description": "Array with user IDs to be captured. Effectively leaves out whatever users are not in this array.",
                           "items": {
                              "type": "string"
                           }
                        },
                        "groups_ids": {
                           "type": "array",
                           "description": "Array with group IDs to be captured. Effectively leaves out whatever groups are not in this array.",
                           "items": {
                              "type": "string"
                           }
                        },
                        "enable_users": {
                           "type": "boolean",
                           "description": "If True, usrs will be added, enabled and captured. Defaults to True."
                        },
                        "enable_groups": {
                           "type": "boolean",
                           "description": "If True, groups will be added, enabled and captured. Defaults to True."
                        },
                        "automatic_management": {
                           "type": "boolean",
                           "description": "If True, new users and groups will be automatically added. Defaults to True."
                        },
                        "thirdparty_app": {
                           "type": "boolean",
                           "description": "If the flow comes from the installable app, then you have to pass that “thirdparty_app=1” when calling this. If it’s the old-style of just using an acccess token pasted in sm2, then you have to leave that at 0."
                        }
                     }
                  }
               }
            ],
            "tags": [
               "enterprise"
            ],
            "responses": {
               "200": {
                  "description": "A list of enterprises accounts."
               },
               "404": {
                  "description": "client not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/enterprise/{client_id}/{enterprise_id}/force_capture": {
         "get": {
            "summary": "Force capture all accounts",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "type": "string",
                  "required": true,
                  "description": "The client_id that owns the enterprise ID."
               },
               {
                  "name": "enterprise_id",
                  "in": "path",
                  "type": "string",
                  "required": true,
                  "description": "The enterprise ID as returned by the list (aka group_id)."
               },
               {
                  "name": "active_only",
                  "in": "query",
                  "type": "boolean",
                  "required": false,
                  "description": "If set to True, will force capture only active accounts"
               }
            ],
            "tags": [
               "enterprise"
            ],
            "responses": {
               "200": {
                  "description": "Detail of an enterprise, including list of accounts."
               },
               "404": {
                  "description": "client not found or enterprise not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "A precondition failed. Used when account needs to be authorized but has not been yet.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/enterprise/{client_id}/{enterprise_id}": {
         "get": {
            "summary": "Details a enterprise group, including a list of all accounts.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "type": "string",
                  "required": true,
                  "description": "The client_id that owns the enterprise ID."
               },
               {
                  "name": "enterprise_id",
                  "in": "path",
                  "type": "string",
                  "required": true,
                  "description": "The enterprise ID as returned by the list (aka group_id)."
               },
               {
                  "name": "archived_only",
                  "in": "query",
                  "type": "boolean",
                  "required": false,
                  "description": "If set to True, will return only accounts that are currently being captured."
               }
            ],
            "tags": [
               "enterprise"
            ],
            "responses": {
               "200": {
                  "description": "Detail of an enterprise, including list of accounts."
               },
               "404": {
                  "description": "client not found or enterprise not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "delete": {
            "summary": "Details a enterprise group, including  all accounts. only if all acccounts are apused and group paused too",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "type": "string",
                  "required": true,
                  "description": "The client_id that owns the enterprise ID."
               },
               {
                  "name": "enterprise_id",
                  "in": "path",
                  "type": "string",
                  "required": true,
                  "description": "The enterprise ID as returned by the list (aka group_id)."
               }
            ],
            "tags": [
               "enterprise"
            ],
            "responses": {
               "200": {
                  "description": "Group deleted"
               }
            }
         },
         "patch": {
            "summary": "Updates the details of a group.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "type": "string",
                  "required": true,
                  "description": "The client_id that owns the enterprise ID."
               },
               {
                  "name": "enterprise_id",
                  "in": "path",
                  "type": "string",
                  "required": true,
                  "description": "The enterprise ID as returned by the list (aka group_id)."
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "type": "object",
                     "properties": {
                        "token": {
                           "type": "string"
                        },
                        "account_ids": {
                           "type": "array",
                           "items": {
                              "type": "string"
                           }
                        },
                        "paused": {
                           "type": "string",
                           "description": "if set will pause or unpause group and all related accounts"
                        }
                     }
                  }
               }
            ],
            "tags": [
               "enterprise"
            ],
            "responses": {
               "200": {
                  "description": "Updated succesffully."
               },
               "400": {
                  "description": "Nothing to update, no parameters sent to update.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/enterprise/capturables": {
         "post": {
            "summary": "Valid only for enterprise accounts.\n\nIt is possible that a customer wants to choose which profiles or groups he wants to\ncapture in his enterprise account. This endpoint returns a list of users and groups\nso the customer can pick it. This information can then be passed to the endpoint that\nadds an account.\n\nWe use POST because we do not want the customer's token traveling exposed on the URL.\n\nFor now this endpoint only supports Workplace by Facebook.\n",
            "parameters": [
               {
                  "name": "community_id",
                  "in": "formData",
                  "type": "string",
                  "required": false,
                  "description": "The community_id of the Workplace."
               },
               {
                  "name": "token",
                  "in": "formData",
                  "type": "string",
                  "required": true,
                  "description": "The admin access_token."
               },
               {
                  "name": "thirdparty_app",
                  "in": "formData",
                  "type": "boolean",
                  "required": false,
                  "description": "If the flow comes from the installable app, then you have to pass that “thirdparty_app=1” when calling this. If it’s the old-style of just using an acccess token pasted in sm2, then you have to leave that at 0."
               },
               {
                  "name": "email",
                  "in": "formData",
                  "type": "string",
                  "description": "If passed, will only return accounts with that email. No groups will be returned.",
                  "required": false
               },
               {
                  "name": "name",
                  "in": "formData",
                  "type": "string",
                  "description": "If passed, will only return accounts containing that name. This is valid for both users and groups.",
                  "required": false
               },
               {
                  "name": "refresh",
                  "in": "formData",
                  "type": "string",
                  "description": "By default, data is cached, If you want to force a refresh of member list, send refresh=1.",
                  "required": false
               }
            ],
            "tags": [
               "account",
               "enterprise"
            ],
            "responses": {
               "200": {
                  "description": "A dict with \"groups\" and \"users\" each containing a list."
               },
               "400": {
                  "description": "Missing mandatory arguments.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/resolve_address/{slug}": {
         "get": {
            "summary": "Gets the Account ID assigned to the address slug",
            "parameters": [
               {
                  "name": "slug",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The slug to look for an account assigned"
               }
            ],
            "tags": [
               "account"
            ],
            "responses": {
               "200": {
                  "description": "The account ID assigned"
               },
               "404": {
                  "description": "client or account not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/{account_id}": {
         "get": {
            "summary": "Gets account detail.",
            "parameters": [
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "if of the account to be updated",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "client_id",
                  "in": "formData",
                  "description": "id for the client that owns the account",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "account"
            ],
            "responses": {
               "200": {
                  "description": "account retrieved."
               },
               "400": {
                  "description": "Missing parameter or validation failed.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Account not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "patch": {
            "summary": "Edits an account. Note that only the fields listed are editable.",
            "parameters": [
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "if of the account to be updated",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "client_id",
                  "in": "formData",
                  "description": "id for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "capture_since",
                  "in": "formData",
                  "description": "An unix timestamp indicating an initial capture time.",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "capture_interval",
                  "in": "formData",
                  "description": "Number of seconds to wait between each account capture. If not passed, account will be captured using the default capture interval, currently 3600 seconds or 1 hour.",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "paused",
                  "in": "formData",
                  "description": "By default, all accounts are created in a PAUSED state. If you dont want that, pass 0 in this flag.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "admin_email",
                  "in": "formData",
                  "description": "The e-mail to which the OAuth authorization invitation will be sent.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "Account name - usually the account owner name or company name.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "preferences",
                  "in": "formData",
                  "type": "array",
                  "required": false,
                  "description": "list of preferences for account",
                  "items": {
                     "type": "string"
                  }
               }
            ],
            "tags": [
               "account"
            ],
            "responses": {
               "200": {
                  "description": "account paused or unpaused."
               },
               "400": {
                  "description": "Missing parameter or validation failed.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Account not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/{client_id}/{action}": {
         "post": {
            "summary": "Performs bulk administrative actions on an account. The possible options for bulk actions are \"pause\" and \"unpause\".\n\nAll parameters are the same as /v1/account/{client_id}/{account_id}/{action} except for account_id that moves\nfrom the URL to the body.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "formData",
                  "required": true,
                  "type": "string",
                  "description": "A CSV list of account_ids to be paused or unpaused."
               },
               {
                  "name": "action",
                  "in": "path",
                  "description": "The action to be taken, \"pause\" or \"unpause\".",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "_all",
                  "in": "formData",
                  "description": "If passed, will perform bulk actions on ALL accounts of the client.",
                  "required": false,
                  "type": "boolean"
               }
            ],
            "tags": [
               "bulk",
               "account"
            ],
            "responses": {
               "200": {
                  "description": "Bulk action done successfully."
               },
               "400": {
                  "description": "Missing parameter or invalid request."
               }
            }
         }
      },
      "/v1/account/{client_id}/{account_id}/{action}": {
         "post": {
            "summary": "Performs administrative actions on an account.\n\nThe possible options for action are\n\"pause\", \"unpause\", \"force_capture\" and \"resend_auth_email\".\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "action",
                  "in": "path",
                  "description": "The action to be taken, \"pause\", \"unpause\" or \"force_capture\". Any other value will return a 404.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "email",
                  "in": "query",
                  "description": "If specified, will resend authorization email to another email. Only has effect if action is \"resend_auth_email\"",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided from the Pagefreezer API",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "account",
               "account pause",
               "email",
               "authorization"
            ],
            "responses": {
               "200": {
                  "description": "account paused or unpaused."
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Account not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/{client_id}/{account_id}/timeseries/creation": {
         "get": {
            "summary": "timeseries based on activity creation for an account",
            "description": "Returns a list of activity root IDs ordered by creation time.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided from the Pagefreezer API",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "to define the order in which the accounts are displayed select from {'asc','desc'}",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "account"
            ],
            "responses": {
               "200": {
                  "description": "A list of activities ordered by creation time."
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/{client_id}/{account_id}/timeseries/capture": {
         "get": {
            "summary": "logged history timeseries for an account",
            "description": "Returns time series with the details about the captures\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided from the Pagefreezer API",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "pagination token - defines pagination start",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "to define the order in which the accounts are displayed select from {'asc','desc'}",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "account"
            ],
            "responses": {
               "200": {
                  "description": "Alist of captures dictionaries.",
                  "schema": {
                     "$ref": "#/definitions/CaptureTimeseries"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{last_seen_ts}": {
         "get": {
            "summary": "Retrieve entities older than on last_seen_ts.",
            "description": "Useful for paginating large quantities of comments or messages.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "root_id",
                  "in": "path",
                  "description": "id of the activity etntity belongs to",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "group",
                  "in": "path",
                  "description": "type of entity: comments or messages",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "last_seen_ts",
                  "in": "path",
                  "description": "sm_creation_ts of the oldest entity you have loaded already.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided from the Pagefreezer API",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page",
                  "required": false,
                  "type": "integer"
               }
            ],
            "tags": [
               "entity"
            ],
            "responses": {
               "200": {
                  "description": "A list of entities."
               },
               "400": {
                  "description": "Incomplete request or conflicting parameters.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/account/{client_id}/{account_id}/activity": {
         "get": {
            "summary": "Data on the accounts' activities",
            "description": "provides with the data and details of all the activities happened inside an account.\nThe activity/activities retrieved depend on the query options set.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_info",
                  "in": "query",
                  "description": "If true, will have an `activities` key in the response with statistics per activity type.",
                  "type": "boolean",
                  "required": false
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided from the Pagefreezer API",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "pagination token - defines pagination start",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "to define the order in which the accounts are displayed select from {'asc','desc'}",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "activity",
                  "in": "query",
                  "description": "queries a specific activity or activities, defined by a CSV select from activities available",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "entities_size",
                  "in": "query",
                  "type": "integer",
                  "required": false,
                  "description": "This controls how many comments/messages you want to return per activiy. This is useful\nto load activities only with X number of comments. If you specify 5 here,\nonly the last 5 comments/messages per activity will be loaded from the DB.\nIf not passed, will load all entities of every activity retrieved.\n\nFor loading more, you can see the paginating entities endpoint:\n  /v1/activities/{client_id}/{account_id}/{root_id}/{group}/{last_seen_ts}\n"
               },
               {
                  "name": "grouped",
                  "in": "query",
                  "description": "It is activated by default. When on, it returns only latest activity and groups the history\ntimestamps under \"activity_ts_history\". If false, it will not group, returning every\nsingle activity and the history key will not be present.\n",
                  "required": false,
                  "type": "boolean",
                  "default": true
               },
               {
                  "name": "creation_ts_from",
                  "in": "query",
                  "description": "If passed, will return only activities created from that point in time.\nWhenever possible that time is the time that the post/content was created\nin the social media network. You can use this in conjunction with\ncreation_ts_to to perform a range filter.\n",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "creation_ts_to",
                  "in": "query",
                  "description": "If passed, will return only activities created up to that point in time.\nWhenever possible that time is the time that the post/content was created\nin the social media network. You can use this in conjunction with\ncreation_ts_from to perform a range filter.\n",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "connected_on",
                  "in": "query",
                  "description": "A capture connection timestamp to filter the activities retrieved.\nIf this is supplied, only activities captured at this specific timestamp\nwill be retrieved. If no capture happened at all, it will return a 404.\nNote that this is different than a capture with 0 new activities.\n",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "connected_to",
                  "in": "query",
                  "description": "A capture connection timestamp to filter the activities retrieved.\nIf supplied with the connected_on period, retrieves all activities\nin this time RANGE. It has no effect if supplied alone. If no capture\nhappened at all, it will return a 404. If no capture happened at all,\nit will return a 404.\nNote that this is different than a capture with 0 new activities.\n",
                  "type": "integer",
                  "required": false
               }
            ],
            "tags": [
               "account"
            ],
            "responses": {
               "200": {
                  "description": "A dictionary with metadata plus the `data` array of accounts' activities",
                  "schema": {
                     "$ref": "#/definitions/ActivityList"
                  }
               },
               "400": {
                  "description": "Incomplete request or conflicting parameters.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` was not found inside the system or no capture happened in the specified connected_on/connected_to time.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/{id}": {
         "get": {
            "summary": "Data on specific activity of an account",
            "description": "If an activity_root_id is passed:\n  Returns the timeline of a specific activity. The activity is\n  supported by the social media account.\n  It returns the list of all the changes that the `:activity_id` has had. These changes\n  are the *snapshots* of such activity.\n\nIf an activity_id is passed:\n  Returns a single activity.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "description": "id of the activity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "diff",
                  "in": "query",
                  "description": "If true, returns last snapshot along with the difference from previous snapshots. Valid only for activity_root_id.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "start_ts",
                  "in": "query",
                  "description": "An int timestamp. When present, will only return snapshots that were captured after the given time. Valid only for when then ID passed is an activity_root_id.",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "end_ts",
                  "in": "query",
                  "description": "An int timestamp. When present, will only return snapshots that were captured before the given time. Valid only for when then ID passed is an activity_root_id.",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "subtype",
                  "in": "query",
                  "description": "If passed, it selects the field by the subtypes defined in conf/activity_subtypes.yaml. You can pass multiple sub-types separated by comma. If you pass this, you must NOT pass the fields argument.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided from the Pagefreezer API",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "pagination token - defines pagination start, valid only for activity_root_id.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page, valid only for activity_root_id.",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "to define the order in which the accounts are displayed select from {'asc','desc'}, valid only for activity_root_id.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "full_activity",
                  "in": "query",
                  "description": "by default returns activity and all entities, if set to False will return only activity data",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "grouped",
                  "in": "query",
                  "description": "When on, it returns only latest activity and groups the history\ntimestamps under \"activity_ts_history\". If false, it will not group, returning every\nsingle activity and the history key will not be present.\n"
               }
            ],
            "tags": [
               "activity"
            ],
            "responses": {
               "200": {
                  "description": "A dictionary with metadata plus the data array of snapshots of that activity or map of activities data if multiple ids provided",
                  "schema": {
                     "$ref": "#/definitions/ActivityData"
                  }
               },
               "400": {
                  "description": "Raised if we cannot resolve the names passed in fields.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` or `activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "Returned when there is only 1 snapshot of an activity so there is no way we can perform a diff.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/smid/{sm_activity_id}": {
         "get": {
            "summary": "Data on specific activity of an account",
            "description": "Returns a single activity.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_activity_id",
                  "in": "formData",
                  "description": "A comma separated list of sm_activity_id to get from the database (acc_smid1,acc_smid2,...)",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "activity"
            ],
            "responses": {
               "200": {
                  "description": "A dictionary with data array of that activity",
                  "schema": {
                     "$ref": "#/definitions/ActivityData"
                  }
               },
               "404": {
                  "description": "The `sm_activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/{root_id}/tag/retention": {
         "post": {
            "summary": "Updates the tag on an activity.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "root_id",
                  "in": "path",
                  "description": "activity_root_id of the activity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "tag",
                  "in": "formData",
                  "description": "The new tag name. Currently only \"permanent\" and \"temporary\" are valid. If you send \"\" (empty) or \"null\", it will be updated to null.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_creation_ts",
                  "in": "formData",
                  "description": "The sm_creation_ts of the activity. Required to find it in the database.",
                  "required": true,
                  "type": "int"
               }
            ],
            "tags": [
               "activity",
               "retention",
               "tags"
            ],
            "responses": {
               "200": {
                  "description": "Activity updated."
               },
               "400": {
                  "description": "Raised if sm_creation_ts or tag is missing/invalid.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/{root_id}/{entity_type}/{sm_activity_id}/{sm_creation_ts}/tag/retention": {
         "post": {
            "summary": "Updates the retention tag on an activity entity.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "root_id",
                  "in": "path",
                  "description": "activity_root_id of the activity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "tag",
                  "in": "formData",
                  "description": "The new tag name. Currently only \"permanent\" and \"temporary\" are valid. If you send \"\" (empty) or \"null\", it will be updated to null.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_activity_id",
                  "in": "formData",
                  "description": "The sm_activity_id of the entity. Required to find it in the database.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "entity_type",
                  "in": "formData",
                  "description": "The entity type. Usually \"comments\", \"replies\" or \"messages\". Required to find it in the database.",
                  "required": true,
                  "type": "int"
               },
               {
                  "name": "sm_creation_ts",
                  "in": "formData",
                  "description": "The sm_creation_ts of the entity. Required to find it in the database.",
                  "required": true,
                  "type": "int"
               }
            ],
            "tags": [
               "entity",
               "retention",
               "tags"
            ],
            "responses": {
               "200": {
                  "description": "Entity updated."
               },
               "400": {
                  "description": "Raised if sm_creation_ts or tag is missing/invalid.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/{id}/{action}": {
         "get": {
            "summary": "Set flag on activity or remove it",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "description": "id of the activity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "action",
                  "in": "path",
                  "description": "value is \"flag\" or \"unflag\"",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "activity"
            ],
            "responses": {
               "200": {
                  "description": "Returns \"updated\" message in cause of success",
                  "schema": {
                     "$ref": "#/definitions/ActivityData"
                  }
               },
               "400": {
                  "description": "Raised if we cannot resolve the names passed in fields.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` or `activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "Returned when there is only 1 snapshot of an activity so there is no way we can perform a diff.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{sm_activity_id}/{sm_creation_ts}/{action}": {
         "get": {
            "summary": "Set flag on activity entity or remove it",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "root_id",
                  "in": "path",
                  "description": "id of the activity etntity belongs to",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "group",
                  "in": "path",
                  "description": "type of entity: comments|messages|replies",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_activity_id",
                  "in": "path",
                  "description": "social media id of entity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_creation_ts",
                  "in": "path",
                  "description": "timestamp when entity was created",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "action",
                  "in": "path",
                  "description": "value is \"flag\" or \"unflag\"",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "activity"
            ],
            "responses": {
               "200": {
                  "description": "Returns \"updated\" message in cause of success",
                  "schema": {
                     "$ref": "#/definitions/ActivityData"
                  }
               },
               "400": {
                  "description": "Raised if we cannot resolve the names passed in fields.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` or `activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "Returned when there is only 1 snapshot of an activity so there is no way we can perform a diff.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/": {
         "post": {
            "summary": "Data on specific activity of an account",
            "description": "If an activity_root_id is passed:\n  Returns the timeline of a specific activity. The activity is\n  supported by the social media account.\n  It returns the list of all the changes that the `:activity_id` has had. These changes\n  are the *snapshots* of such activity.\n\nIf an activity_id is passed:\n  Returns a single activity.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "body",
                  "in": "body",
                  "description": "id of the activitym or list of ids comma separated",
                  "required": true,
                  "schema": {
                     "type": "object",
                     "properties": {
                        "ids": {
                           "type": "array",
                           "items": {
                              "type": "string",
                              "description": "list of ids"
                           }
                        }
                     }
                  }
               },
               {
                  "name": "diff",
                  "in": "query",
                  "description": "If true, returns last snapshot along with the difference from previous snapshots. Valid only for activity_root_id.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "start_ts",
                  "in": "query",
                  "description": "An int timestamp. When present, will only return snapshots that were captured after the given time. Valid only for when then ID passed is an activity_root_id.",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "end_ts",
                  "in": "query",
                  "description": "An int timestamp. When present, will only return snapshots that were captured before the given time. Valid only for when then ID passed is an activity_root_id.",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "subtype",
                  "in": "query",
                  "description": "If passed, it selects the field by the subtypes defined in conf/activity_subtypes.yaml. You can pass multiple sub-types separated by comma. If you pass this, you must NOT pass the fields argument.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided from the Pagefreezer API",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "pagination token - defines pagination start, valid only for activity_root_id.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page, valid only for activity_root_id.",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "to define the order in which the accounts are displayed select from {'asc','desc'}, valid only for activity_root_id.",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "activity"
            ],
            "responses": {
               "200": {
                  "description": "A dictionary with metadata plus the data array of snapshots of that activity or map of activities data if multiple ids provided",
                  "schema": {
                     "$ref": "#/definitions/ActivityData"
                  }
               },
               "400": {
                  "description": "Raised if we cannot resolve the names passed in fields.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` or `activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "Returned when there is only 1 snapshot of an activity so there is no way we can perform a diff.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/{account_id}/{activity_root_id}/{entity_type}/{sm_activity_id}": {
         "get": {
            "summary": "Get a specific entity. Currently, only entity_type supported is comments.",
            "tags": [
               "entity",
               "activity"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "activity_root_id",
                  "in": "path",
                  "description": "root id of the activity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "entity_type",
                  "in": "path",
                  "description": "The entity type. Currently, only \"comments\" is supported.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_activity_id",
                  "in": "path",
                  "description": "The sm_activity_id of the entity. You will find it when retrieving the activity. Every comment has one.",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Entity found and returned."
               },
               "404": {
                  "description": "Entity not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/publicportal/address/{slug}": {
         "get": {
            "summary": "Get the client info associated with an address",
            "parameters": [
               {
                  "name": "slug",
                  "in": "path",
                  "description": "the address to check for publicportal",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "public portal"
            ],
            "responses": {
               "200": {
                  "description": "Client information."
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/publicportal/domain/{domain}": {
         "get": {
            "summary": "Get the client info associated with an domain",
            "parameters": [
               {
                  "name": "domain",
                  "in": "path",
                  "description": "the domain to check for publicportal",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "public portal"
            ],
            "responses": {
               "200": {
                  "description": "Client information."
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/client/{client_id}/publicportal": {
         "get": {
            "summary": "Get the Client's Public Portal settings.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "public portal"
            ],
            "responses": {
               "200": {
                  "description": "Portal settings."
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "put": {
            "summary": "Saves the client Public Portal settings. You can use this endpoint to write\nthe settings as many times as you want. There's no separate endpoint for saving\nand then editing. You must always send everything again.\n",
            "consumes": [
               "multipart/form-data"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "enabled",
                  "in": "formData",
                  "description": "If the Public Portal is enabled or not, aka Published.",
                  "required": true,
                  "type": "boolean"
               },
               {
                  "name": "address",
                  "in": "formData",
                  "description": "The Portal address. Required if enabled is true.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "custom_domain_enabled",
                  "in": "formData",
                  "description": "If the Portal uses a Custom Domain.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "custom_domain",
                  "in": "formData",
                  "description": "The Portal custom domain. Required if custom_domain_enabled is true.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "required": false,
                  "description": "The portal name.",
                  "type": "string"
               },
               {
                  "name": "title",
                  "in": "formData",
                  "description": "The Portal title.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "introduction",
                  "in": "formData",
                  "description": "The Portal introduction.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "hide_comments_in_results",
                  "in": "formData",
                  "description": "If true, will hide comments in search result.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "w3c",
                  "in": "formData",
                  "description": "If true, w3c will be enabled as search filter.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "dublic_code",
                  "in": "formData",
                  "description": "If true, Dublic Code will be enabled as search filter.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "overheid_nl",
                  "in": "formData",
                  "description": "If true, Overhdi NL will be enabled as search filter.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "ga_enabled",
                  "in": "formData",
                  "description": "If true, Google Analytics will be enabled.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "ga_tracking_id",
                  "in": "formData",
                  "description": "Google analytics tracking ID, required if ga_enabled is true.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "logo_image",
                  "in": "formData",
                  "description": "An uploaded image to be used as a logo.",
                  "required": false,
                  "type": "file"
               },
               {
                  "name": "background_image_file",
                  "in": "formData",
                  "description": "An uploaded image to be used as a logo.",
                  "required": false,
                  "type": "file"
               },
               {
                  "name": "layout",
                  "in": "formData",
                  "description": "Layout type. Defaults to full_width.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "font",
                  "in": "formData",
                  "description": "Font type.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "background_image",
                  "in": "formData",
                  "description": "Background image. Defauls to blue_geometric.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "theme",
                  "in": "formData",
                  "description": "Defaults to 'default'",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "background_primary",
                  "in": "formData",
                  "description": "Primary background color.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "background_secondary",
                  "in": "formData",
                  "description": "Secondary background color.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "heading",
                  "in": "formData",
                  "description": "Heading",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "border_top_size",
                  "in": "formData",
                  "description": "Border top size",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "border_top_color",
                  "in": "formData",
                  "description": "Border top color",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "border_bottom_size",
                  "in": "formData",
                  "description": "Border bottom size",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "border_bottom_color",
                  "in": "formData",
                  "description": "Border bottom color",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "public portal"
            ],
            "responses": {
               "200": {
                  "description": "Portal settings."
               },
               "400": {
                  "description": "Validation error, missing parameter.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/client/{client_id}/publicportal/archives": {
         "post": {
            "summary": "Saves the archives list in the client Public Portal settings. You can use this endpoint to write\nboth the accounts list and websites list.\n",
            "consumes": [
               "multipart/form-data"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "archives",
                  "in": "formData",
                  "description": "A comma separated list of accounts IDs (acc_id1,acc_id2,...)",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "websites",
                  "in": "formData",
                  "description": "A comma separated list of websites IDs (acc_id1,acc_id2,...)",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "pinned",
                  "in": "formData",
                  "description": "A comma separated list of\naccounts/websites IDs (acc_id1,acc_id2,...) to show as pinned",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "public portal"
            ],
            "responses": {
               "200": {
                  "description": "Portal settings."
               },
               "400": {
                  "description": "Validation error, missing parameter.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/client/{client_id}/publicportal/archives/{operation}": {
         "post": {
            "summary": "Saves a archive/website ID to the pinned list\n",
            "consumes": [
               "multipart/form-data"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "archive_id",
                  "in": "formData",
                  "description": "A single account/website ID",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "operation",
                  "in": "path",
                  "description": "The operation to perform: pin|unpin",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "public portal"
            ],
            "responses": {
               "200": {
                  "description": "Portal settings."
               },
               "400": {
                  "description": "Validation error, missing parameter.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/client/{client_id}/accounts/search": {
         "get": {
            "summary": "Search for accounts inside a client.",
            "description": "Return accounts that matches specified criteria.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id to perform the search on",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "_all",
                  "in": "query",
                  "description": "Returns all of the accounts for this particular instance_id/client_id. Makes sense only if used without other filters. This will always cause it to display ALL accounts.",
                  "required": false,
                  "type": "boolean"
               },
               {
                  "name": "sm_account_email",
                  "in": "query",
                  "description": "Will search only for accounts registered with that email. Mind that this works only for Workplace for now, they are the only ones with emails.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "paused",
                  "in": "query",
                  "description": "if 1 (true) will return only paused accounts. If 0 (false) will return only unpaused accounts. If you don't want to filter by this parameter, do NOT send it.",
                  "type": "boolean",
                  "required": false
               },
               {
                  "name": "name",
                  "in": "query",
                  "description": "A name to search for. This will match with the account name.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "network",
                  "in": "query",
                  "description": "If you want to narrow per network, you can send this. You can also search across multiple networks by splitting them in comma as in \"facebook,twitter\"",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "type",
                  "in": "query",
                  "description": "If you want to narrow per type, you can send this. You can also search across multiple types by splitting them in comma as in \"page,user\"",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "The size to be returned, defaults to 10.",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "offset",
                  "in": "query",
                  "description": "The offset to be skipped, much like SQL. Useful for paginations.",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "sort_field",
                  "in": "query",
                  "description": "The field to sort the result.\n\nAllowed options are name, network, type, last_capture, next_capture,\ntotal_activities and new_activities.\n\nThe default is to sort by most relevant (_score).\n",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "The order of the result. Allowed options are asc or desc.",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "_use_fallback",
                  "in": "query",
                  "description": "If true, it will use the database fallback. This should be used for tests only.",
                  "type": "boolean",
                  "required": false
               }
            ],
            "tags": [
               "account",
               "search"
            ],
            "responses": {
               "200": {
                  "description": "Search done successfully. data might be empty if no matching accounts were found.",
                  "schema": {
                     "$ref": "#/definitions/AccountList"
                  }
               },
               "400": {
                  "description": "Invalid format for a parameter or empty search criteria.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "502": {
                  "description": "Communication problems with our Search Engine.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/activities/{client_id}/search": {
         "get": {
            "summary": "Search for actitivies inside an account or all accounts of a client.",
            "description": "Returns activity matching criteria specified in the query parameters.\nYou can specify one or more parameters.\nIt returns the list of all activities found by our Search Engine.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id to perform the search on",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "query",
                  "description": "Optional. If not passed, will search in all accounts of a client. If passed, will search only in that account. You can specify multiple accounts using CSV.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "search_id",
                  "in": "query",
                  "description": "On the first response, you'll receive a search_id.\n\nThis ID must be used to get the *next* page of results. If this ID is not passed, you will get the results\nfrom the beginning. Think of it as a cursor.\n\nIf you are starting a new search with different parameters, do NOT send this.\n\nOn the unlikely event that the cache is down, you will NOT receive this but you will\nreceive a \"warning\" element that will say \"pagination_cache_disabled\". When this happens,\nyour search will not fail, we'll serve a fixed amount of results (100) and you will NOT\nbe able to paginate. There will be NO search_id in this case.\n\nThis strikes a balance between making the search unavailable or opening ourselves\nto a denial-of-service attack.\n",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "author",
                  "in": "query",
                  "description": "Search by author name.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "month",
                  "in": "query",
                  "description": "Search by month range. Format is like yyyy-MM, such as 2017-02 or 2016-10",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "index",
                  "in": "query",
                  "description": "Search specific index type such as facebook_story, twitter_tweet, linkedin_about. If left blank, will search in all.",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "date.lte",
                  "in": "query",
                  "description": "Epoch in SECONDS to search for a date range. This will get only activities less than or equal that timestamp. Can be provided together with date.gte",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "date.gte",
                  "in": "query",
                  "description": "Epoch in SECONDS to search for a date range. This will get only activities greater than or equal that timestamp. Can be provided together with date.lte",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "author.raw",
                  "in": "query",
                  "description": "Used to match EXACT authors. If you use only \"author\" and pass \"Donald Duck\", there'll be matches for both \"Donald\" and for \"Duck\". author.raw lets you search precisely for \"Donald Duck.\"",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "content",
                  "in": "query",
                  "description": "Searches for a term inside the activity content.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "attachment.content",
                  "in": "query",
                  "description": "Searches for a term inside the attachments/files content.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "changed",
                  "in": "query",
                  "description": "Returns only activities which have changes. If you pass both changed and deleted, it will return changed activities OR deleted activities.",
                  "type": "boolean",
                  "required": false
               },
               {
                  "name": "flagged",
                  "in": "query",
                  "description": "Returns only activities which have been flagged.",
                  "type": "boolean",
                  "required": false
               },
               {
                  "name": "deleted",
                  "in": "query",
                  "description": "Returns only activities which were deleted. If you pass both changed and deleted, it will return changed activities OR deleted activities.",
                  "type": "boolean",
                  "required": false
               },
               {
                  "name": "_operator",
                  "in": "query",
                  "description": "By default, when you specify multiple filtering criterias we use AND as the logical operator. However, if you want an OR, you can define this argument to be OR.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "Size of search. By default returns 10 occurrences. Maximum is 1000.",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "offset",
                  "in": "query",
                  "description": "The offset of the search by the number specified. Used in pagination.",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "only_raw",
                  "in": "query",
                  "description": "If true, will return the raw data that ElasticSearch returned. Useful for debugging.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "sort_field",
                  "in": "query",
                  "description": "The field to sort the result.\n\nAllowed options are creation and modified.\n\nThe default is to sort by creation date, desc.\n",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "timezone",
                  "in": "query",
                  "description": "The timezone to use to determine the proper month buckets.\nThis is only use for the daterange values, not the activity data which should always be UTC.\n\nAllowed values can be in two different formats:\n- offset in minutes related to UTC (e.g. -180 for -03:00)\n- identifier used in the TZ database (e.g. \"America/Los_Angeles\")\n\nThe default is to use UTC.\n",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "The order of the result. Allowed options are asc or desc.",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "full_activity",
                  "in": "query",
                  "description": "If true, will return full activity data including all related entities.",
                  "required": false,
                  "type": "boolean"
               }
            ],
            "tags": [
               "activity",
               "search"
            ],
            "responses": {
               "200": {
                  "description": "Search done successfully. data might be empty if no matching activities were found.",
                  "schema": {
                     "$ref": "#/definitions/ActivityList"
                  }
               },
               "400": {
                  "description": "Invalid format for a parameter or empty search criteria.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "502": {
                  "description": "Communication problems with our Search Engine.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/me": {
         "get": {
            "summary": "Retrieves information about current logged-in user.",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "user"
            ],
            "responses": {
               "200": {
                  "description": "User information"
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/user": {
         "get": {
            "summary": "List all users",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page. default 100",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "the page number. default 1",
                  "required": false,
                  "type": "integer"
               },
               {
                  "name": "exact",
                  "in": "query",
                  "description": "the result user's tag is or isn't exactly equal to the tag of current user. default true",
                  "required": false,
                  "type": "boolean"
               }
            ],
            "tags": [
               "user"
            ],
            "responses": {
               "200": {
                  "description": "A list of users"
               },
               "400": {
                  "description": "missing required parameter or validation failed",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "User is not authenticated.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "Action not permitted with this user.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/user/{user_id}/impersonate": {
         "post": {
            "summary": "Impersonate an user. Currently ONLY System users can use it. The response will be the same as the login.",
            "parameters": [
               {
                  "name": "user_id",
                  "in": "path",
                  "description": "The user ID to be impersonated.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token of the current user logged in",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "user"
            ],
            "responses": {
               "200": {
                  "description": "The response will contain the same type of data as the login."
               },
               "403": {
                  "description": "You cannot impersonate this user due to lack of permissions.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/user/utils/authentication/facebook": {
         "post": {
            "summary": "Exchange short fb token on long token and store to user data.",
            "parameters": [
               {
                  "name": "short_token",
                  "in": "formData",
                  "description": "short fb token from js sdk",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "pages",
                  "in": "formData",
                  "description": "If user is allowing us to capture pages, the pages id MUST be sent in here. Comma separated values are supported. If this is passed, a \"pages\" element will be in the response where the key is the Page ID and the value is a never-expiring page token.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "user"
            ],
            "responses": {
               "200": {
                  "description": "token exchange successfully.",
                  "schema": {
                     "$ref": "#/definitions/FBToken"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "get": {
            "summary": "Exchange short fb token on long token and store to user data.",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "user"
            ],
            "responses": {
               "200": {
                  "description": "returns fb long token",
                  "schema": {
                     "$ref": "#/definitions/FBToken"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/pdf/request": {
         "post": {
            "summary": "Sends a request to PDF service to capture a URL",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "url",
                  "in": "formData",
                  "description": "URL(s) to capture into PDF, separated by comma if more than one",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "email",
                  "in": "formData",
                  "description": "email address to later send an email with PDF download link",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "pdf"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/PdfScheduleResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "502": {
                  "description": "connection to PDF service failed",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "503": {
                  "description": "connection to PDF cluster timeout",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/pdf/status/{task_id}": {
         "get": {
            "summary": "Get the status of a scheduled capture.",
            "parameters": [
               {
                  "name": "task_id",
                  "in": "path",
                  "description": "Task ID to get current status",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "pdf"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/PdfStatusResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "502": {
                  "description": "connection to PDF service failed",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/dashboard/status/instances": {
         "get": {
            "summary": "list of instances.",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "permanent predefined access_token",
                  "type": "string",
                  "required": true
               }
            ],
            "tags": [
               "status_dashboard"
            ],
            "responses": {
               "200": {
                  "description": "list of instances"
               },
               "404": {
                  "description": "bad access token error.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/dashboard/status/clients": {
         "get": {
            "summary": "list clients for instance",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "permanent predefined access_token",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "instance_id",
                  "in": "query",
                  "description": "instance id to get clients for",
                  "type": "string",
                  "required": true
               }
            ],
            "tags": [
               "status_dashboard"
            ],
            "responses": {
               "200": {
                  "description": "list of clients"
               },
               "404": {
                  "description": "error description",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/dashboard/status/accounts": {
         "get": {
            "summary": "list accounts for all instances, instance or client specified",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "permanent predefined access_token",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "instance_id",
                  "in": "query",
                  "description": "instance id to get accounts for, if not specified returns accounts for all instances",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "client_id",
                  "in": "query",
                  "description": "client id to get accounts for. requires instance_id",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page. default 50",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "page number. default 1",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "status",
                  "in": "query",
                  "description": "account status. expired, expiring, public, error, all",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "name",
                  "in": "query",
                  "description": "account name for filter",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "sm_network",
                  "in": "query",
                  "description": "account sm_network for filter",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "sm_type",
                  "in": "query",
                  "description": "account sm_type for filter",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "sort_field",
                  "in": "query",
                  "description": "name,last_capture_ts,next_capture_ts,last_capture_error,sm_network,sm_type,total_activities",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "asc, desc",
                  "type": "string",
                  "required": false
               }
            ],
            "tags": [
               "status_dashboard"
            ],
            "responses": {
               "200": {
                  "description": "list of accounts"
               },
               "404": {
                  "description": "error description",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/dashboard/status/mails": {
         "get": {
            "summary": "list all mails",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "permanent predefined access_token",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page. default 20",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "page number. default 1",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "recipient",
                  "in": "query",
                  "description": "mail recipient for filter",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "sort_field",
                  "in": "query",
                  "description": "recipient, sentTs, authorizedTs",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "asc, desc",
                  "type": "string",
                  "required": false
               }
            ],
            "tags": [
               "status_dashboard"
            ],
            "responses": {
               "200": {
                  "description": "list of mails",
                  "schema": {
                     "$ref": "#/definitions/MailList"
                  }
               }
            }
         }
      },
      "/dashboard/status/users": {
         "get": {
            "summary": "list all users",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "permanent predefined access_token",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "pagination - defines the size of a page. default 20",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "page",
                  "in": "query",
                  "description": "page number. default 1",
                  "type": "integer",
                  "required": false
               },
               {
                  "name": "email",
                  "in": "query",
                  "description": "user email for filter",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "firstname",
                  "in": "query",
                  "description": "user firstname for filter",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "lastname",
                  "in": "query",
                  "description": "user lastname for filter",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "sort_field",
                  "in": "query",
                  "description": "email, firstname, lastname, last_login, created",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "asc, desc",
                  "type": "string",
                  "required": false
               }
            ],
            "tags": [
               "status_dashboard"
            ],
            "responses": {
               "200": {
                  "description": "list of users"
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/cases": {
         "get": {
            "summary": "Gets all cases",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "Client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "cases"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/CaseObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Case not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Creates a new Case",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "Client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "Case name",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "cases"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/CaseObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "409": {
                  "description": "conflict in name (already exists)",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}": {
         "get": {
            "summary": "Gets single case",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "Client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "case_id",
                  "in": "path",
                  "description": "Case ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "cases"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/CaseObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Case not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Updates a existing Case",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "Client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "case_id",
                  "in": "path",
                  "description": "Case ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "New name for case",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "cases"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/CaseObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "409": {
                  "description": "conflict in name (already exists)",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "delete": {
            "summary": "Deletes a case",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "Client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "case_id",
                  "in": "path",
                  "description": "Case ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "cases"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/CaseObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Activity Root ID not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities": {
         "get": {
            "summary": "Gets the activity objects from the Case",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "Client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "case_id",
                  "in": "path",
                  "description": "Case ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "cases"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/ActivityList"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/add": {
         "post": {
            "summary": "Adds a Activity to a case",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "Client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "case_id",
                  "in": "path",
                  "description": "Case ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "formData",
                  "description": "Account ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "activity_root_id",
                  "in": "formData",
                  "description": "Activity Root ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_activity_id",
                  "in": "formData",
                  "description": "ActivityEntity ID, if we want to focus on a single comment",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "cases"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/CaseObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Activity Root ID not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/remove": {
         "post": {
            "summary": "Removes a Activity to a case",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "Client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "case_id",
                  "in": "path",
                  "description": "Case ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "formData",
                  "description": "Account ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "activity_root_id",
                  "in": "formData",
                  "description": "Activity Root ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_activity_id",
                  "in": "formData",
                  "description": "ActivityEntity ID, if we want to focus on a single comment",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "cases"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/CaseObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Activity Root ID not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/integrations": {
         "get": {
            "summary": "Gets all integrations",
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/IntegrationObjectResponse"
                     }
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Integration not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Creates a new integration",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "integration_id",
                  "in": "formData",
                  "description": "Unique slug for integration (ID)",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "Name",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "base_uri",
                  "in": "formData",
                  "description": "HTTP Base URI for integration service",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "settings_required",
                  "in": "formData",
                  "description": "List of settings names separated by commas (e.g. 'username,password,url')",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "default_required",
                  "in": "formData",
                  "description": "List of default settings separated by commas (e.g. 'username=user1,password=pass1')",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/IntegrationObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/integrations/{integration_id}": {
         "get": {
            "summary": "Gets a single integration",
            "parameters": [
               {
                  "name": "integration_id",
                  "in": "path",
                  "description": "Integration ID to get a single integration",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/IntegrationObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Integration not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "delete": {
            "summary": "Deletes a particular integration",
            "parameters": [
               {
                  "name": "integration_id",
                  "in": "path",
                  "description": "Integration ID to get a single integration",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/RequestData"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Integration not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "put": {
            "summary": "Updates a particular integration",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "Name",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "base_uri",
                  "in": "formData",
                  "description": "HTTP Base URI for integration service",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "settings_required",
                  "in": "formData",
                  "description": "List of settings names separated by commas (e.g. 'username,password,url')",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "default_required",
                  "in": "formData",
                  "description": "List of default settings separated by commas (e.g. 'username=user1,password=pass1')",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/IntegrationObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/integrations": {
         "get": {
            "summary": "Gets all client integrations",
            "parameters": [
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/IntegrationObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Integration not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}": {
         "get": {
            "summary": "Gets a particular client integration",
            "parameters": [
               {
                  "name": "integration_id",
                  "in": "path",
                  "description": "Integration ID to get a single integration",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/IntegrationObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Integration not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Updates a particular integration settings",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "integration_id",
                  "in": "path",
                  "description": "Integration ID to get a single integration",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "&lt;any>",
                  "in": "formData",
                  "description": "any setting can be passed in the form of form data",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "$ref": "#/definitions/IntegrationObjectResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/connect": {
         "post": {
            "summary": "Attempts to connects a particular integration",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "integration_id",
                  "in": "path",
                  "description": "Integration ID to get a single integration",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "description": "new state of the integration",
                     "type": "boolean"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/disconnect": {
         "post": {
            "summary": "Attempts to disconnect a particular integration",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "integration_id",
                  "in": "path",
                  "description": "Integration ID to get a single integration",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "description": "new state of the integration",
                     "type": "boolean"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/{path}": {
         "post": {
            "summary": "Attempts to connects a particular integration",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "path",
                  "description": "URL path to call on integration service",
                  "in": "path",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "integration_id",
                  "in": "path",
                  "description": "Integration ID to get a single integration",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "client ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm2_instance",
                  "in": "query",
                  "description": "client instance",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "access_token",
                  "in": "query",
                  "description": "access_token provided on login",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "integrations"
            ],
            "responses": {
               "200": {
                  "description": "request done successfully.",
                  "schema": {
                     "type": "object",
                     "description": "response comes directly from integration"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/client/{client_id}/websites/search": {
         "get": {
            "summary": "Search for websites in PF1 inside a client.",
            "description": "Return websites that matches specified criteria. If the user is anonymous, then only returns the websites inside the clients publicportal list of selected websites.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id to perform the search on",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "query",
                  "description": "A name to search for. This will match with the account name.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "sort_field",
                  "in": "query",
                  "description": "The field to sort the result.\n\nAllowed options are name, url.\n\nThe default is to sort by most ID.\n",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "The order of the result. Allowed options are asc or desc.",
                  "type": "string",
                  "required": false
               }
            ],
            "tags": [
               "websites"
            ],
            "responses": {
               "200": {
                  "description": "Search done successfully. data might be empty if no matching websites were found.",
                  "schema": {
                     "$ref": "#/definitions/WebsiteList"
                  }
               },
               "400": {
                  "description": "Invalid format for a parameter or empty search criteria.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "502": {
                  "description": "Communication problems with our Search Engine.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/websites/{client_id}/search": {
         "get": {
            "summary": "Search inside the websites in PF1 inside a client.",
            "description": "Return results straight from the PF1 search ES.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client_id to perform the search on",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "query",
                  "in": "query",
                  "description": "A text to search for (given directly to ES)",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "websites"
            ],
            "responses": {
               "200": {
                  "description": "Search done successfully. data might be empty if no matching websites were found."
               },
               "400": {
                  "description": "Invalid format for a parameter or empty search criteria.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "502": {
                  "description": "Communication problems with our Search Engine.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/notes/{client_id}/{account_id}/{activity_id}": {
         "get": {
            "summary": "Get all notes attached to an activity",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "activity_id",
                  "in": "path",
                  "description": "id of the activity",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "notes"
            ],
            "responses": {
               "200": {
                  "description": "Returns all notes in cause of success",
                  "schema": {
                     "$ref": "#/definitions/ActivityNoteData"
                  }
               },
               "400": {
                  "description": "Raised if we cannot resolve the names passed in fields.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` or `activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "Returned when there is only 1 snapshot of an activity so there is no way we can perform a diff.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Add or edit a note on the activity",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "activity_id",
                  "in": "path",
                  "description": "id of the activity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "text",
                  "in": "formData",
                  "description": "text of the note",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "note_id",
                  "in": "formData",
                  "description": "note_id if editing an existing note",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "notes"
            ],
            "responses": {
               "200": {
                  "description": "Returns \"updated\" message in cause of success",
                  "schema": {
                     "$ref": "#/definitions/ActivityNoteData"
                  }
               },
               "400": {
                  "description": "Raised if we cannot resolve the names passed in fields.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` or `activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "Returned when there is only 1 snapshot of an activity so there is no way we can perform a diff.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts}": {
         "get": {
            "summary": "Get all notes attached to an activity",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "activity_id",
                  "in": "path",
                  "description": "id of the activity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "entity_type",
                  "in": "path",
                  "description": "type of entity: comments|messages|replies",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "entity_id",
                  "in": "path",
                  "description": "id of a particular entity (only required to get notes from an entity)",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "entity_creation_ts",
                  "in": "path",
                  "description": "sm_creation_ts of the entity",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "notes"
            ],
            "responses": {
               "200": {
                  "description": "Returns all notes in cause of success",
                  "schema": {
                     "$ref": "#/definitions/ActivityNoteData"
                  }
               },
               "400": {
                  "description": "Raised if we cannot resolve the names passed in fields.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` or `activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "Returned when there is only 1 snapshot of an activity so there is no way we can perform a diff.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Add or edit a note on the activity entity",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that is making the request",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "activity_id",
                  "in": "path",
                  "description": "id of the activity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "entity_type",
                  "in": "path",
                  "description": "type of entity, comments|messages|replies",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "entity_id",
                  "in": "path",
                  "description": "id of a particular entity (only required to get notes from an entity)",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "entity_creation_ts",
                  "in": "path",
                  "description": "sm_creation_ts of the entity",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "text",
                  "in": "formData",
                  "description": "text of the note",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "note_id",
                  "in": "formData",
                  "description": "note_id if editing an existing note",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "notes"
            ],
            "responses": {
               "200": {
                  "description": "Returns \"updated\" message in cause of success",
                  "schema": {
                     "$ref": "#/definitions/ActivityNoteData"
                  }
               },
               "400": {
                  "description": "Raised if we cannot resolve the names passed in fields.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "The `account_id` or `activity_id` was not found inside the system",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "412": {
                  "description": "Returned when there is only 1 snapshot of an activity so there is no way we can perform a diff.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/{client_id}/{account_id}/capture": {
         "post": {
            "summary": "Capture single activity.",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "The id of the client",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "account_id",
                  "in": "path",
                  "description": "The id of the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "post_type",
                  "in": "formData",
                  "description": "To capture, we must know what post type it is. Available types are 'post', 'event', 'video', 'photo', 'comment', 'conversation', 'rating'.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "sm_activity_id",
                  "in": "path",
                  "description": "The id of the social media activity to be captured.",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "post_id",
                  "in": "path",
                  "description": "usually not required but if capturing a comment, the post_id is REQUIRED.",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "parent_id",
                  "in": "path",
                  "description": "usually not required but if capturing a comment REPLY, the parent_id (parent comment id) is REQUIRED.",
                  "required": false,
                  "type": "string"
               }
            ],
            "tags": [
               "capture"
            ],
            "responses": {
               "200": {
                  "description": "capture fired to connector"
               },
               "400": {
                  "description": "Invalid or missing parameters."
               }
            }
         }
      },
      "/v1/alert/{client_id}/all": {
         "get": {
            "summary": "Gets all alerts in chronological order (newest to oldest)",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "The id of the client to look alerts for",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "start_ts",
                  "description": "An int timestamp. When present, will only return alert detections that were captured after the given time. This can be useful for pagination.",
                  "required": false,
                  "in": "query",
                  "type": "integer"
               },
               {
                  "name": "size",
                  "description": "Limit of results, maximum is 1000",
                  "required": false,
                  "in": "query",
                  "type": "integer"
               }
            ],
            "tags": [
               "alerts"
            ],
            "responses": {
               "200": {
                  "description": "Keyword detections in chronological order",
                  "schema": {
                     "$ref": "#/definitions/Detections"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user does not have permission to view alert detections.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/alert/{client_id}/{alert_id}": {
         "get": {
            "summary": "Gets matches of specified alert",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "The id of the client to look alerts for",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "alert_id",
                  "in": "path",
                  "description": "The ID of alert",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "start_ts",
                  "description": "An int timestamp. When present, will only return alert detections that were captured after the given time.",
                  "required": false,
                  "in": "query",
                  "type": "integer"
               },
               {
                  "name": "end_ts",
                  "description": "An int timestamp. When present, will only return alert detections that were captured before the given time.",
                  "required": false,
                  "in": "query",
                  "type": "integer"
               },
               {
                  "name": "size",
                  "description": "Limit of results, maximum is 1000",
                  "required": false,
                  "in": "query",
                  "type": "integer"
               },
               {
                  "name": "ordered",
                  "description": "If 0, it will disable ordering per detection_ts. Default is 1 (True).",
                  "type": "integer",
                  "in": "query",
                  "requred": false
               }
            ],
            "tags": [
               "alerts"
            ],
            "responses": {
               "200": {
                  "description": "Keyword detections for specified alert obtained successfully",
                  "schema": {
                     "$ref": "#/definitions/Detections"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user does not have permission to view alert detections.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Alert not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/alerts/send_email_notifications": {
         "get": {
            "summary": "INTERNAL USE ONLY. Sends email notifications to email list.",
            "description": "This is for internal use with a cronjob.\nIf triggered, it will search which alert is configured to send emails, and send the required emails to the email_list of the alert.\n",
            "tags": [
               "alerts"
            ],
            "responses": {
               "200": {
                  "description": "Keyword detections for specified alert obtained successfully"
               },
               "500": {
                  "description": "Something went wrong on the server side while querying the handler"
               }
            }
         }
      },
      "/v1/alerts/{client_id}": {
         "get": {
            "summary": "Gets all alerts of a client",
            "description": "Returns a list of alerts of specified client\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "The id of the client to look alerts for",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "active_only",
                  "in": "query",
                  "description": "Retrieve only active alerts if set to boolean true",
                  "required": false,
                  "type": "boolean"
               }
            ],
            "tags": [
               "alerts"
            ],
            "responses": {
               "200": {
                  "description": "Alerts of client returned successfully",
                  "schema": {
                     "$ref": "#/definitions/AlertList"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user does not have permission to create alerts",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Client/User not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "post": {
            "summary": "Creates an alert.",
            "description": "Creates a new alert setting for the client.\nNew alerts should have at least 1 keyword\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "Name of the alert",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "keywords",
                  "in": "formData",
                  "description": "A CSV- formatted array of keywords for this alert",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "email_list",
                  "in": "formData",
                  "description": "A CSV-formatted array of emails to send alerts summaries.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "capture_type",
                  "in": "formData",
                  "description": "The type to capture, it could be one of the following\n  - ACCOUNT: If the user wants to select only specific accounts to search for events\n  - SOCIAL_MEDIA: If the user wants to select all account of specified social media\n",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "capture_list",
                  "in": "formData",
                  "description": "A CSV-formatted array of account ids or social-media codes to configure the alert",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "frequency",
                  "in": "formData",
                  "description": "Frequency to send email notifications to the specified list of emails.\n- I: Instantly; sends an email when a keyword from the list is detected\n- D: Daily; once a day\n- B: By-weekly; twice in a week\n- W: Weekly; once in a week\n- O: Bi-monthly; twice in a month\n- M: Monthly; Once in a month\n",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "alerts"
            ],
            "responses": {
               "200": {
                  "description": "Alert setting created successfully.",
                  "schema": {
                     "$ref": "#/definitions/AlertResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user does not have permission to edit alerts",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Client/User not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/translate/account/smid": {
         "get": {
            "summary": "Gets the correspondent account_id for a social media account ID.",
            "parameters": [
               {
                  "name": "network",
                  "in": "path",
                  "description": "Network of account you are looking for. Accepts both short (FB) and long form (facebook)"
               },
               {
                  "name": "sm_ids",
                  "in": "path",
                  "description": "The ID in the social media. Acceepts one or more (comma-separated). If we don't have it, it will be skipped in the response."
               }
            ],
            "tags": [
               "translation"
            ],
            "responses": {
               "200": {
                  "description": "A dictionary of social_media -> (account_id, client_id)"
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      },
      "/v1/alerts/{client_id}/{alert_id}": {
         "delete": {
            "summary": "Deletes an alert configuration",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "ID for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "alert_id",
                  "in": "path",
                  "description": "ID of alert that is desired to delete",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "alerts"
            ],
            "responses": {
               "200": {
                  "description": "Alert deleted successfully"
               },
               "400": {
                  "description": "missing a required field or Alert not found",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user_id does not have the permission for this operation",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "put": {
            "summary": "Edits an alert.",
            "description": "Edits an alert setting.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "id for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "name",
                  "in": "formData",
                  "description": "Name of the alert",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "keywords",
                  "in": "formData",
                  "description": "A CSV- formatted array of keywords for this alert",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "email_list",
                  "in": "formData",
                  "description": "A CSV-formatted array of emails to send alerts summaries.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "capture_type",
                  "in": "formData",
                  "description": "The type to capture, it could be one of the following\n  - ACCOUNT: If the user wants to select only specific accounts to search for events\n  - SOCIAL_MEDIA: If the user wants to select all account of specified social media\n",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "capture_list",
                  "in": "formData",
                  "description": "A CSV-formatted array of account ids or social-media codes to configure the alert",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "frequency",
                  "in": "formData",
                  "description": "Frequency to send email notifications to the specified list of emails.\n- I: Instantly; sends an email when a keyword from the list is detected\n- D: Daily; once a day\n- B: By-weekly; twice in a week\n- W: Weekly; once in a week\n- O: Bi-monthly; twice in a month\n- M: Monthly; Once in a month\n",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "alerts"
            ],
            "responses": {
               "200": {
                  "description": "Alert setting created successfully.",
                  "schema": {
                     "$ref": "#/definitions/AlertResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user does not have permission to create alerts",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Client/User not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         },
         "patch": {
            "summary": "Edits an alert.",
            "description": "Edit status at an alert.\n",
            "parameters": [
               {
                  "name": "client_id",
                  "in": "path",
                  "description": "ID for the client that owns the account",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "alert_id",
                  "in": "path",
                  "description": "The ID of alert",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "status",
                  "in": "formData",
                  "description": "Status in the alert. (0 if disabled, 1 if enabled).",
                  "required": true,
                  "type": "integer"
               }
            ],
            "tags": [
               "alerts"
            ],
            "responses": {
               "200": {
                  "description": "Alert setting created successfully.",
                  "schema": {
                     "$ref": "#/definitions/AlertResponse"
                  }
               },
               "400": {
                  "description": "Missing a required field.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "401": {
                  "description": "access_token is not valid",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "403": {
                  "description": "user does not have permission to edit alerts",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               },
               "404": {
                  "description": "Client/User not found.",
                  "schema": {
                     "$ref": "#/definitions/Error"
                  }
               }
            }
         }
      }
   },
   "definitions": {
      "AccountList": {
         "type": "object",
         "description": "Response with the list of accounts for this user",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "It will be True."
                  },
                  "user_id": {
                     "type": "string",
                     "description": "user_id for the served user"
                  },
                  "data": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/AccountData"
                     }
                  }
               }
            }
         }
      },
      "AccountData": {
         "type": "object",
         "description": "single account with data",
         "properties": {
            "client_id": {
               "type": "string"
            },
            "account_id": {
               "type": "string"
            },
            "url": {
               "type": "string"
            },
            "name": {
               "type": "string"
            },
            "sm_network": {
               "type": "string"
            },
            "sm_type": {
               "description": "Type of social media account",
               "type": "string"
            },
            "total_activities": {
               "description": "Total number of objects for this account",
               "type": "integer"
            },
            "new_activities": {
               "description": "Number of new activities detected during last check",
               "type": "integer"
            },
            "last_check": {
               "type": "integer"
            },
            "next_check": {
               "type": "integer"
            },
            "preferences": {
               "type": "array",
               "description": "list of preferences for account",
               "items": {
                  "type": "string"
               }
            }
         }
      },
      "CaptureTimeseries": {
         "type": "object",
         "description": "single account's timeseries",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "It will be True."
                  },
                  "client_id": {
                     "type": "string",
                     "description": "id of the client that owns the account"
                  },
                  "data": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/CaptureTimeseriesData"
                     }
                  }
               }
            }
         }
      },
      "CaptureTimeseriesData": {
         "type": "object",
         "description": "dictionary holding information on the time series of an account captures",
         "properties": {
            "capture_ts": {
               "type": "integer",
               "description": "when the capture happened"
            },
            "objects_changed_tot": {
               "type": "integer",
               "description": "how many objects changed from last capture"
            },
            "objects_changed_detail": {
               "type": "array",
               "description": "details on what changed",
               "items": {
                  "$ref": "#/definitions/CaptureTimeseriesElement"
               }
            }
         }
      },
      "CaptureTimeseriesElement": {
         "type": "object",
         "description": "Information about details of types changed.",
         "properties": {
            "type": {
               "type": "string",
               "description": "type of activity that changed"
            },
            "qty": {
               "type": "integer",
               "description": "how many changes of such type happened"
            }
         }
      },
      "ActivityList": {
         "type": "object",
         "description": "Response with the list of activities for this account",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "It will be True."
                  },
                  "client_id": {
                     "type": "string",
                     "description": "client_id that owns the activity"
                  },
                  "account_id": {
                     "type": "string",
                     "description": "account_id for the activity"
                  },
                  "activities": {
                     "type": "object",
                     "description": "Only appears if account_info is passed. Holds an object with statistics per activity type."
                  },
                  "data": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/ActivityListElement"
                     }
                  }
               }
            }
         }
      },
      "ActivityListElement": {
         "type": "object",
         "description": "a single element, denoting an activity inside the account.",
         "properties": {
            "activity_id": {
               "type": "string"
            },
            "sm_network": {
               "type": "string"
            },
            "activity_type": {
               "type": "string"
            },
            "creation_ts": {
               "type": "integer"
            },
            "last_modification_ts": {
               "type": "integer"
            },
            "urls_mapping": {
               "type": "object",
               "description": "A map where every key is a URL contained in the activity data and the value is a PageFreezer CDN URL pointing to that same resource."
            },
            "etc": {
               "type": "object",
               "description": "information specific to the element's activity. Used to populate the template."
            }
         }
      },
      "ActivityData": {
         "type": "object",
         "description": "Information relative to the activity",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "It will be True."
                  },
                  "client_id": {
                     "type": "string",
                     "description": "client_id for the served user"
                  },
                  "account_id": {
                     "type": "string",
                     "description": "account_id for the activity"
                  },
                  "activity_id": {
                     "type": "string"
                  },
                  "sm_network": {
                     "type": "string"
                  },
                  "activity_type": {
                     "type": "string"
                  },
                  "creation_time": {
                     "type": "integer",
                     "description": "Activity creation time (on the sm network)"
                  },
                  "data": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/ActivityDataElement"
                     }
                  }
               }
            }
         }
      },
      "ActivityDataElement": {
         "type": "object",
         "description": "single element of the array of elements",
         "properties": {
            "creation_time": {
               "description": "creation time of the SNAPSHOT (therefore time of the change to the activity)",
               "type": "integer"
            },
            "etc": {
               "description": "information specific to that snapshot.",
               "type": "object"
            }
         }
      },
      "ActivityNoteData": {
         "type": "object",
         "description": "Information relative to a note",
         "properties": {
            "instance_id": {
               "type": "string",
               "description": "instance id of the note"
            },
            "client_id": {
               "type": "string",
               "description": "client_id for the served user"
            },
            "account_id": {
               "type": "string",
               "description": "account_id for the activity"
            },
            "activity_root_id": {
               "type": "string"
            },
            "entity_type": {
               "type": "string"
            },
            "activity_id": {
               "type": "string"
            },
            "note_id": {
               "type": "string"
            },
            "owner_user_id": {
               "type": "integer"
            },
            "owner_user_name": {
               "type": "string"
            },
            "text": {
               "type": "string"
            },
            "edit_history": {
               "type": "object"
            },
            "creation_ts": {
               "type": "integer",
               "description": "Note creation time"
            },
            "modified_ts": {
               "type": "integer",
               "description": "Note last modified time"
            }
         }
      },
      "Error": {
         "type": "object",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "It will be false."
                  },
                  "code": {
                     "type": "integer",
                     "format": "int32"
                  },
                  "message": {
                     "type": "string"
                  }
               }
            }
         }
      },
      "FBToken": {
         "type": "object",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "fb_token": {
                     "type": "string",
                     "description": "facebook long token or None"
                  }
               }
            }
         }
      },
      "ClientCreated": {
         "type": "object",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean"
                  },
                  "client_id": {
                     "type": "string"
                  }
               }
            }
         }
      },
      "RequestData": {
         "type": "object",
         "properties": {
            "elapsed_time": {
               "description": "Time elapsed to serve the request (ms)",
               "type": "number"
            },
            "request_url": {
               "description": "The url of the request",
               "type": "string"
            },
            "request_method": {
               "description": "The method called by the request",
               "type": "string"
            },
            "paginated": {
               "description": "The pagination details. Empty for unpaginated results",
               "type": "object",
               "properties": {
                  "page": {
                     "type": "integer"
                  },
                  "page_size": {
                     "type": "integer"
                  }
               }
            },
            "host": {
               "description": "the host where the request is made",
               "type": "string"
            },
            "request_ip": {
               "description": "The originating IP address",
               "type": "string"
            }
         }
      },
      "PdfScheduleResponse": {
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "description": "The response you get when scheduling a capture",
               "properties": {
                  "status": {
                     "type": "string",
                     "description": "the status of the request (scheduled, complete or error)"
                  },
                  "task_id": {
                     "type": "string",
                     "description": "the task ID of the scheduled capture"
                  }
               }
            }
         }
      },
      "PdfStatusResponse": {
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "description": "The response you get when asking for the status of a task",
               "properties": {
                  "status": {
                     "description": "the status of the request (scheduled, complete or error)",
                     "type": "string"
                  },
                  "email_message_status_1": {
                     "description": "status of the first email (before capture)",
                     "type": "string"
                  },
                  "email_message_status_2": {
                     "description": "status of the seconds email (after capture)",
                     "type": "string"
                  },
                  "download_status": {
                     "description": "status of the download of the file",
                     "type": "string"
                  },
                  "job_id": {
                     "description": "task ID of the scheduled capture",
                     "type": "string"
                  },
                  "forward_email": {
                     "description": "email to which it was forwarded",
                     "type": "string"
                  },
                  "requested_timestamp": {
                     "description": "timestamp at which the capture request was done",
                     "type": "integer"
                  },
                  "finished_timestamp": {
                     "description": "timestamp at which the job was complete",
                     "type": "integer"
                  },
                  "cluster_task_status": {
                     "description": "last complete PDF cluster response",
                     "type": "object"
                  },
                  "file_path": {
                     "description": "file path at which pdf was stored",
                     "type": "string"
                  },
                  "has_completed": {
                     "description": "is the task complete",
                     "type": "boolean"
                  }
               }
            }
         }
      },
      "CaseObjectResponse": {
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "description": "The response you get when asking for a case",
               "properties": {
                  "case_id": {
                     "description": "the ID of the case",
                     "type": "string"
                  },
                  "client_id": {
                     "description": "the client ID to which the case belongs",
                     "type": "string"
                  },
                  "name": {
                     "description": "name of the case",
                     "type": "string"
                  },
                  "activities": {
                     "description": "list of activities",
                     "type": "array",
                     "items": {
                        "type": "string",
                        "description": "list of 4 values (added_time, account_id, activity_root_id, sm_activity_id)"
                     }
                  }
               }
            }
         }
      },
      "IntegrationObjectResponse": {
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "description": "The response you get when asking for a case",
               "properties": {
                  "integration_id": {
                     "description": "the unique lowercase slug (ID) of the integration",
                     "type": "string"
                  },
                  "settings_required": {
                     "description": "the list of settings names the integration needs",
                     "type": "array",
                     "items": {
                        "type": "string",
                        "description": "setting name"
                     }
                  },
                  "name": {
                     "description": "name of the integration",
                     "type": "string"
                  },
                  "connected": {
                     "description": "integration state for given client",
                     "type": "boolean"
                  },
                  "settings": {
                     "description": "list of settings for given client",
                     "type": "array",
                     "items": {
                        "type": "array",
                        "description": "map of key->value for each setting in required_settings"
                     }
                  }
               }
            }
         }
      },
      "WebsiteList": {
         "type": "object",
         "description": "Response with the list of websites for this user",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "It will be True."
                  },
                  "data": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/WebsiteDataElement"
                     }
                  }
               }
            }
         }
      },
      "WebsiteDataElement": {
         "type": "object",
         "description": "single website inside PF1 system",
         "properties": {
            "url": {
               "description": "the website url"
            },
            "id": {
               "description": "the website ID inside PF1 system"
            },
            "name": {
               "description": "name of the website"
            }
         }
      },
      "Pagination": {
         "type": "object",
         "description": "pagination info",
         "properties": {
            "totalCount": {
               "type": "integer",
               "description": "the total number of data"
            },
            "page": {
               "type": "integer",
               "description": "current page"
            },
            "size": {
               "type": "integer",
               "description": "the number of data user requested"
            }
         }
      },
      "MailList": {
         "type": "object",
         "properties": {
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "It will be True"
                  },
                  "pagination": {
                     "$ref": "#/definitions/Pagination"
                  },
                  "authMails": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/Mail"
                     }
                  }
               }
            }
         }
      },
      "Mail": {
         "type": "object",
         "properties": {
            "authorizedTs": {
               "type": "integer",
               "description": "account authorized timestamp"
            },
            "sentTs": {
               "type": "integer",
               "description": "email sent timestamp"
            },
            "recipient": {
               "type": "string",
               "description": "recipient email"
            }
         }
      },
      "AlertItem": {
         "type": "object",
         "properties": {
            "status": {
               "type": "integer",
               "description": "0 if disabled, 1 if enabled"
            },
            "created_ts": {
               "type": "integer",
               "description": "TS when alert setting was created"
            },
            "name": {
               "type": "string",
               "description": "Name of the alert"
            },
            "created_by": {
               "type": "string",
               "description": "email of the user that created the alert"
            },
            "email_list": {
               "type": "array",
               "description": "An array of emails that are configured to send notifications"
            },
            "alert_id": {
               "type": "string",
               "description": "Alert ID"
            },
            "frequency": {
               "type": "string",
               "description": "Frequency char to send the alert"
            },
            "capture_list": {
               "type": "array",
               "description": "An array with either, account ids, or Social media network codes"
            },
            "keywords": {
               "type": "array",
               "description": "An array of keywords specified for this alert"
            },
            "capture_type": {
               "type": "string",
               "description": "Either ACCOUNT, to specify that the alert is set to capture individual accounts\nor SOCIAL_MEDIA, to specifu that the alert is set to capture all account of a network\n"
            }
         }
      },
      "AlertList": {
         "type": "object",
         "description": "Response with the list of alerts for this client",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "It will be True."
                  },
                  "client_id": {
                     "type": "string",
                     "description": "client_id that owns the activity"
                  },
                  "alerts": {
                     "type": "array",
                     "description": "Array containing alerts for this client",
                     "items": {
                        "$ref": "#/definitions/AlertItem"
                     }
                  }
               }
            }
         }
      },
      "AlertResponse": {
         "type": "object",
         "description": "Response with a single alert setting",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "$ref": "#/definitions/AlertItem"
            }
         }
      },
      "Detections": {
         "type": "object",
         "description": "Object with the latest keyword detections for an alert",
         "properties": {
            "request": {
               "$ref": "#/definitions/RequestData"
            },
            "response": {
               "type": "object",
               "properties": {
                  "success": {
                     "type": "boolean",
                     "description": "If request was successful is True"
                  },
                  "data": {
                     "type": "object",
                     "description": "List of keyword detections in an entity/activity",
                     "properties": {
                        "total_hits": {
                           "type": "integer",
                           "description": "Total item count in detections array"
                        },
                        "detections": {
                           "type": "array",
                           "description": "An object with activities",
                           "items": {
                              "$ref": "#/definitions/KeywordDetection"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "KeywordDetection": {
         "type": "object",
         "description": "Detection of keywords in an activity/entity",
         "properties": {
            "account_id": {
               "type": "string",
               "description": "Account ID of the activity"
            },
            "entity_type": {
               "type": "string",
               "description": "Available types are comments and activity"
            },
            "detection_ts": {
               "type": "integer",
               "description": "Timestamp when the detection ocurred"
            },
            "keyword_count": {
               "type": "object",
               "description": "Keywords with number of ocurrences found in activity"
            },
            "entity_pk": {
               "type": "object",
               "description": "Primary key of the activity or entity"
            }
         }
      }
   }
}</con:content>
        <con:type>https://swagger.io/swagger2/specification</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
      <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
    </con:endpoints>
    <con:resource name="/v1/instance" path="/v1/instance" id="75de3bb2-8476-4a3a-8cf7-92d79ad5e2ca">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="03fbf980-86e8-42f6-b1d5-d7661883c660" method="GET">
        <con:description>List all instances.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="8104bbaa-4fb0-4c01-9664-d28889a2ef00" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjQ1NTc1MSwiaWF0IjoxNTMyNDUyMTUxfQ.eyJ1c2VyX2lkIjoiNTkzODZiYTVmMTAxMDIwMDAxM2JhZjc1IiwiZXhwaXJlc19hdCI6MTUzMjQ1NTc1MSwidGFncyI6WyJzbTIiLCJndW1zIl19.Oa7ll1rvgI3j7YSdFISR3_8Wx1REvaXFhso5uv9LEeA" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="7c905018-d5f2-4fbb-9177-ae74acb3ccd2" method="POST">
        <con:description>Creates an instance.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>The name of the client.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>nameid</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user might choose the instance nameid, which is a representation of
the name with NO specials characters or spaces and maximum of 25.
If not supplied, the backend generates one from the name. Once set,
it cannot be changed.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="54f7bea1-078a-4ea1-8277-0a94011f412f" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjQ1NTc1MSwiaWF0IjoxNTMyNDUyMTUxfQ.eyJ1c2VyX2lkIjoiNTkzODZiYTVmMTAxMDIwMDAxM2JhZjc1IiwiZXhwaXJlc19hdCI6MTUzMjQ1NTc1MSwidGFncyI6WyJzbTIiLCJndW1zIl19.Oa7ll1rvgI3j7YSdFISR3_8Wx1REvaXFhso5uv9LEeA"/>
            <con:entry key="name" value="testinstance"/>
            <con:entry key="nameid" value="testinstanceid"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>name</con:entry>
            <con:entry>nameid</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/instance/{instance_id}" path="/v1/instance/{instance_id}" id="d84dcdd7-48ca-4329-85a5-1b0344805d1e">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>instance_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The instance ID.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="PUT" id="98373fae-bb7c-48e2-8cae-5119c957f879" method="PUT">
        <con:description>Updates an instance.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>The updated instance name.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="8117f2f8-0280-46b4-9cde-84cc6b4f243b" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_social</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjQ1NTc1MSwiaWF0IjoxNTMyNDUyMTUxfQ.eyJ1c2VyX2lkIjoiNTkzODZiYTVmMTAxMDIwMDAxM2JhZjc1IiwiZXhwaXJlc19hdCI6MTUzMjQ1NTc1MSwidGFncyI6WyJzbTIiLCJndW1zIl19.Oa7ll1rvgI3j7YSdFISR3_8Wx1REvaXFhso5uv9LEeA"/>
            <con:entry key="instance_id" value="I_sm_social"/>
            <con:entry key="name" value="testapi"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>instance_id</con:entry>
            <con:entry>name</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="e2712352-deed-4925-a1a0-d01c134c5f9e" method="DELETE">
        <con:description>Deletes an instance.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="4656fab2-55d3-4e8f-9422-68238c021c77" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/testinstance</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjQ1NTc1MSwiaWF0IjoxNTMyNDUyMTUxfQ.eyJ1c2VyX2lkIjoiNTkzODZiYTVmMTAxMDIwMDAxM2JhZjc1IiwiZXhwaXJlc19hdCI6MTUzMjQ1NTc1MSwidGFncyI6WyJzbTIiLCJndW1zIl19.Oa7ll1rvgI3j7YSdFISR3_8Wx1REvaXFhso5uv9LEeA"/>
            <con:entry key="instance_id" value="I_sm_testinstanceid"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>instance_id</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/instance/{instance_id}/client" path="/v1/instance/{instance_id}/client" id="294801cd-19f7-4444-976b-8dc0dcda34d2">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>instance_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The instance ID.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="0be9b012-2b12-489d-8412-e8ecc1c6dabd" method="GET">
        <con:description>Lists all clients under this instance.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>no_cache</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If on, it bypass the cache.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="ebf45991-5295-4582-96c9-d51650ad855f" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_social/client</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjQ1NTc1MSwiaWF0IjoxNTMyNDUyMTUxfQ.eyJ1c2VyX2lkIjoiNTkzODZiYTVmMTAxMDIwMDAxM2JhZjc1IiwiZXhwaXJlc19hdCI6MTUzMjQ1NTc1MSwidGFncyI6WyJzbTIiLCJndW1zIl19.Oa7ll1rvgI3j7YSdFISR3_8Wx1REvaXFhso5uv9LEeA"/>
            <con:entry key="instance_id" value="I_sm_social"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>instance_id</con:entry>
            <con:entry>no_cache</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="08b4b5ab-baec-42c8-9f8b-7760cdae8970" method="POST">
        <con:description>Creates a client under this instance.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>The name of the client.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>nameid</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user might choose his own nameid, which is a representation of
the name with NO specials characters or spaces and maximum of 25.
If not supplied, the backend generates one from the name. Once set,
it cannot be changed.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>language</con:name>
            <con:style>QUERY</con:style>
            <con:description>Language of the client, current choices are "en" or "nl". Defaults to "en"</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>timezone</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client's timezone. Example is "Europe/Tallinn". For a full list, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="edbb8471-4518-4bd6-8675-c0a54213eee1" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_social/client</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjQ1NTc1MSwiaWF0IjoxNTMyNDUyMTUxfQ.eyJ1c2VyX2lkIjoiNTkzODZiYTVmMTAxMDIwMDAxM2JhZjc1IiwiZXhwaXJlc19hdCI6MTUzMjQ1NTc1MSwidGFncyI6WyJzbTIiLCJndW1zIl19.Oa7ll1rvgI3j7YSdFISR3_8Wx1REvaXFhso5uv9LEeA"/>
            <con:entry key="instance_id" value="I_sm_social"/>
            <con:entry key="name" value="testapi"/>
            <con:entry key="nameid" value="testapi"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>instance_id</con:entry>
            <con:entry>name</con:entry>
            <con:entry>nameid</con:entry>
            <con:entry>language</con:entry>
            <con:entry>timezone</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="da93fc73-7740-4018-884b-3d70ee6c9169" method="DELETE">
        <con:description>Deletes a client.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client ID.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="6183b07b-9648-4573-95bc-d484c22dd9e7" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_social/client</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjQ1NTc1MSwiaWF0IjoxNTMyNDUyMTUxfQ.eyJ1c2VyX2lkIjoiNTkzODZiYTVmMTAxMDIwMDAxM2JhZjc1IiwiZXhwaXJlc19hdCI6MTUzMjQ1NTc1MSwidGFncyI6WyJzbTIiLCJndW1zIl19.Oa7ll1rvgI3j7YSdFISR3_8Wx1REvaXFhso5uv9LEeA"/>
            <con:entry key="instance_id" value="I_sm_social"/>
            <con:entry key="client_id" value="P_342MMS3PR9mrkX43IBtpl2"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>instance_id</con:entry>
            <con:entry>client_id</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/client" path="/v1/client" id="adcec3e0-0be9-4157-8949-914d115d17b4">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="94325608-d952-41b7-b319-f0f632f438ec" method="GET">
        <con:description>Lists all clients under all instances. Acessible only for SYSTEM users.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="8d2f8cc6-422d-4904-aa11-5987823f817c" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjQ1NTc1MSwiaWF0IjoxNTMyNDUyMTUxfQ.eyJ1c2VyX2lkIjoiNTkzODZiYTVmMTAxMDIwMDAxM2JhZjc1IiwiZXhwaXJlc19hdCI6MTUzMjQ1NTc1MSwidGFncyI6WyJzbTIiLCJndW1zIl19.Oa7ll1rvgI3j7YSdFISR3_8Wx1REvaXFhso5uv9LEeA" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/client/{client_id}" path="/v1/client/{client_id}" id="99bafebd-6e4f-4dcf-9d19-894ea4fdfe42">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the user that is making the request</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="f8ca9143-83af-48b7-ae5f-b4cd33860878" method="GET">
        <con:description>Gets detail of a client.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="8c011789-c016-47ce-bb71-152323c1a45c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="d6fec3e4-a38d-4f24-b2ba-673e00814a5e" method="PATCH">
        <con:description>Edits a client.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client name. Currently the only update-able field.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance_id of the client. If not passed, will use the current one.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>default_retention_tag</con:name>
            <con:style>QUERY</con:style>
            <con:description>Sets default retention tag for account. Options currently are "permanent" and "temporary". It can also be sent empty or with string "null" to make it empty/null. If a value is in this field, then every activity captured will contain this tag as a retention tag.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>alerts_enabled</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>Sets if alerts is enabled for customer or not. Defaults to False.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="398b61f7-85ad-4e81-aca3-fc0dae2cfad4" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>name</con:entry>
            <con:entry>instance_id</con:entry>
            <con:entry>default_retention_tag</con:entry>
            <con:entry>alerts_enabled</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/client/{client_id}/accounts" path="/v1/client/{client_id}/accounts" id="0929422c-4ad8-4675-9f00-0b252965c777">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the user that is making the request</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="e5641f15-4a3e-4912-b921-8985e9915cfd" method="GET">
        <con:description>The Client endpoint returns information about the accounts belonging to
a specific client. Filtering includes the network name.

Retrieves clients accounts</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>include_types</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true it will include what activity types that account has.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>network</con:name>
            <con:style>QUERY</con:style>
            <con:description>shortname/id of the social media network to filter. Might be a CSV list.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:description>pagination token - defines pagination start</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort</con:name>
            <con:style>QUERY</con:style>
            <con:description>to define the order in which the accounts are displayed select from {'asc','desc'}</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "user_id" : "string",
    "data" : [ {
      "client_id" : "string",
      "account_id" : "string",
      "url" : "string",
      "name" : "string",
      "sm_network" : "string",
      "sm_type" : "string",
      "total_activities" : 0,
      "new_activities" : 0,
      "last_check" : 0,
      "next_check" : 0,
      "preferences" : [ "string" ]
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="0e7ce8cf-183b-4736-ae57-6b1c964bab59" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/url/info" path="/v1/account/url/info" id="fbec3200-43b8-4065-adfb-00760f2f845e">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="226b3023-c1da-4c09-920e-291206f7d549" method="GET">
        <con:description>Retrives information about a social media account based on the profile URL.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>url</con:name>
            <con:style>QUERY</con:style>
            <con:description>The full URL of the profile.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>network</con:name>
            <con:style>QUERY</con:style>
            <con:description>Optional, works as a hint. The network of the account.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>502</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="85ea97aa-2729-4c2b-a7ae-5d8a38d3ad25" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account" path="/v1/account" id="47738f3d-7f9b-45b6-81d5-20c9570f67ea">
      <con:settings/>
      <con:parameters/>
      <con:method name="POST" id="b6884f68-ea5e-4efe-82b0-86ed1b34dfc5" method="POST">
        <con:description>The minimum data for creating an account is client_id and url.
With this minimum input the SMAPI is capable of figuring out social network, account ID and name.
It is possible to trigger account authorization by sending the "oauth" parameter. In this case,
"admin_email" must be supplied too.

For debugging purposes, you can send any database field name in the querystring and it will be inserted
into the database.

If "sm_account_id" is present, we will NOT validate the URL. In this case, you are supposed to provide all
the relevant fields to insert the account, such as sm_network, sm_type and so on.

URL Validation Support:  Facebook and Twitter
OAauth Support: Facebook, Twitter, LinkedIn, Yammer and Instagram.

Creates an account.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>id for the client that owns the account</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>url</con:name>
            <con:style>QUERY</con:style>
            <con:description>The social media URL of the account</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>capture_since</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An unix timestamp indicating an initial capture time.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>capture_interval</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>Number of seconds to wait between each account capture. If not passed, account will be captured using the default capture interval, currently 3600 seconds or 1 hour.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>oauth</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If present, admin_email must be too. Note that some networks+types, REQUIRES OAuth. For these, this value will have no impact.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>usergroups_roles</con:name>
            <con:style>QUERY</con:style>
            <con:description>User group name and role name in the format of "group_name:role_name". You can pass multiple groups.
A group can only contain one role. This associates the account with that group in a particular role.
In another words, this allows you to say:
   - group1 is a VIEWER in this account.
   - group2 is a MANAGER in this account.
   - group1 is SUPER USER in another account.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>paused</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>By default, all accounts are created in a PAUSED state. If you dont want that, pass 0 in this flag.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>is_public</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>By default, all accounts are private. This is a boolean flag to change that. When enabled, the public_slug will be assigned.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>admin_email</con:name>
            <con:style>QUERY</con:style>
            <con:description>The e-mail to which the OAuth authorization invitation will be sent.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>permission</con:name>
            <con:style>QUERY</con:style>
            <con:description>Additional permissions. So far, only "inbox" is supported. When used, we archive the inbox in FB too.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>oauth-message</con:name>
            <con:style>QUERY</con:style>
            <con:description>An email messge to be sent to the admin_email in case oauth is needed/requested.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Account name - usually the account owner name or company name.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm_network</con:name>
            <con:style>QUERY</con:style>
            <con:description>The social media code, such as FB, TW and so on.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm_type</con:name>
            <con:style>QUERY</con:style>
            <con:description>The social media account type code, such as us, pg, pr, etc...</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm_account_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The social media ID itself. In other words, the use ID in the social media.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>enterprise</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>if it's an enterprise account, such as Workplace, you should send true.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>community_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Optional for Workplace. Facebook now avails of a Graph API endpoint
that backend can retrieve this with a valid token. It is still accepte for
backwards compatibility, but it's not required anymore for Workplace.
User must copy and paste from his Workplace settings.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>members_ids</con:name>
            <con:style>QUERY</con:style>
            <con:description>Used in Enterprise accounts. A CSV of user IDs that the user wishes to capture. These ids can be had in the Capturables endpoint.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>groups_ids</con:name>
            <con:style>QUERY</con:style>
            <con:description>Used in Enterprise accounts. A CSV of group IDs that the user wishes to capture. These ids can be had in the Capturables endpoint.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>token</con:name>
            <con:style>QUERY</con:style>
            <con:description>If you already have a token for the account (like Workplace), you can send it using token parameter. If this is sent, no authorization will be performed. Also "connect" will be saved as connected_through in the auth data.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>connected_through_name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Used if token is sent, the name of the person who authorized.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>connected_through_surname</con:name>
            <con:style>QUERY</con:style>
            <con:description>Used if token is sent, the surname of the person who authorized.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>token_expires</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>is_3rdparty</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, tells the backend that we must capture this account with the user private token.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>preferences</con:name>
            <con:style>QUERY</con:style>
            <con:description>list of preferences for account separated by comma</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="5d234aff-f940-4391-9bda-1b3eec70fb0f" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="99d4e890-79cd-4a26-9438-73a21379e3f2" method="DELETE">
        <con:description>Purges one or more accounts in background. This request only returns a 202 - Accepted response.
Account purging is managed in background, so that the consumer won't hang waiting for the request to complete.

Purges one or more account(s) completely.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>id for the client that owns the account</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>account_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>One or more account IDs separated by comma (CSV).</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>202</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="fc636d24-4d04-4af0-bc56-3764e2b31647" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/enterprise/{client_id}/" path="/v1/account/enterprise/{client_id}/" id="848b261e-8bba-42b4-be8d-a913d456a1a1">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The client to list all enterprise accounts belonging to it. it's optional</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="5a8056e3-c245-414e-a248-1d6a1b96f01c" method="GET">
        <con:description>Lists all enterprise groups of a client or all in case of system user and client_id not specified</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="95e06306-0fda-4512-9c33-d176499e5d33" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="bebca817-f469-4950-8b46-773f73a63eed" method="POST">
        <con:description>Create enterprise group with auto creating accounts specified or all if no members_ids or groups_ids specified</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="85faa3c5-317e-447b-94af-235aef5cd53c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/enterprise/{client_id}/{enterprise_id}/force_capture" path="/v1/account/enterprise/{client_id}/{enterprise_id}/force_capture" id="4a01efde-3f6d-4bc6-947a-507473a67642">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The client_id that owns the enterprise ID.</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>enterprise_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The enterprise ID as returned by the list (aka group_id).</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="38c6fcab-5d03-46fc-af7b-2b61325165b6" method="GET">
        <con:description>Force capture all accounts</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>active_only</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If set to True, will force capture only active accounts</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="d62a9016-96b6-4ef5-8a8d-aff6cbb9971c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/enterprise/{client_id}/{enterprise_id}" path="/v1/account/enterprise/{client_id}/{enterprise_id}" id="b2d37dfc-1c9d-46e3-9dcd-9b0844b30412">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The client_id that owns the enterprise ID.</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>enterprise_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The enterprise ID as returned by the list (aka group_id).</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="41270855-6de2-4122-bc08-2326b198d224" method="GET">
        <con:description>Details a enterprise group, including a list of all accounts.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>archived_only</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If set to True, will return only accounts that are currently being captured.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="e6d2b883-cfda-4636-a04b-85d6be96c54e" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>enterprise_id</con:entry>
            <con:entry>archived_only</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="713807b1-e36e-41c8-85ce-cae9ca879d5c" method="DELETE">
        <con:description>Details a enterprise group, including  all accounts. only if all acccounts are apused and group paused too</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="7ab0d893-abc4-4fad-9650-8d2560abcf22" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="1b4b0033-d76f-4e6a-838a-b96dd338083c" method="PATCH">
        <con:description>Updates the details of a group.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="03eb0685-6037-4840-b26b-cd7bd309592e" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/enterprise/capturables" path="/v1/account/enterprise/capturables" id="3da83e32-0396-42c1-9b91-533512aaab8d">
      <con:settings/>
      <con:parameters/>
      <con:method name="POST" id="cf475eec-b9f4-4762-ad7e-4d5f746b7af8" method="POST">
        <con:description>Valid only for enterprise accounts.

It is possible that a customer wants to choose which profiles or groups he wants to
capture in his enterprise account. This endpoint returns a list of users and groups
so the customer can pick it. This information can then be passed to the endpoint that
adds an account.

We use POST because we do not want the customer's token traveling exposed on the URL.

For now this endpoint only supports Workplace by Facebook.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>community_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The community_id of the Workplace.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>token</con:name>
            <con:style>QUERY</con:style>
            <con:description>The admin access_token.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>thirdparty_app</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If the flow comes from the installable app, then you have to pass that “thirdparty_app=1” when calling this. If it’s the old-style of just using an acccess token pasted in sm2, then you have to leave that at 0.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>email</con:name>
            <con:style>QUERY</con:style>
            <con:description>If passed, will only return accounts with that email. No groups will be returned.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>If passed, will only return accounts containing that name. This is valid for both users and groups.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>refresh</con:name>
            <con:style>QUERY</con:style>
            <con:description>By default, data is cached, If you want to force a refresh of member list, send refresh=1.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="950f27c4-4dcb-4751-aa40-9d92841ef51c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/resolve_address/{slug}" path="/v1/account/resolve_address/{slug}" id="bbec0019-fc41-4c1d-b98f-582af45967b4">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>slug</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The slug to look for an account assigned</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="df984d84-5c2f-4d4e-a4e2-f37b1aeb311b" method="GET">
        <con:description>Gets the Account ID assigned to the address slug</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="e0c4658b-df55-410e-a8f3-ae38b0279fad" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/{account_id}" path="/v1/account/{account_id}" id="5686c149-2dce-44e5-b376-ec09ed3f64f5">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>if of the account to be updated</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="a01a9257-a775-4525-a894-481360ec448c" method="GET">
        <con:description>Gets account detail.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>id for the client that owns the account</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="dcaededd-c4c3-4690-8545-94597a478b8d" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="e26218d3-9c0b-4dd7-b6bb-da1d9a5b183f" method="PATCH">
        <con:description>Edits an account. Note that only the fields listed are editable.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>id for the client that owns the account</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>capture_since</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An unix timestamp indicating an initial capture time.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>capture_interval</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>Number of seconds to wait between each account capture. If not passed, account will be captured using the default capture interval, currently 3600 seconds or 1 hour.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>paused</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>By default, all accounts are created in a PAUSED state. If you dont want that, pass 0 in this flag.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>admin_email</con:name>
            <con:style>QUERY</con:style>
            <con:description>The e-mail to which the OAuth authorization invitation will be sent.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Account name - usually the account owner name or company name.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>preferences</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>array</con:dataType>
            <con:description>list of preferences for account</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="6058bdde-59b1-4f39-aa3e-10b4eb0c4fa6" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/{client_id}/{action}" path="/v1/account/{client_id}/{action}" id="2830b5b5-7bb1-4dc9-9468-a1a8ffd1a3ac">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>action</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The action to be taken, "pause" or "unpause".</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="4ff34267-9d3e-4b37-802e-fa481dcda6bd" method="POST">
        <con:description>Performs bulk administrative actions on an account. The possible options for bulk actions are "pause" and "unpause".

All parameters are the same as /v1/account/{client_id}/{account_id}/{action} except for account_id that moves
from the URL to the body.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>account_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>A CSV list of account_ids to be paused or unpaused.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>_all</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If passed, will perform bulk actions on ALL accounts of the client.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="7876526c-f0f7-41d5-82f1-04073dc4283a" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/{client_id}/{account_id}/{action}" path="/v1/account/{client_id}/{account_id}/{action}" id="66236680-99da-4915-bc49-38d8fff66674">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>action</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The action to be taken, "pause", "unpause" or "force_capture". Any other value will return a 404.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="d3820b14-d49e-4956-9f16-7b2fa69db19f" method="POST">
        <con:description>Performs administrative actions on an account.

The possible options for action are
"pause", "unpause", "force_capture" and "resend_auth_email".</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>email</con:name>
            <con:style>QUERY</con:style>
            <con:description>If specified, will resend authorization email to another email. Only has effect if action is "resend_auth_email"</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="4c616637-981d-4800-8377-9c9cc55ce2dd" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/{client_id}/{account_id}/timeseries/creation" path="/v1/account/{client_id}/{account_id}/timeseries/creation" id="9e269af0-93d6-4ae5-86b7-17e11e9de3c6">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="9d507e4a-0e89-452d-b5a9-d5e5d038a05a" method="GET">
        <con:description>Returns a list of activity root IDs ordered by creation time.

timeseries based on activity creation for an account</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort</con:name>
            <con:style>QUERY</con:style>
            <con:description>to define the order in which the accounts are displayed select from {'asc','desc'}</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="813c058f-5402-4a44-b5d0-3c6586471ee1" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/{client_id}/{account_id}/timeseries/capture" path="/v1/account/{client_id}/{account_id}/timeseries/capture" id="e80afc78-95d7-4f8d-a3d5-d4c371a77274">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="454a2fa6-7898-4f43-aba9-bf8ab9252149" method="GET">
        <con:description>Returns time series with the details about the captures

logged history timeseries for an account</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:description>pagination token - defines pagination start</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort</con:name>
            <con:style>QUERY</con:style>
            <con:description>to define the order in which the accounts are displayed select from {'asc','desc'}</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "data" : [ {
      "capture_ts" : 0,
      "objects_changed_tot" : 0,
      "objects_changed_detail" : [ {
        "type" : "string",
        "qty" : 0
      } ]
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="201457a3-368b-4b65-9ddf-b4c8088e27d9" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{last_seen_ts}" path="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{last_seen_ts}" id="899456d1-cd23-4ded-b614-fb6a303ced85">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that owns the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>root_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the activity etntity belongs to</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>group</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>type of entity: comments or messages</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>last_seen_ts</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>sm_creation_ts of the oldest entity you have loaded already.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="1d2a9ddb-4e39-4c1f-b42c-57b7ec32e0d9" method="GET">
        <con:description>Useful for paginating large quantities of comments or messages.

Retrieve entities older than on last_seen_ts.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="0aedd5d8-eaed-4fcd-a207-8dec13219030" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/account/{client_id}/{account_id}/activity" path="/v1/account/{client_id}/{account_id}/activity" id="0784ebf6-9841-4932-88c6-6b89fabd243e">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that owns the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="a9bdb2b1-111b-4c3e-899a-2d1fc1140f44" method="GET">
        <con:description>provides with the data and details of all the activities happened inside an account.
The activity/activities retrieved depend on the query options set.

Data on the accounts' activities</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>account_info</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, will have an `activities` key in the response with statistics per activity type.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:description>pagination token - defines pagination start</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort</con:name>
            <con:style>QUERY</con:style>
            <con:description>to define the order in which the accounts are displayed select from {'asc','desc'}</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>activity</con:name>
            <con:style>QUERY</con:style>
            <con:description>queries a specific activity or activities, defined by a CSV select from activities available</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>entities_size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>This controls how many comments/messages you want to return per activiy. This is useful
to load activities only with X number of comments. If you specify 5 here,
only the last 5 comments/messages per activity will be loaded from the DB.
If not passed, will load all entities of every activity retrieved.

For loading more, you can see the paginating entities endpoint:
  /v1/activities/{client_id}/{account_id}/{root_id}/{group}/{last_seen_ts}</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>grouped</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:default>true</con:default>
            <con:description>It is activated by default. When on, it returns only latest activity and groups the history
timestamps under "activity_ts_history". If false, it will not group, returning every
single activity and the history key will not be present.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>creation_ts_from</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>If passed, will return only activities created from that point in time.
Whenever possible that time is the time that the post/content was created
in the social media network. You can use this in conjunction with
creation_ts_to to perform a range filter.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>creation_ts_to</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>If passed, will return only activities created up to that point in time.
Whenever possible that time is the time that the post/content was created
in the social media network. You can use this in conjunction with
creation_ts_from to perform a range filter.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>connected_on</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>A capture connection timestamp to filter the activities retrieved.
If this is supplied, only activities captured at this specific timestamp
will be retrieved. If no capture happened at all, it will return a 404.
Note that this is different than a capture with 0 new activities.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>connected_to</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>A capture connection timestamp to filter the activities retrieved.
If supplied with the connected_on period, retrieves all activities
in this time RANGE. It has no effect if supplied alone. If no capture
happened at all, it will return a 404. If no capture happened at all,
it will return a 404.
Note that this is different than a capture with 0 new activities.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "account_id" : "string",
    "activities" : { },
    "data" : [ {
      "activity_id" : "string",
      "sm_network" : "string",
      "activity_type" : "string",
      "creation_ts" : 0,
      "last_modification_ts" : 0,
      "urls_mapping" : { },
      "etc" : { }
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="427f28f0-d169-4795-ba45-c788d352aa44" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/{id}" path="/v1/activities/{client_id}/{account_id}/{id}" id="ff4afc56-2615-40cc-b857-920341cfecdf">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the activity</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="fa7a3b20-5788-4717-ba51-ab835b41a6af" method="GET">
        <con:description>If an activity_root_id is passed:
  Returns the timeline of a specific activity. The activity is
  supported by the social media account.
  It returns the list of all the changes that the `:activity_id` has had. These changes
  are the *snapshots* of such activity.

If an activity_id is passed:
  Returns a single activity.

Data on specific activity of an account</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>diff</con:name>
            <con:style>QUERY</con:style>
            <con:description>If true, returns last snapshot along with the difference from previous snapshots. Valid only for activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>start_ts</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An int timestamp. When present, will only return snapshots that were captured after the given time. Valid only for when then ID passed is an activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>end_ts</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An int timestamp. When present, will only return snapshots that were captured before the given time. Valid only for when then ID passed is an activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>subtype</con:name>
            <con:style>QUERY</con:style>
            <con:description>If passed, it selects the field by the subtypes defined in conf/activity_subtypes.yaml. You can pass multiple sub-types separated by comma. If you pass this, you must NOT pass the fields argument.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:description>pagination token - defines pagination start, valid only for activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page, valid only for activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort</con:name>
            <con:style>QUERY</con:style>
            <con:description>to define the order in which the accounts are displayed select from {'asc','desc'}, valid only for activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>full_activity</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>by default returns activity and all entities, if set to False will return only activity data</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>grouped</con:name>
            <con:style>QUERY</con:style>
            <con:description>When on, it returns only latest activity and groups the history
timestamps under "activity_ts_history". If false, it will not group, returning every
single activity and the history key will not be present.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "account_id" : "string",
    "activity_id" : "string",
    "sm_network" : "string",
    "activity_type" : "string",
    "creation_time" : 0,
    "data" : [ {
      "creation_time" : 0,
      "etc" : { }
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="c2b308c7-bdaf-42ea-b223-d89af73373b2" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/smid/{sm_activity_id}" path="/v1/activities/{client_id}/{account_id}/smid/{sm_activity_id}" id="afe33d40-125a-41a2-baf5-14aa80afce5a">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="673d5a9c-e51d-4b2b-ab6e-deac190e0a08" method="GET">
        <con:description>Returns a single activity.

Data on specific activity of an account</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>sm_activity_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>A comma separated list of sm_activity_id to get from the database (acc_smid1,acc_smid2,...)</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "account_id" : "string",
    "activity_id" : "string",
    "sm_network" : "string",
    "activity_type" : "string",
    "creation_time" : 0,
    "data" : [ {
      "creation_time" : 0,
      "etc" : { }
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="b031a0ed-aabe-4a3e-8c1b-1bdd3e6014bb" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/{root_id}/tag/retention" path="/v1/activities/{client_id}/{account_id}/{root_id}/tag/retention" id="b2c3f09c-dd45-4c46-bd14-d5a417afce23">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>root_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>activity_root_id of the activity</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="d9a46088-7938-47f9-ae64-2134206a2b11" method="POST">
        <con:description>Updates the tag on an activity.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>tag</con:name>
            <con:style>QUERY</con:style>
            <con:description>The new tag name. Currently only "permanent" and "temporary" are valid. If you send "" (empty) or "null", it will be updated to null.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>sm_creation_ts</con:name>
            <con:style>QUERY</con:style>
            <con:description>The sm_creation_ts of the activity. Required to find it in the database.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="aae1feae-6ba5-456d-8a3a-58bcf06f77f7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/{root_id}/{entity_type}/{sm_activity_id}/{sm_creation_ts}/tag/retention" path="/v1/activities/{client_id}/{account_id}/{root_id}/{entity_type}/{sm_activity_id}/{sm_creation_ts}/tag/retention" id="df7300e6-6259-44c6-bbe6-2cd6543120e5">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>root_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>activity_root_id of the activity</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="878e7296-302e-4359-9b40-0a50ab89c1c6" method="POST">
        <con:description>Updates the retention tag on an activity entity.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>tag</con:name>
            <con:style>QUERY</con:style>
            <con:description>The new tag name. Currently only "permanent" and "temporary" are valid. If you send "" (empty) or "null", it will be updated to null.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>sm_activity_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The sm_activity_id of the entity. Required to find it in the database.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>entity_type</con:name>
            <con:style>QUERY</con:style>
            <con:description>The entity type. Usually "comments", "replies" or "messages". Required to find it in the database.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>sm_creation_ts</con:name>
            <con:style>QUERY</con:style>
            <con:description>The sm_creation_ts of the entity. Required to find it in the database.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="8ce08a1b-adeb-44cb-a9ef-b0e986431817" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/{id}/{action}" path="/v1/activities/{client_id}/{account_id}/{id}/{action}" id="fbabdc8f-aeed-4e9c-a5ab-2de7e6e370de">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the activity</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>action</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>value is "flag" or "unflag"</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="45369a8d-0c11-4bc2-baae-a23241bd57ee" method="GET">
        <con:description>Set flag on activity or remove it</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "account_id" : "string",
    "activity_id" : "string",
    "sm_network" : "string",
    "activity_type" : "string",
    "creation_time" : 0,
    "data" : [ {
      "creation_time" : 0,
      "etc" : { }
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="5f7bfcf4-3915-4799-91a6-1b7dec081046" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{sm_activity_id}/{sm_creation_ts}/{action}" path="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{sm_activity_id}/{sm_creation_ts}/{action}" id="ccaa0634-f651-4a64-a2ef-2ceb1ad15c77">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>root_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the activity etntity belongs to</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>group</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>type of entity: comments|messages|replies</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>sm_activity_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>social media id of entity</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>sm_creation_ts</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>timestamp when entity was created</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>action</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>value is "flag" or "unflag"</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="22333584-21c1-4c30-9d0e-c68b89043c10" method="GET">
        <con:description>Set flag on activity entity or remove it</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "account_id" : "string",
    "activity_id" : "string",
    "sm_network" : "string",
    "activity_type" : "string",
    "creation_time" : 0,
    "data" : [ {
      "creation_time" : 0,
      "etc" : { }
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="1584331d-4e2d-44e0-9a11-6cd8444ce2f1" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/" path="/v1/activities/{client_id}/{account_id}/" id="ed165e1e-09a6-4f97-945a-b606c8265dc5">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="7ec4f54c-2975-4c13-bce6-7230ddf663d7" method="POST">
        <con:description>If an activity_root_id is passed:
  Returns the timeline of a specific activity. The activity is
  supported by the social media account.
  It returns the list of all the changes that the `:activity_id` has had. These changes
  are the *snapshots* of such activity.

If an activity_id is passed:
  Returns a single activity.

Data on specific activity of an account</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>diff</con:name>
            <con:style>QUERY</con:style>
            <con:description>If true, returns last snapshot along with the difference from previous snapshots. Valid only for activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>start_ts</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An int timestamp. When present, will only return snapshots that were captured after the given time. Valid only for when then ID passed is an activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>end_ts</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An int timestamp. When present, will only return snapshots that were captured before the given time. Valid only for when then ID passed is an activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>subtype</con:name>
            <con:style>QUERY</con:style>
            <con:description>If passed, it selects the field by the subtypes defined in conf/activity_subtypes.yaml. You can pass multiple sub-types separated by comma. If you pass this, you must NOT pass the fields argument.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:description>pagination token - defines pagination start, valid only for activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page, valid only for activity_root_id.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort</con:name>
            <con:style>QUERY</con:style>
            <con:description>to define the order in which the accounts are displayed select from {'asc','desc'}, valid only for activity_root_id.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "account_id" : "string",
    "activity_id" : "string",
    "sm_network" : "string",
    "activity_type" : "string",
    "creation_time" : 0,
    "data" : [ {
      "creation_time" : 0,
      "etc" : { }
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="f56d21d4-4517-49b1-9140-4389f0a02cc1" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/{account_id}/{activity_root_id}/{entity_type}/{sm_activity_id}" path="/v1/activities/{client_id}/{account_id}/{activity_root_id}/{entity_type}/{sm_activity_id}" id="c12f5c6e-b43e-4cc3-bbd6-861ef0bc1b4d">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client_id</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>activity_root_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>root id of the activity</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>entity_type</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The entity type. Currently, only "comments" is supported.</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>sm_activity_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The sm_activity_id of the entity. You will find it when retrieving the activity. Every comment has one.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="0251f8ca-6cb8-4216-9842-bfa78300bd4b" method="GET">
        <con:description>Get a specific entity. Currently, only entity_type supported is comments.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="b8ac8af5-2884-4275-86c2-0dc9b4f2161a" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/publicportal/address/{slug}" path="/v1/publicportal/address/{slug}" id="f0b8bbc2-7a39-4ece-ab2d-577da46a2678">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>slug</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>the address to check for publicportal</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="1534b081-ddc9-4368-ae99-dadc755d377a" method="GET">
        <con:description>Get the client info associated with an address</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="4f760b5d-0daf-4a48-a514-0a7cacd39618" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/publicportal/domain/{domain}" path="/v1/publicportal/domain/{domain}" id="1500921e-affb-4071-b8f9-e4f65c6e7f7a">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>domain</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>the domain to check for publicportal</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="61d819ca-97cd-4d1d-885d-ff2694df453b" method="GET">
        <con:description>Get the client info associated with an domain</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="c65e19c7-7dec-4eb2-ad6b-707b293136c5" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/client/{client_id}/publicportal" path="/v1/client/{client_id}/publicportal" id="b9e733ee-3549-43a0-96c8-4895f61969ad">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client_id</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="2f3e0409-d1fa-4f69-aeb2-4e78093bb44e" method="GET">
        <con:description>Get the Client's Public Portal settings.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="fba9f97e-ce31-48e7-876d-4abd14c5cffb" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="PUT" id="ba20d3f6-307e-4b19-a9d4-6501f07ee18f" method="PUT">
        <con:description>Saves the client Public Portal settings. You can use this endpoint to write
the settings as many times as you want. There's no separate endpoint for saving
and then editing. You must always send everything again.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>enabled</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If the Public Portal is enabled or not, aka Published.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>address</con:name>
            <con:style>QUERY</con:style>
            <con:description>The Portal address. Required if enabled is true.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>custom_domain_enabled</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If the Portal uses a Custom Domain.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>custom_domain</con:name>
            <con:style>QUERY</con:style>
            <con:description>The Portal custom domain. Required if custom_domain_enabled is true.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>The portal name.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>title</con:name>
            <con:style>QUERY</con:style>
            <con:description>The Portal title.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>introduction</con:name>
            <con:style>QUERY</con:style>
            <con:description>The Portal introduction.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>hide_comments_in_results</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, will hide comments in search result.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>w3c</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, w3c will be enabled as search filter.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>dublic_code</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, Dublic Code will be enabled as search filter.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>overheid_nl</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, Overhdi NL will be enabled as search filter.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>ga_enabled</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, Google Analytics will be enabled.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>ga_tracking_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Google analytics tracking ID, required if ga_enabled is true.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>logo_image</con:name>
            <con:style>QUERY</con:style>
            <con:description>An uploaded image to be used as a logo.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>background_image_file</con:name>
            <con:style>QUERY</con:style>
            <con:description>An uploaded image to be used as a logo.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>layout</con:name>
            <con:style>QUERY</con:style>
            <con:description>Layout type. Defaults to full_width.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>font</con:name>
            <con:style>QUERY</con:style>
            <con:description>Font type.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>background_image</con:name>
            <con:style>QUERY</con:style>
            <con:description>Background image. Defauls to blue_geometric.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>theme</con:name>
            <con:style>QUERY</con:style>
            <con:description>Defaults to 'default'</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>background_primary</con:name>
            <con:style>QUERY</con:style>
            <con:description>Primary background color.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>background_secondary</con:name>
            <con:style>QUERY</con:style>
            <con:description>Secondary background color.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>heading</con:name>
            <con:style>QUERY</con:style>
            <con:description>Heading</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>border_top_size</con:name>
            <con:style>QUERY</con:style>
            <con:description>Border top size</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>border_top_color</con:name>
            <con:style>QUERY</con:style>
            <con:description>Border top color</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>border_bottom_size</con:name>
            <con:style>QUERY</con:style>
            <con:description>Border bottom size</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>border_bottom_color</con:name>
            <con:style>QUERY</con:style>
            <con:description>Border bottom color</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="b7ee74ec-e037-47db-8496-b9ec9abeebce" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>enabled</con:entry>
            <con:entry>address</con:entry>
            <con:entry>custom_domain_enabled</con:entry>
            <con:entry>custom_domain</con:entry>
            <con:entry>name</con:entry>
            <con:entry>title</con:entry>
            <con:entry>introduction</con:entry>
            <con:entry>hide_comments_in_results</con:entry>
            <con:entry>w3c</con:entry>
            <con:entry>dublic_code</con:entry>
            <con:entry>overheid_nl</con:entry>
            <con:entry>ga_enabled</con:entry>
            <con:entry>ga_tracking_id</con:entry>
            <con:entry>logo_image</con:entry>
            <con:entry>background_image_file</con:entry>
            <con:entry>layout</con:entry>
            <con:entry>font</con:entry>
            <con:entry>background_image</con:entry>
            <con:entry>theme</con:entry>
            <con:entry>background_primary</con:entry>
            <con:entry>background_secondary</con:entry>
            <con:entry>heading</con:entry>
            <con:entry>border_top_size</con:entry>
            <con:entry>border_top_color</con:entry>
            <con:entry>border_bottom_size</con:entry>
            <con:entry>border_bottom_color</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/client/{client_id}/publicportal/archives" path="/v1/client/{client_id}/publicportal/archives" id="87b74bf8-28fa-445e-8b16-bc69e662216d">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client_id</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="27f9839c-1486-419d-986f-4407ff7650c1" method="POST">
        <con:description>Saves the archives list in the client Public Portal settings. You can use this endpoint to write
both the accounts list and websites list.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>archives</con:name>
            <con:style>QUERY</con:style>
            <con:description>A comma separated list of accounts IDs (acc_id1,acc_id2,...)</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>websites</con:name>
            <con:style>QUERY</con:style>
            <con:description>A comma separated list of websites IDs (acc_id1,acc_id2,...)</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>pinned</con:name>
            <con:style>QUERY</con:style>
            <con:description>A comma separated list of
accounts/websites IDs (acc_id1,acc_id2,...) to show as pinned</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="77d39794-4e4f-4927-8ee3-0b93fddd73ae" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>archives</con:entry>
            <con:entry>websites</con:entry>
            <con:entry>pinned</con:entry>
            <con:entry/>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/client/{client_id}/publicportal/archives/{operation}" path="/v1/client/{client_id}/publicportal/archives/{operation}" id="04613044-ebf8-4bea-b2b7-76258abb2d0e">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client_id</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>operation</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The operation to perform: pin|unpin</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="2b054717-5bfc-4456-b3b7-213775f30156" method="POST">
        <con:description>Saves a archive/website ID to the pinned list</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>archive_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>A single account/website ID</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="57f64fd4-d9f2-43f0-bc11-80953ed2cbbc" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>operation</con:entry>
            <con:entry>archive_id</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/client/{client_id}/accounts/search" path="/v1/client/{client_id}/accounts/search" id="314a9c37-3bea-4b10-b9c0-84c4ff36992e">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client_id to perform the search on</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="f69851fe-7e51-4c0b-8ac2-47cc42de63bc" method="GET">
        <con:description>Return accounts that matches specified criteria.
Search for accounts inside a client.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>_all</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>Returns all of the accounts for this particular instance_id/client_id. Makes sense only if used without other filters. This will always cause it to display ALL accounts.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm_account_email</con:name>
            <con:style>QUERY</con:style>
            <con:description>Will search only for accounts registered with that email. Mind that this works only for Workplace for now, they are the only ones with emails.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>paused</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>if 1 (true) will return only paused accounts. If 0 (false) will return only unpaused accounts. If you don't want to filter by this parameter, do NOT send it.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>A name to search for. This will match with the account name.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>network</con:name>
            <con:style>QUERY</con:style>
            <con:description>If you want to narrow per network, you can send this. You can also search across multiple networks by splitting them in comma as in "facebook,twitter"</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>type</con:name>
            <con:style>QUERY</con:style>
            <con:description>If you want to narrow per type, you can send this. You can also search across multiple types by splitting them in comma as in "page,user"</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>The size to be returned, defaults to 10.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>offset</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>The offset to be skipped, much like SQL. Useful for paginations.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort_field</con:name>
            <con:style>QUERY</con:style>
            <con:description>The field to sort the result.

Allowed options are name, network, type, last_capture, next_capture,
total_activities and new_activities.

The default is to sort by most relevant (_score).</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>order</con:name>
            <con:style>QUERY</con:style>
            <con:description>The order of the result. Allowed options are asc or desc.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>_use_fallback</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, it will use the database fallback. This should be used for tests only.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "user_id" : "string",
    "data" : [ {
      "client_id" : "string",
      "account_id" : "string",
      "url" : "string",
      "name" : "string",
      "sm_network" : "string",
      "sm_type" : "string",
      "total_activities" : 0,
      "new_activities" : 0,
      "last_check" : 0,
      "next_check" : 0,
      "preferences" : [ "string" ]
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>502</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="8ae83bc0-dd9c-4405-b9ee-772fce4eb4d1" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>_all</con:entry>
            <con:entry>sm_account_email</con:entry>
            <con:entry>paused</con:entry>
            <con:entry>name</con:entry>
            <con:entry>network</con:entry>
            <con:entry>type</con:entry>
            <con:entry>size</con:entry>
            <con:entry>offset</con:entry>
            <con:entry>sort_field</con:entry>
            <con:entry>order</con:entry>
            <con:entry>_use_fallback</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/activities/{client_id}/search" path="/v1/activities/{client_id}/search" id="ebe7b21e-a90e-42b3-a5f5-f6c06c011e85">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client_id to perform the search on</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="802a4973-13bb-4194-b277-a122b26596a5" method="GET">
        <con:description>Returns activity matching criteria specified in the query parameters.
You can specify one or more parameters.
It returns the list of all activities found by our Search Engine.

Search for actitivies inside an account or all accounts of a client.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>account_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Optional. If not passed, will search in all accounts of a client. If passed, will search only in that account. You can specify multiple accounts using CSV.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>search_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>On the first response, you'll receive a search_id.

This ID must be used to get the *next* page of results. If this ID is not passed, you will get the results
from the beginning. Think of it as a cursor.

If you are starting a new search with different parameters, do NOT send this.

On the unlikely event that the cache is down, you will NOT receive this but you will
receive a "warning" element that will say "pagination_cache_disabled". When this happens,
your search will not fail, we'll serve a fixed amount of results (100) and you will NOT
be able to paginate. There will be NO search_id in this case.

This strikes a balance between making the search unavailable or opening ourselves
to a denial-of-service attack.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>author</con:name>
            <con:style>QUERY</con:style>
            <con:description>Search by author name.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>month</con:name>
            <con:style>QUERY</con:style>
            <con:description>Search by month range. Format is like yyyy-MM, such as 2017-02 or 2016-10</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>index</con:name>
            <con:style>QUERY</con:style>
            <con:description>Search specific index type such as facebook_story, twitter_tweet, linkedin_about. If left blank, will search in all.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>date.lte</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>Epoch in SECONDS to search for a date range. This will get only activities less than or equal that timestamp. Can be provided together with date.gte</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>date.gte</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>Epoch in SECONDS to search for a date range. This will get only activities greater than or equal that timestamp. Can be provided together with date.lte</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>author.raw</con:name>
            <con:style>QUERY</con:style>
            <con:description>Used to match EXACT authors. If you use only "author" and pass "Donald Duck", there'll be matches for both "Donald" and for "Duck". author.raw lets you search precisely for "Donald Duck."</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>content</con:name>
            <con:style>QUERY</con:style>
            <con:description>Searches for a term inside the activity content.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>attachment.content</con:name>
            <con:style>QUERY</con:style>
            <con:description>Searches for a term inside the attachments/files content.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>changed</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>Returns only activities which have changes. If you pass both changed and deleted, it will return changed activities OR deleted activities.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>flagged</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>Returns only activities which have been flagged.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>deleted</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>Returns only activities which were deleted. If you pass both changed and deleted, it will return changed activities OR deleted activities.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>_operator</con:name>
            <con:style>QUERY</con:style>
            <con:description>By default, when you specify multiple filtering criterias we use AND as the logical operator. However, if you want an OR, you can define this argument to be OR.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>Size of search. By default returns 10 occurrences. Maximum is 1000.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>offset</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>The offset of the search by the number specified. Used in pagination.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>only_raw</con:name>
            <con:style>QUERY</con:style>
            <con:description>If true, will return the raw data that ElasticSearch returned. Useful for debugging.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort_field</con:name>
            <con:style>QUERY</con:style>
            <con:description>The field to sort the result.

Allowed options are creation and modified.

The default is to sort by creation date, desc.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>timezone</con:name>
            <con:style>QUERY</con:style>
            <con:description>The timezone to use to determine the proper month buckets.
This is only use for the daterange values, not the activity data which should always be UTC.

Allowed values can be in two different formats:
- offset in minutes related to UTC (e.g. -180 for -03:00)
- identifier used in the TZ database (e.g. "America/Los_Angeles")

The default is to use UTC.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>order</con:name>
            <con:style>QUERY</con:style>
            <con:description>The order of the result. Allowed options are asc or desc.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>full_activity</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>If true, will return full activity data including all related entities.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "account_id" : "string",
    "activities" : { },
    "data" : [ {
      "activity_id" : "string",
      "sm_network" : "string",
      "activity_type" : "string",
      "creation_ts" : 0,
      "last_modification_ts" : 0,
      "urls_mapping" : { },
      "etc" : { }
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>502</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="deb7015e-90ba-4d66-a789-ae49cd1d0a7f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>account_id</con:entry>
            <con:entry>search_id</con:entry>
            <con:entry>author</con:entry>
            <con:entry>month</con:entry>
            <con:entry>index</con:entry>
            <con:entry>date.lte</con:entry>
            <con:entry>date.gte</con:entry>
            <con:entry>author.raw</con:entry>
            <con:entry>content</con:entry>
            <con:entry>attachment.content</con:entry>
            <con:entry>changed</con:entry>
            <con:entry>flagged</con:entry>
            <con:entry>deleted</con:entry>
            <con:entry>_operator</con:entry>
            <con:entry>size</con:entry>
            <con:entry>offset</con:entry>
            <con:entry>only_raw</con:entry>
            <con:entry>sort_field</con:entry>
            <con:entry>timezone</con:entry>
            <con:entry>order</con:entry>
            <con:entry>full_activity</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/me" path="/me" id="2c18e3ba-c338-4af6-b51b-9a8556175cb8">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="32f5c192-81d5-4363-9ef7-f068682b5ae6" method="GET">
        <con:description>Retrieves information about current logged-in user.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="7898785d-652e-4120-81e6-94899a65129b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/user" path="/v1/user" id="991a4562-1f56-40d0-94a2-ea948e5f6590">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="0364659c-9e74-44d5-817a-f1ed863c1342" method="GET">
        <con:description>List all users</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page. default 100</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>the page number. default 1</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>exact</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>the result user's tag is or isn't exactly equal to the tag of current user. default true</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="f1c1f778-6133-472c-b1c9-58d5c87c6de7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/user/{user_id}/impersonate" path="/v1/user/{user_id}/impersonate" id="9cc72467-26cd-4463-b64c-540db2fb82ec">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>user_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The user ID to be impersonated.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="129b984b-7d39-447e-ac0f-52a7b2aa5716" method="POST">
        <con:description>Impersonate an user. Currently ONLY System users can use it. The response will be the same as the login.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token of the current user logged in</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="e77b0939-e68d-4227-ad7d-d9aad8174b03" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/user/utils/authentication/facebook" path="/v1/user/utils/authentication/facebook" id="c384f28c-8148-4e84-ac50-ddb2e062a6f2">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="4c1528bb-a6bb-41ff-a4df-65240698e87f" method="GET">
        <con:description>Exchange short fb token on long token and store to user data.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "fb_token" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="d7395c3b-68d8-4762-a734-c84aa69d0040" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="d501a689-66fe-4273-91a7-d7954626c55b" method="POST">
        <con:description>Exchange short fb token on long token and store to user data.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>short_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>short fb token from js sdk</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>pages</con:name>
            <con:style>QUERY</con:style>
            <con:description>If user is allowing us to capture pages, the pages id MUST be sent in here. Comma separated values are supported. If this is passed, a "pages" element will be in the response where the key is the Page ID and the value is a never-expiring page token.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "fb_token" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="8f5b7fe8-436c-4a9d-9414-f36888bc4fe9" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/pdf/request" path="/v1/api/socialmedia/v1/pdf/request" id="6245ca89-6e65-4178-811a-a0955b2789c2">
      <con:settings/>
      <con:parameters/>
      <con:method name="POST" id="53666376-17ea-410d-9982-e25971fb39d0" method="POST">
        <con:description>Sends a request to PDF service to capture a URL</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>url</con:name>
            <con:style>QUERY</con:style>
            <con:description>URL(s) to capture into PDF, separated by comma if more than one</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>email</con:name>
            <con:style>QUERY</con:style>
            <con:description>email address to later send an email with PDF download link</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "status" : "string",
    "task_id" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>502</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>503</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="2be72adb-1971-4a77-9dea-6b9441ffdd76" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/pdf/status/{task_id}" path="/v1/api/socialmedia/v1/pdf/status/{task_id}" id="54e3aac5-79c8-4f17-b9c5-4edb7c168f43">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>task_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Task ID to get current status</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="b07190b3-1525-4fea-bb1b-fcde184a73ea" method="GET">
        <con:description>Get the status of a scheduled capture.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "status" : "string",
    "email_message_status_1" : "string",
    "email_message_status_2" : "string",
    "download_status" : "string",
    "job_id" : "string",
    "forward_email" : "string",
    "requested_timestamp" : 0,
    "finished_timestamp" : 0,
    "cluster_task_status" : { },
    "file_path" : "string",
    "has_completed" : true
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>502</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="45eac608-7a2e-468b-a2cc-5a0a969527da" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/dashboard/status/instances" path="/dashboard/status/instances" id="3c88101f-2aa3-4847-a763-d98ca9494646">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="dd4fc89d-5808-459a-a071-4e1cb98a1f5c" method="GET">
        <con:description>list of instances.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>permanent predefined access_token</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="bd0e8739-e91e-43b2-b604-aca6bc1f83a7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/dashboard/status/clients" path="/dashboard/status/clients" id="1be392ab-f55d-4167-a3d6-c3e84ba2aa1c">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="b47ac05c-472f-462d-a75c-9b3c97b16d42" method="GET">
        <con:description>list clients for instance</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>permanent predefined access_token</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>instance id to get clients for</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="ea6b5663-6109-4b73-bf42-e244144215ad" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/dashboard/status/accounts" path="/dashboard/status/accounts" id="f928f6fd-1365-47c9-98be-9c977dbfabbc">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="515edd18-4a44-4114-9fd8-3c6a0d864282" method="GET">
        <con:description>list accounts for all instances, instance or client specified</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>permanent predefined access_token</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>instance id to get accounts for, if not specified returns accounts for all instances</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>client id to get accounts for. requires instance_id</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page. default 50</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>page number. default 1</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>status</con:name>
            <con:style>QUERY</con:style>
            <con:description>account status. expired, expiring, public, error, all</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>account name for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm_network</con:name>
            <con:style>QUERY</con:style>
            <con:description>account sm_network for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm_type</con:name>
            <con:style>QUERY</con:style>
            <con:description>account sm_type for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort_field</con:name>
            <con:style>QUERY</con:style>
            <con:description>name,last_capture_ts,next_capture_ts,last_capture_error,sm_network,sm_type,total_activities</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>order</con:name>
            <con:style>QUERY</con:style>
            <con:description>asc, desc</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="982c94dd-5959-4d36-8dad-68b1d0c0c38f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/dashboard/status/mails" path="/dashboard/status/mails" id="a1c1a896-ac98-4a83-acbe-d07858a52d9c">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="50e5556c-6cce-4cd5-8cc4-dc727ee39f68" method="GET">
        <con:description>list all mails</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>permanent predefined access_token</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page. default 20</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>page number. default 1</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>recipient</con:name>
            <con:style>QUERY</con:style>
            <con:description>mail recipient for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort_field</con:name>
            <con:style>QUERY</con:style>
            <con:description>recipient, sentTs, authorizedTs</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>order</con:name>
            <con:style>QUERY</con:style>
            <con:description>asc, desc</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "response" : {
    "success" : true,
    "pagination" : {
      "totalCount" : 0,
      "page" : 0,
      "size" : 0
    },
    "authMails" : [ {
      "authorizedTs" : 0,
      "sentTs" : 0,
      "recipient" : "string"
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="3e2186e4-73c4-40a6-9f4d-9c25559272da" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/dashboard/status/users" path="/dashboard/status/users" id="e64bb485-7a5b-4823-888a-f162a1b506a4">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="7ad78ba8-e5bd-4b48-a650-44c246b268b5" method="GET">
        <con:description>list all users</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>permanent predefined access_token</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>pagination - defines the size of a page. default 20</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>page number. default 1</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>email</con:name>
            <con:style>QUERY</con:style>
            <con:description>user email for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>firstname</con:name>
            <con:style>QUERY</con:style>
            <con:description>user firstname for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>lastname</con:name>
            <con:style>QUERY</con:style>
            <con:description>user lastname for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort_field</con:name>
            <con:style>QUERY</con:style>
            <con:description>email, firstname, lastname, last_login, created</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>order</con:name>
            <con:style>QUERY</con:style>
            <con:description>asc, desc</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="b8941806-c1a4-4349-97fa-35d3ad6a30e6" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/cases" path="/v1/api/socialmedia/v1/client/{client_id}/cases" id="8f7c0e95-f28e-4a17-9418-565d150c65f0">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Client ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="ba338237-519a-4d00-b622-87b4ba4b0030" method="GET">
        <con:description>Gets all cases</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "case_id" : "string",
    "client_id" : "string",
    "name" : "string",
    "activities" : [ "string" ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="90de31f8-3278-4555-a05f-c54db5a2679d" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="141be107-03db-4672-ba00-11a820bde72d" method="POST">
        <con:description>Creates a new Case</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Case name</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "case_id" : "string",
    "client_id" : "string",
    "name" : "string",
    "activities" : [ "string" ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="99a3fca1-c27c-4c82-b8a0-40e2b21df879" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}" path="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}" id="e999cb28-0aed-4f6d-9694-1c1bd14cc95f">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Client ID</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>case_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Case ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="2c90ec0e-2f4b-49ae-8d44-e05ad23032a7" method="GET">
        <con:description>Gets single case</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "case_id" : "string",
    "client_id" : "string",
    "name" : "string",
    "activities" : [ "string" ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="ecd6e425-703a-417a-808f-e099c83b9455" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="f70e9138-7fac-48c6-a94d-c3630b93a5dd" method="POST">
        <con:description>Updates a existing Case</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>New name for case</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "case_id" : "string",
    "client_id" : "string",
    "name" : "string",
    "activities" : [ "string" ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="61b420fc-e680-456b-8455-1783ebb1c05e" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="d6660eb9-371d-49c4-8642-661f567c2e6c" method="DELETE">
        <con:description>Deletes a case</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "case_id" : "string",
    "client_id" : "string",
    "name" : "string",
    "activities" : [ "string" ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="aac20892-4f4d-472a-b684-62bcceafd1c6" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities" path="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities" id="2cbe3d53-faa0-4e75-8b79-b3881739279d">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Client ID</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>case_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Case ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="3e5548d5-7c85-4beb-b389-6c50bce3fb7d" method="GET">
        <con:description>Gets the activity objects from the Case</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "account_id" : "string",
    "activities" : { },
    "data" : [ {
      "activity_id" : "string",
      "sm_network" : "string",
      "activity_type" : "string",
      "creation_ts" : 0,
      "last_modification_ts" : 0,
      "urls_mapping" : { },
      "etc" : { }
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="c13d63ba-9c1c-4017-84e7-d6ec05bc10e0" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/add" path="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/add" id="0b7851bf-7ae6-4565-b2ef-8919e0fbdfcb">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Client ID</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>case_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Case ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="61f4da70-30cf-4e95-801a-04d6db7016f3" method="POST">
        <con:description>Adds a Activity to a case</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>account_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Account ID</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>activity_root_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Activity Root ID</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm_activity_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>ActivityEntity ID, if we want to focus on a single comment</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "case_id" : "string",
    "client_id" : "string",
    "name" : "string",
    "activities" : [ "string" ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="e387406e-2397-44b9-ae1e-08d2aa6b4146" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/remove" path="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/remove" id="12aa37a4-0dc9-4721-ad5d-9f575c5c18fc">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Client ID</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>case_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Case ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="27b632e7-9e99-40bb-9c06-0cd6e8eec949" method="POST">
        <con:description>Removes a Activity to a case</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>account_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Account ID</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>activity_root_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Activity Root ID</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm_activity_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>ActivityEntity ID, if we want to focus on a single comment</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "case_id" : "string",
    "client_id" : "string",
    "name" : "string",
    "activities" : [ "string" ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="08178ef8-b5e6-45fa-b314-3f1471984612" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/integrations" path="/v1/api/socialmedia/v1/integrations" id="14f1c0d8-4ebb-48bd-9b21-362b1ff16e3a">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="4cb6d222-41fe-4c96-aaa3-c1c2b04b51c6" method="GET">
        <con:description>Gets all integrations</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>[ {
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "integration_id" : "string",
    "settings_required" : [ "string" ],
    "name" : "string",
    "connected" : true
  }
} ]</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="afe7e9c5-05c9-46ac-ad8e-658f379ba322" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="a21c4cb8-56b1-477e-8d3f-4ab3d86edbbf" method="POST">
        <con:description>Creates a new integration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>integration_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Unique slug for integration (ID)</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Name</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>base_uri</con:name>
            <con:style>QUERY</con:style>
            <con:description>HTTP Base URI for integration service</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>settings_required</con:name>
            <con:style>QUERY</con:style>
            <con:description>List of settings names separated by commas (e.g. 'username,password,url')</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>default_required</con:name>
            <con:style>QUERY</con:style>
            <con:description>List of default settings separated by commas (e.g. 'username=user1,password=pass1')</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "integration_id" : "string",
    "settings_required" : [ "string" ],
    "name" : "string",
    "connected" : true
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="8b173474-eafe-4441-810a-36857c134f91" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/integrations/{integration_id}" path="/v1/api/socialmedia/v1/integrations/{integration_id}" id="01675370-ae12-4b74-9b8a-4b32132340e7">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>integration_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Integration ID to get a single integration</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="a7304e49-e7c4-44c4-9165-3073f32d62a1" method="GET">
        <con:description>Gets a single integration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "integration_id" : "string",
    "settings_required" : [ "string" ],
    "name" : "string",
    "connected" : true
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="cef41d1a-bcb7-4cbb-891f-8da8ca4e35f3" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="PUT" id="5cc34e8f-fbe3-42ae-b19f-7b140ee07302" method="PUT">
        <con:description>Updates a particular integration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Name</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>base_uri</con:name>
            <con:style>QUERY</con:style>
            <con:description>HTTP Base URI for integration service</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>settings_required</con:name>
            <con:style>QUERY</con:style>
            <con:description>List of settings names separated by commas (e.g. 'username,password,url')</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>default_required</con:name>
            <con:style>QUERY</con:style>
            <con:description>List of default settings separated by commas (e.g. 'username=user1,password=pass1')</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "integration_id" : "string",
    "settings_required" : [ "string" ],
    "name" : "string",
    "connected" : true
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="36ccbc36-0a8e-49c6-b79b-d23f8c3a017a" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="2cb05708-8bbf-40d1-8d57-c510e9b7c928" method="DELETE">
        <con:description>Deletes a particular integration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "elapsed_time" : 1.5,
  "request_url" : "string",
  "request_method" : "string",
  "paginated" : {
    "page" : 0,
    "page_size" : 0
  },
  "host" : "string",
  "request_ip" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="7c869e4f-0395-4e04-9648-b47d6af1f1ae" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/integrations" path="/v1/api/socialmedia/v1/client/{client_id}/integrations" id="56148506-8da8-4177-9b0c-8ea9f510e801">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>client ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="87874c5e-bb6d-4d95-98ea-fc91d378c414" method="GET">
        <con:description>Gets all client integrations</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "integration_id" : "string",
    "settings_required" : [ "string" ],
    "name" : "string",
    "connected" : true
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="47648a90-e904-4329-94f2-9f15fffa166b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}" path="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}" id="2e5fc858-8950-41fb-99c4-279b7721ebdb">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>integration_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Integration ID to get a single integration</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>client ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="19e9ed8d-e287-49be-9cbb-039d57f0ead0" method="GET">
        <con:description>Gets a particular client integration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "integration_id" : "string",
    "settings_required" : [ "string" ],
    "name" : "string",
    "connected" : true
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="95265513-c430-4d54-9a5c-486473dd665e" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="e9b2fe22-fec2-4c4c-91fc-98ad7103b2c8" method="POST">
        <con:description>Updates a particular integration settings</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>&lt;any></con:name>
            <con:style>QUERY</con:style>
            <con:description>any setting can be passed in the form of form data</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "integration_id" : "string",
    "settings_required" : [ "string" ],
    "name" : "string",
    "connected" : true
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="7a7fcc1c-4c0e-4007-a3a8-425248916479" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/connect" path="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/connect" id="fffd51b4-20fc-4a81-bc27-c717156d53e7">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>integration_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Integration ID to get a single integration</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>client ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="9d6b2129-0143-4aa8-900f-305e4db62ca1" method="POST">
        <con:description>Attempts to connects a particular integration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>true</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="a3b0addb-7688-4e42-a1d4-d677e4be3fd7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/disconnect" path="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/disconnect" id="d9840161-4034-41e0-933a-5c6c7ec4977a">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>integration_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Integration ID to get a single integration</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>client ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="4934b088-8d1c-4e38-a831-0f72b45ae72e" method="POST">
        <con:description>Attempts to disconnect a particular integration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>true</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="055d3697-5a0b-4d88-a3e4-2ecfd4722425" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/{path}" path="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/{path}" id="621931c8-cacf-4e44-b3dd-9e474ab54005">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>path</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>URL path to call on integration service</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>integration_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Integration ID to get a single integration</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>client ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="d27541a7-6ac0-4739-be44-6d0111938fad" method="POST">
        <con:description>Attempts to connects a particular integration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>sm2_instance</con:name>
            <con:style>QUERY</con:style>
            <con:description>client instance</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided on login</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{ }</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="8ca9afef-2057-4cb3-883a-d2e849068770" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/client/{client_id}/websites/search" path="/v1/client/{client_id}/websites/search" id="727180a0-d588-4fa3-adaa-0c7652f7b9e5">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client_id to perform the search on</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="76c6dc63-9132-4e8f-8634-87ab6e2996cf" method="GET">
        <con:description>Return websites that matches specified criteria. If the user is anonymous, then only returns the websites inside the clients publicportal list of selected websites.
Search for websites in PF1 inside a client.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>A name to search for. This will match with the account name.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sort_field</con:name>
            <con:style>QUERY</con:style>
            <con:description>The field to sort the result.

Allowed options are name, url.

The default is to sort by most ID.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>order</con:name>
            <con:style>QUERY</con:style>
            <con:description>The order of the result. Allowed options are asc or desc.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "data" : [ { } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>502</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="3d014daf-f8c5-4401-a3bd-b005648c957a" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/websites/{client_id}/search" path="/v1/websites/{client_id}/search" id="400c8450-3c6a-4490-8578-60e1ce0f00cc">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client_id to perform the search on</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="89b919ec-d68c-4985-b4ba-89d1f2e49209" method="GET">
        <con:description>Return results straight from the PF1 search ES.
Search inside the websites in PF1 inside a client.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>query</con:name>
            <con:style>QUERY</con:style>
            <con:description>A text to search for (given directly to ES)</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>502</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="6f2af7be-980f-42ae-b62d-1507df35d8e7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/notes/{client_id}/{account_id}/{activity_id}" path="/v1/notes/{client_id}/{account_id}/{activity_id}" id="0f0642c4-b937-41b8-81f3-88ac5c2876cd">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>activity_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the activity</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="b142398e-c8a5-45d5-969a-491e640c6ccc" method="GET">
        <con:description>Get all notes attached to an activity</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "instance_id" : "string",
  "client_id" : "string",
  "account_id" : "string",
  "activity_root_id" : "string",
  "entity_type" : "string",
  "activity_id" : "string",
  "note_id" : "string",
  "owner_user_id" : 0,
  "owner_user_name" : "string",
  "text" : "string",
  "edit_history" : { },
  "creation_ts" : 0,
  "modified_ts" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="ca1b05c8-123a-4144-9d74-7cc5198a6cac" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="23d2b262-bb16-4045-b861-2459cab7a940" method="POST">
        <con:description>Add or edit a note on the activity</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>text</con:name>
            <con:style>QUERY</con:style>
            <con:description>text of the note</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>note_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>note_id if editing an existing note</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "instance_id" : "string",
  "client_id" : "string",
  "account_id" : "string",
  "activity_root_id" : "string",
  "entity_type" : "string",
  "activity_id" : "string",
  "note_id" : "string",
  "owner_user_id" : 0,
  "owner_user_name" : "string",
  "text" : "string",
  "edit_history" : { },
  "creation_ts" : 0,
  "modified_ts" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="b4acfb30-94dd-44f7-b970-bd136f1d9741" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts}" path="/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts}" id="c8d7b230-88a3-46a9-8204-a38e418b70eb">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that is making the request</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>activity_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of the activity</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>entity_type</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>type of entity, comments|messages|replies</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>entity_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id of a particular entity (only required to get notes from an entity)</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>entity_creation_ts</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>sm_creation_ts of the entity</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="2b18f7fa-0da6-47d2-8b30-b148bf34e5b1" method="GET">
        <con:description>Get all notes attached to an activity</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "instance_id" : "string",
  "client_id" : "string",
  "account_id" : "string",
  "activity_root_id" : "string",
  "entity_type" : "string",
  "activity_id" : "string",
  "note_id" : "string",
  "owner_user_id" : 0,
  "owner_user_name" : "string",
  "text" : "string",
  "edit_history" : { },
  "creation_ts" : 0,
  "modified_ts" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="ba6b00cc-b437-471e-82c6-0696f00bd311" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="90817ea9-2f95-4c70-a06b-7e2edfd16231" method="POST">
        <con:description>Add or edit a note on the activity entity</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>text</con:name>
            <con:style>QUERY</con:style>
            <con:description>text of the note</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>note_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>note_id if editing an existing note</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "instance_id" : "string",
  "client_id" : "string",
  "account_id" : "string",
  "activity_root_id" : "string",
  "entity_type" : "string",
  "activity_id" : "string",
  "note_id" : "string",
  "owner_user_id" : 0,
  "owner_user_name" : "string",
  "text" : "string",
  "edit_history" : { },
  "creation_ts" : 0,
  "modified_ts" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/x-www-form-urlencoded</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="c9cc5c0d-96f5-4c75-be43-33fc616c3372" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/{client_id}/{account_id}/capture" path="/v1/{client_id}/{account_id}/capture{sm_activity_id}{post_id}{parent_id}" id="cf78d3cb-3555-4170-8935-d6e832b690c1">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The id of the client</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>account_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The id of the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>sm_activity_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The id of the social media activity to be captured.</con:description>
        </con:parameter>
        <con:parameter>
          <con:name>post_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>usually not required but if capturing a comment, the post_id is REQUIRED.</con:description>
        </con:parameter>
        <con:parameter>
          <con:name>parent_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>usually not required but if capturing a comment REPLY, the parent_id (parent comment id) is REQUIRED.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="POST" id="719c530c-bda9-475c-921b-760f78523b08" method="POST">
        <con:description>Capture single activity.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>post_type</con:name>
            <con:style>QUERY</con:style>
            <con:description>To capture, we must know what post type it is. Available types are 'post', 'event', 'video', 'photo', 'comment', 'conversation', 'rating'.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="ea60535d-fae8-4f8d-b0d6-cc042c7aef5a" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/alert/{client_id}/all" path="/v1/alert/{client_id}/all" id="08d8fc3b-dcd4-48a5-96c4-a789755e345c">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The id of the client to look alerts for</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="e050df72-990b-4f33-9c35-f2341b1e00f4" method="GET">
        <con:description>Gets all alerts in chronological order (newest to oldest)</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>start_ts</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An int timestamp. When present, will only return alert detections that were captured after the given time. This can be useful for pagination.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>Limit of results, maximum is 1000</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "data" : {
      "total_hits" : 0,
      "detections" : [ {
        "account_id" : "string",
        "entity_type" : "string",
        "detection_ts" : 0,
        "keyword_count" : { },
        "entity_pk" : { }
      } ]
    }
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="68e546c9-add4-4f59-8514-537a8c18594f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/alert/{client_id}/{alert_id}" path="/v1/alert/{client_id}/{alert_id}" id="d8066550-dbba-4b5f-a559-b6fb7d8b1c74">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The id of the client to look alerts for</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>alert_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The ID of alert</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="3d08feca-0e41-4e92-923b-c71d94511302" method="GET">
        <con:description>Gets matches of specified alert</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>start_ts</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An int timestamp. When present, will only return alert detections that were captured after the given time.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>end_ts</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>An int timestamp. When present, will only return alert detections that were captured before the given time.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>size</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>Limit of results, maximum is 1000</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>ordered</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>If 0, it will disable ordering per detection_ts. Default is 1 (True).</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "data" : {
      "total_hits" : 0,
      "detections" : [ {
        "account_id" : "string",
        "entity_type" : "string",
        "detection_ts" : 0,
        "keyword_count" : { },
        "entity_pk" : { }
      } ]
    }
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="aea9bd94-ae69-46b8-8a56-a71a2dc89b9d" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/alerts/send_email_notifications" path="/v1/alerts/send_email_notifications" id="7a5b4b54-d25f-4171-a6c4-41f6c10520e3">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="d0a354ce-e2d4-4d21-a234-6bf3cc0ccfb3" method="GET">
        <con:description>This is for internal use with a cronjob.
If triggered, it will search which alert is configured to send emails, and send the required emails to the email_list of the alert.

INTERNAL USE ONLY. Sends email notifications to email list.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="b66a6fe0-82d2-4762-89ff-b0ab47e2651a" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/alerts/{client_id}" path="/v1/alerts/{client_id}" id="bba32967-e608-4f65-bb89-d4fde3f33370">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>id for the client that owns the account</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="5a89dc3c-3c6b-4116-a99a-22cf582e3949" method="GET">
        <con:description>Returns a list of alerts of specified client

Gets all alerts of a client</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>active_only</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>Retrieve only active alerts if set to boolean true</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "client_id" : "string",
    "alerts" : [ {
      "status" : 0,
      "created_ts" : 0,
      "name" : "string",
      "created_by" : "string",
      "alert_id" : "string",
      "frequency" : "string",
      "capture_type" : "string"
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="5b2501df-8d80-475e-acd3-778af9a73331" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>active_only</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="POST" id="4e98d155-22f5-45bc-a98d-e099f6ba5925" method="POST">
        <con:description>Creates a new alert setting for the client.
New alerts should have at least 1 keyword

Creates an alert.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Name of the alert</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>keywords</con:name>
            <con:style>QUERY</con:style>
            <con:description>A CSV- formatted array of keywords for this alert</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>email_list</con:name>
            <con:style>QUERY</con:style>
            <con:description>A CSV-formatted array of emails to send alerts summaries.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>capture_type</con:name>
            <con:style>QUERY</con:style>
            <con:description>The type to capture, it could be one of the following
  - ACCOUNT: If the user wants to select only specific accounts to search for events
  - SOCIAL_MEDIA: If the user wants to select all account of specified social media</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>capture_list</con:name>
            <con:style>QUERY</con:style>
            <con:description>A CSV-formatted array of account ids or social-media codes to configure the alert</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>frequency</con:name>
            <con:style>QUERY</con:style>
            <con:description>Frequency to send email notifications to the specified list of emails.
- I: Instantly; sends an email when a keyword from the list is detected
- D: Daily; once a day
- B: By-weekly; twice in a week
- W: Weekly; once in a week
- O: Bi-monthly; twice in a month
- M: Monthly; Once in a month</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "status" : 0,
    "created_ts" : 0,
    "name" : "string",
    "created_by" : "string",
    "alert_id" : "string",
    "frequency" : "string",
    "capture_type" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="e23a2f7c-d745-4320-b844-9f4c9a65073d" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/translate/account/smid" path="/v1/translate/account/smid{network}{sm_ids}" id="5d820039-335f-40a8-94f0-932de6adfca8">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>network</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Network of account you are looking for. Accepts both short (FB) and long form (facebook)</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>sm_ids</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The ID in the social media. Acceepts one or more (comma-separated). If we don't have it, it will be skipped in the response.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="879e2b5f-98d0-4347-805b-5a028d560d69" method="GET">
        <con:description>Gets the correspondent account_id for a social media account ID.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="98d6d0d9-a530-4c0d-8afe-3a51f53f559d" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/alerts/{client_id}/{alert_id}" path="/v1/alerts/{client_id}/{alert_id}" id="e70e0c22-ea7e-4dc9-baab-fbde1f3d8fac">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>client_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>ID for the client that owns the account</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>alert_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The ID of alert</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="PUT" id="51a80b74-86d0-4f18-80a1-87aa7705a432" method="PUT">
        <con:description>Edits an alert setting.

Edits an alert.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Name of the alert</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>keywords</con:name>
            <con:style>QUERY</con:style>
            <con:description>A CSV- formatted array of keywords for this alert</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>email_list</con:name>
            <con:style>QUERY</con:style>
            <con:description>A CSV-formatted array of emails to send alerts summaries.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>capture_type</con:name>
            <con:style>QUERY</con:style>
            <con:description>The type to capture, it could be one of the following
  - ACCOUNT: If the user wants to select only specific accounts to search for events
  - SOCIAL_MEDIA: If the user wants to select all account of specified social media</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>capture_list</con:name>
            <con:style>QUERY</con:style>
            <con:description>A CSV-formatted array of account ids or social-media codes to configure the alert</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>frequency</con:name>
            <con:style>QUERY</con:style>
            <con:description>Frequency to send email notifications to the specified list of emails.
- I: Instantly; sends an email when a keyword from the list is detected
- D: Daily; once a day
- B: By-weekly; twice in a week
- W: Weekly; once in a week
- O: Bi-monthly; twice in a month
- M: Monthly; Once in a month</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "status" : 0,
    "created_ts" : 0,
    "name" : "string",
    "created_by" : "string",
    "alert_id" : "string",
    "frequency" : "string",
    "capture_type" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="b8d6db09-4a24-4931-9e5e-d1d784335b56" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>name</con:entry>
            <con:entry>keywords</con:entry>
            <con:entry>email_list</con:entry>
            <con:entry>capture_type</con:entry>
            <con:entry>capture_list</con:entry>
            <con:entry>frequency</con:entry>
            <con:entry>alert_id</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="a4fcf28a-2c79-407d-b660-77878ed1d92c" method="DELETE">
        <con:description>Deletes an alert configuration</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="8bfb83a9-32df-418d-bbf0-fca2c4b5e7ae" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>alert_id</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="9c7a40e7-ed6d-48a1-8aeb-519ec55ca774" method="PATCH">
        <con:description>Edit status at an alert.

Edits an alert.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>status</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>Status in the alert. (0 if disabled, 1 if enabled).</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "status" : 0,
    "created_ts" : 0,
    "name" : "string",
    "created_by" : "string",
    "alert_id" : "string",
    "frequency" : "string",
    "capture_type" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="f41012a3-2b61-4bab-ac7f-6ac80178c0f9" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://socialmedia</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>alert_id</con:entry>
            <con:entry>status</con:entry>
            <con:entry>access_token</con:entry>
          </con:parameterOrder>
          <con:environmentSpec>
            <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
            <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
              <con:authProfile>No Authorization</con:authProfile>
            </con:entry>
          </con:environmentSpec>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="_health" path="/api/_health" id="32fc03a8-d336-4ea5-a5fc-21d2002498de">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="77095ee7-09f6-4042-bd6c-3b48a0625402" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:request name="Request 1" id="0d062980-e97a-4dc3-9d8d-f59b3a547601" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://sm2.pagefreezer.com/</con:endpoint>
          <con:request/>
          <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/api/_health</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" id="ac7aefb7-2993-4636-b660-adfb21e0bbef" name="Saint Peter - Role Management" type="rest_ex" wadlVersion="https://swagger.io/swagger2/specification" definitionUrl="/Users/mehakverma/Documents/management.json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>Role Management platform</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/Users/mehakverma/Documents/management.json">
      <con:part>
        <con:url>file:/Users/mehakverma/Documents/management.json</con:url>
        <con:content>{
	"swagger": "2.0",
	"info": {
		"title": "Saint Peter - Role Management",
		"description": "Role Management platform",
		"version": "1.0"
	},
	"host": "www.pagefreezer.com",
	"schemes": [
		"https"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/v1/auth/{access_token}": {
			"get": {
				"summary": "Verifies an access token in the social media system.\n- application/json",
				"description": "\nThis endpoint verifies that an access token is valid, against the database of\nauthenticated users that logged in.\n\nThe response includes information on the user, on the RoleGroup, on the access level and on the permissions the user has.\n\nThis handler should only be available to calls from internal sources (API server)\n",
				"parameters": [
					{
						"name": "access_token",
						"in": "path",
						"description": "access token that needs to be verified",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"auth"
				],
				"responses": {
					"200": {
						"description": "set_cookie header and the data related to the access_token",
						"schema": {
							"$ref": "#/definitions/Auth"
						}
					},
					"400": {
						"description": "Parameters missing.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"401": {
						"description": "authentication token expired or not found",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"delete": {
				"summary": "Revokes the access to a user/invalidates access_token",
				"description": "When a user logs out of the system, this handler is called to revoke the\nvalidity of the token.\n",
				"parameters": [
					{
						"name": "access_token",
						"in": "path",
						"description": "access token the user is using",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"auth"
				],
				"responses": {
					"200": {
						"description": "User successfully logged out",
						"schema": {
							"$ref": "#/definitions/AuthRevoke"
						}
					},
					"400": {
						"description": "The `access_token` is expired",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "The `access_token` was not found inside the system",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/v1/login": {
			"post": {
				"summary": "Authenticates an access token in the User/Role management platform",
				"consumes": [
					"application/json"
				],
				"description": "This endpoint authenticates the user in the system.\n\nA user can authenticate in any of 3 levels:\n\n  - System (0): This is Pagefreezer System level. This is the highest level.\n  An example on how to authenticate at system level:\n\n  ```json\n    {\n      \"email\": \"yyy@yy.com\",\n      \"password\": \"xxx\",\n      \"domains\": {}\n    }\n  ```\n\n  - Instance (1): The Instance level are the actual instances where the accounts are\n  contained. They are useful because Pagefreezer has resellers. So even though\n  Pagefreezer has its own instance ('social'), other resellers will have their own.\n  An example on how to authenticate at instance level:\n\n  ```json\n    {\n      \"email\": \"yyy@yy.com\",\n      \"password\": \"xxx\",\n      \"domains\": {\n        \"sm1\": {\"instance_nameid\": \"gr\"}\n      }\n    }\n  ```\n\n\n  - Client (2): This is the enduser. For an common user logging into the system to see\n  the activities and freezing of their own social medias acccount. An example:\n\n  ```json\n    {\n      \"email\": \"yyy@yy.com\",\n      \"password\": \"xxx\",\n      \"domains\": {\n        \"sm2\": {\"instance_nameid\": \"gr\", \"client_nameid\": \"test\"}\n      }\n    }\n  ```\n\nNote: For both instance and clients, you can use either \"instance_nameid\" or\n\"instance_id\". The same for client, you can use either \"client_id\" or \"client_nameid\".\n\nOnce authentication is done successfully, an access_token will be provided in the\nresponse along with the level that the user belongs. Subsequent requests will not\nneed to have the full process but can rely on the already authenticated token.\n\nMost endpoints on the API rely on operating in a given instance. How does the backend\ndetects the instance?\n\n  If you are logged in a CLIENT or INSTANCE level, the user instance_id is frozen. You\n  cannot operate on other instance.\n\n  If you are a SYSTEM level user, the below happens:\n    - First and foremost we check for a X-SM2-INSTANCE header.\n    - If doesn't exist, we check for a parameter \"sm2_instance\" in the url querystring.\n    - The value on the parameters above must be the instance nameid.\n    - If nothing is found, it will operate on the system/social instance (default)\n    \nNote 2:\n\n  In the interim, the name of the level is set in the login screen. We will setup a proxy to re-route the requests to the login screen. Accessing these urls will produce the following effects:\n  - login.pagefreezer.com -> Access to system level\n  - instancename.pagefreezer.com -> Access to instance level\n  - instancename.pagefreezer.com/clientname -> access to client level\n  \n  \n  We can also allow the option of:\n\n  - clientname.pagefreezer.com that will redirect to instancename.pagefreezer.com/clientname\n  \n  All of these routings can be done with the help of the Amazon **route53** api.\n",
				"parameters": [
					{
						"name": "auth_json",
						"in": "body",
						"description": "Data needed to perform authentication.",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AuthObject"
						}
					}
				],
				"tags": [
					"auth"
				],
				"responses": {
					"200": {
						"description": "set_cookie header and the data related to the access_token",
						"schema": {
							"$ref": "#/definitions/Auth"
						}
					},
					"400": {
						"description": "Parameters missing.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"401": {
						"description": "User or Password invalid.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "User does not have the rights to access the claimed level.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/v1/user": {
			"get": {
				"summary": "List users.",
				"description": "This endpoint lists users present in the Management System. \n\nThe list of users displayed is limited by the permissions the user has and by what layers of the systems the user has access to.\n\nFor instance, a user that has access to the client layer, will be displayed only the users that belong to his client. i.e. the users with the same instance_id and client_id as the user that made the request.\n\nA user from an upper level can always access all the user lists from the lower levels.\n\nA user from the *system* level can access all the users in the instances and the clients.\n\nParameters can be left blank to access the system user list (provided the requester has the permissions to do so)\n",
				"parameters": [
					{
						"name": "instance_id",
						"in": "query",
						"description": "The nameid or instance_id of an instance.",
						"required": false,
						"type": "string"
					},
					{
						"name": "client_id",
						"in": "query",
						"description": "A specific client_id to list its users.\n\nYou should pass the instance_id that the client lives if it's not the same\nas the current/default one. This is useful for System users who can list clients\nof any instance.\n",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "A list of users, if any."
					},
					"400": {
						"description": "missing required parameter or validation failed - invalid email, for example.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"401": {
						"description": "User is not authenticated.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "client_id, instance_id not found.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"post": {
				"summary": "Creates a user.",
				"description": "The created user will have the same instance_id, client_id, and access_levels as the _creating_ user, unless other is specified.  \n\nThe new user can be created to have a more limited access. For instance, if the creator user belongs to the **Instance** level, the new user can be created to be able to access only a specific client (specifying the client_id).\n",
				"parameters": [
					{
						"name": "instance_id",
						"description": "The instance ID to which the user belongs to, if any. This can be extrapolated by the user that... creates this user.",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "client_id",
						"description": "The client ID to which the user belongs to, if any. This can be extrapolated by the user... that is creating the user.",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_levels",
						"description": "The levels this user will have access to. This takes a form of a list of integers, identifying the access levels:\n\n- 0: The Role Management System\n- 1: The System level of SM2\n- 2: The Instance level of SM2\n- 3: The Client level of SM2\n",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"description": "The user name",
						"in": "formData",
						"type": "string",
						"required": true
					},
					{
						"name": "email",
						"description": "The user email.",
						"in": "formData",
						"type": "string",
						"required": true
					},
					{
						"name": "password",
						"description": "The user password.",
						"in": "formData",
						"type": "string",
						"required": true
					},
					{
						"name": "groups",
						"in": "formData",
						"description": "One or more group IDs that the user belongs to.\nFor more than one, split the IDs using comma.\n",
						"required": true,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "User succesfully created.",
						"schema": {
							"$ref": "#/definitions/UserCreated"
						}
					},
					"400": {
						"description": "missing required parameter or validation failed - invalid email, for example.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"401": {
						"description": "Trying to create a user without the necessary permissions, or trying to create a user that can access different instance_id/client_id than the creating user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "client_id, instance_id or any of the group_id not found.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"409": {
						"description": "User email already exists in our data base."
					}
				}
			}
		},
		"/v1/user/{user_id}": {
			"get": {
				"summary": "Retrieves user information",
				"description": "The User endpoint returns information about the accounts belonging to\na specified `:user_id`.\n\nAs usual this view is limited to the scope of the permissions of the requesting user and the data can be accessed only if the user is enabled to access the client or instance (it belongs to the access tree of this user).\n",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"description": "id of the user we want to get the information about",
						"required": true,
						"type": "string"
					},
					{
						"name": "instance_id",
						"description": "The instance ID to which the user we are getting information from, belongs to",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "client_id",
						"description": "The client ID the user we are getting information from, belongs to",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "The list of users and their properties"
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "The `user_id` was not found inside the system",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"patch": {
				"summary": "Updates user information",
				"description": "PATCH allows you to send one or more fields of the user. \nThis can be useful for things such as group assignment.\nThe fields are the same from the POST, but only the user_id\nin the URL and the client_id in the body are required.\n",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"description": "The user ID to be updated.",
						"type": "string",
						"required": true
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					},
					{
						"name": "instance_id",
						"description": "The instance ID to which the user belongs to, if any. This can be extrapolated by the user that... creates this user.",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "client_id",
						"description": "The client ID to which the user belongs to, if any. This can be extrapolated by the user... that is creating the user.",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_levels",
						"description": "The levels this user will have access to. This takes a form of a list of integers, identifying the access levels:\n\n- 0: The Role Management System\n- 1: The System level of SM2\n- 2: The Instance level of SM2\n- 3: The Client level of SM2\n",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"description": "The user name",
						"in": "formData",
						"type": "string",
						"required": true
					},
					{
						"name": "email",
						"description": "The user email.",
						"in": "formData",
						"type": "string",
						"required": true
					},
					{
						"name": "password",
						"description": "The user password.",
						"in": "formData",
						"type": "string",
						"required": true
					},
					{
						"name": "groups",
						"in": "formData",
						"description": "One or more group IDs that the user belongs to.\nFor more than one, split the IDs using comma.\n",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "User fields updated successfully."
					},
					"400": {
						"description": "missing required parameter or validation failed - invalid email, for example.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"401": {
						"description": "access_token is not valid.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "User not found.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"delete": {
				"summary": "Deletes a user.",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"description": "The user ID to be updated.",
						"type": "string",
						"required": true
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "User deleted successfully."
					},
					"401": {
						"description": "access_token is not valid.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "User not found.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/v1/rolegroup": {
			"get": {
				"summary": "Lists all rolegroups.",
				"description": "The process of retrieving this is pretty much the same as the GET /user to get the list of users, but for rolegroups.\nThe layer from which you'll pull the roles from will be defined by the fields being set in the body of the request. \n- no `instance_id` and no `client_id`: rolegroups will come from the System level\n- only `instance_id` present: rolegroups will come from the Instance level\n- both `instance_id` and `client_id` defined: rolegroups will come from the client level\n",
				"parameters": [
					{
						"name": "instance_id",
						"in": "query",
						"description": "Identifies the instance for which you want to list the rolegroups\n",
						"required": false,
						"type": "string"
					},
					{
						"name": "client_id",
						"in": "query",
						"description": "Identifies the client for which you want to list the rolegroups\n",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"rolegroup"
				],
				"responses": {
					"200": {
						"description": "A list of rolegroups."
					},
					"401": {
						"description": "User is not authenticated.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user on the defined domain.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "client_id or instance_id not found.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"post": {
				"summary": "Creates a rolegroup.",
				"description": "Works the same way creating a user works.\n",
				"parameters": [
					{
						"name": "client_id",
						"in": "formData",
						"description": "instance_id where the role will be defined",
						"type": "string",
						"required": false
					},
					{
						"name": "instance_id",
						"in": "formData",
						"description": "client_id where the role will be defined",
						"type": "string",
						"required": false
					},
					{
						"name": "name",
						"in": "formData",
						"type": "string",
						"required": true,
						"description": "Name of the group"
					},
					{
						"name": "roles",
						"in": "formData",
						"type": "string",
						"required": true,
						"description": "At least one role ID. For multiple roles, split by comma."
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"rolegroup"
				],
				"responses": {
					"200": {
						"description": "Group created. group_id will be present."
					},
					"401": {
						"description": "User is not authenticated.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user on the defined domain.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "client_id or instance_id not found.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"409": {
						"description": "Group already exists."
					}
				}
			}
		},
		"/v1/rolegroup/{rolegroup_id}": {
			"get": {
				"summary": "Gets a rolegroup information",
				"description": "Works the same way as GET `/user/&lt;user_id>`\n",
				"parameters": [
					{
						"name": "rolegroup_id",
						"in": "path",
						"description": "the rolegroup ID",
						"type": "string",
						"required": true
					},
					{
						"name": "instance_id",
						"description": "The instance ID to which the rolegroup we are getting information from, belongs to",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "client_id",
						"description": "The client ID the rolegroup we are getting information from, belongs to",
						"in": "formData",
						"required": false,
						"type": "string"
					}
				],
				"tags": [
					"rolegroup"
				],
				"responses": {
					"200": {
						"description": "List of rolegroups."
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "The `rolegroup_id` was not found inside the system",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"patch": {
				"summary": "Edits a group. Currently only \"roles\" is editable.",
				"parameters": [
					{
						"name": "rolegroup_id",
						"in": "path",
						"description": "the rolegroup ID",
						"type": "string",
						"required": true
					},
					{
						"name": "instance_id",
						"description": "The instance ID to which the rolegroup we are getting information from, belongs to",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "client_id",
						"in": "formData",
						"description": "If given, will edit group of a client. Otherwise, will edit from instance.",
						"type": "string",
						"required": false
					},
					{
						"name": "roles",
						"in": "formData",
						"type": "string",
						"required": true,
						"description": "At least one role ID. For multiple roles, split by comma. You must send all roles the group has."
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"rolegroup"
				],
				"responses": {
					"200": {
						"description": "Group updated."
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "The `rolegroup_id` was not found inside the system",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"delete": {
				"summary": "Deletes a rolegroup.",
				"parameters": [
					{
						"name": "rolegroup_id",
						"in": "path",
						"description": "the rolegroup ID",
						"type": "string",
						"required": true
					},
					{
						"name": "instance_id",
						"description": "The instance ID of the rolegroup we are trying to delete",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "client_id",
						"in": "formData",
						"description": "The client_id of the rolegroup we are trying to delete",
						"type": "string",
						"required": false
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"rolegroup"
				],
				"responses": {
					"200": {
						"description": "rolegroup deleted."
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "The `rolegroup_id` was not found inside the system",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/v1/role": {
			"get": {
				"summary": "Lists all roles.",
				"parameters": [
					{
						"name": "client_id",
						"in": "formData",
						"description": "If given, will list roles of a client. Otherwise, will list from instance.",
						"type": "string",
						"required": false
					},
					{
						"name": "instance_id",
						"description": "The instance ID that we are querying for the roles",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"role"
				],
				"responses": {
					"200": {
						"description": "List of all roles."
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"post": {
				"summary": "Creates a role.",
				"parameters": [
					{
						"name": "client_id",
						"in": "formData",
						"description": "The client_id of the client where we want to create the role",
						"type": "string",
						"required": false
					},
					{
						"name": "instance_id",
						"description": "The instance_id of the instance where we want to create the role",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					},
					{
						"name": "name",
						"in": "formData",
						"type": "string",
						"required": true,
						"description": "Name of the role"
					},
					{
						"name": "permissions",
						"in": "formData",
						"type": "string",
						"required": true,
						"description": "At least one permission ID. For multiple permissions, split by comma. Example \"ACTIVITY_READ,USER_DELETE\" and so it goes."
					}
				],
				"tags": [
					"role"
				],
				"responses": {
					"200": {
						"description": "role created. role_id will be present."
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/v1/role/{role_id}": {
			"get": {
				"summary": "Gets a role information.",
				"parameters": [
					{
						"name": "role_id",
						"in": "path",
						"description": "the role ID",
						"type": "string",
						"required": true
					},
					{
						"name": "client_id",
						"in": "formData",
						"description": "The client_id of the client where the role we want to get info from resides",
						"type": "string",
						"required": false
					},
					{
						"name": "instance_id",
						"description": "The instance_id of the instance where the role we want to get info from resides",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"role"
				],
				"responses": {
					"200": {
						"description": "Information about a single role."
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "The `role_id` was not found inside the system",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"patch": {
				"summary": "Edits a role.",
				"parameters": [
					{
						"name": "role_id",
						"in": "path",
						"description": "the role ID",
						"type": "string",
						"required": true
					},
					{
						"name": "client_id",
						"in": "formData",
						"description": "The client_id of the client where the role resides",
						"type": "string",
						"required": false
					},
					{
						"name": "instance_id",
						"description": "The instance_id of the instance where the role resides",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					},
					{
						"name": "permissions",
						"in": "formData",
						"type": "string",
						"required": true,
						"description": "At least one permission ID. For multiple permissions, split by comma. You must send all permissions the role has."
					}
				],
				"tags": [
					"role"
				],
				"responses": {
					"200": {
						"description": "role updated."
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "The `role_id` was not found inside the system",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			},
			"delete": {
				"summary": "Deletes a role.",
				"parameters": [
					{
						"name": "role_id",
						"in": "path",
						"description": "the role ID",
						"type": "string",
						"required": true
					},
					{
						"name": "client_id",
						"in": "formData",
						"description": "The client_id of the client where the role resides",
						"type": "string",
						"required": false
					},
					{
						"name": "instance_id",
						"description": "The instance_id of the instance where the role resides",
						"in": "formData",
						"required": false,
						"type": "string"
					},
					{
						"name": "access_token",
						"in": "query",
						"description": "access_token provided from the Pagefreezer API",
						"required": true,
						"type": "string"
					}
				],
				"tags": [
					"role"
				],
				"responses": {
					"200": {
						"description": "role deleted."
					},
					"401": {
						"description": "access_token is not valid",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"403": {
						"description": "Action not permitted with this user.",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"404": {
						"description": "The `role_id` was not found inside the system",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/v1/permissions": {
			"get": {
				"summary": "Lists all possible permissions.",
				"tags": [
					"permissions"
				],
				"responses": {
					"200": {
						"description": "List of all permissions."
					},
					"500": {
						"description": "Something went wrong on the server side while querying the handler",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"AuthObject": {
			"type": "object",
			"description": "The authentication object with data needed to perform authentication of an user.",
			"properties": {
				"email": {
					"type": "string",
					"description": "The user's email."
				},
				"password": {
					"type": "string",
					"description": "The user's password."
				},
				"domains": {
					"type": "object",
					"example": {
						"test": "adasdas"
					},
					"description": "An object (mapping) describing what level to acess. If an empty map ({}), it will be SYSTEM (0) level.\nIf it contains \"sm1\" key, it's INSTANCE (1) level. If it contains \"sm2\" key, it's CLIENT (2) level.\n\n  List of mandatory keys per level:\n    system:\n      - None, just an empty mapping, ex: ```json{\"domains\": {}}```\n    sm1:\n      - instance_nameid OR instance_id\n    sm2:\n      - instance_nameid OR instance_id\n      - client_nameid OR client_id\n"
				}
			}
		},
		"Error": {
			"type": "object",
			"properties": {
				"request": {
					"$ref": "#/definitions/RequestData"
				},
				"response": {
					"type": "object",
					"properties": {
						"success": {
							"type": "boolean",
							"description": "It will be false."
						},
						"code": {
							"type": "integer",
							"format": "int32"
						},
						"message": {
							"type": "string"
						}
					}
				}
			}
		},
		"Auth": {
			"type": "object",
			"properties": {
				"request": {
					"$ref": "#/definitions/RequestData"
				},
				"response": {
					"type": "object",
					"properties": {
						"success": {
							"type": "boolean"
						},
						"access_token": {
							"type": "string"
						},
						"user_id": {
							"type": "string"
						},
						"level": {
							"type": "integer",
							"description": "The level the user belongs to. 0 - System, 1 - Instance, 2 - Client."
						},
						"rolegroup_ids": {
							"type": "string",
							"description": "the rolegroup ids this user belongs to. This is an array of elements."
						},
						"permissions": {
							"type": "string",
							"description": "this is the permissions associated to each role. This is in the form of a list of lists, where each element of this array is related to the element in the same position in the `rolegroup_ids` list."
						},
						"client_id": {
							"type": "string",
							"description": "The user's client_id. Might be empty if user logged in as Admin of an instance or system level."
						},
						"instance_id": {
							"type": "string",
							"description": "The user's instance_id."
						}
					}
				}
			}
		},
		"AuthRevoke": {
			"type": "object",
			"properties": {
				"request": {
					"$ref": "#/definitions/RequestData"
				},
				"response": {
					"type": "object",
					"properties": {
						"success": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"UserCreated": {
			"type": "object",
			"properties": {
				"request": {
					"$ref": "#/definitions/RequestData"
				},
				"response": {
					"type": "object",
					"properties": {
						"success": {
							"type": "boolean"
						},
						"user_id": {
							"type": "string"
						}
					}
				}
			}
		},
		"RequestData": {
			"type": "object",
			"properties": {
				"elapsed_time": {
					"description": "Time elapsed to serve the request (ms)",
					"type": "number"
				},
				"request_url": {
					"description": "The url of the request",
					"type": "string"
				},
				"request_method": {
					"description": "The method called by the request",
					"type": "string"
				},
				"paginated": {
					"description": "The pagination details. Empty for unpaginated results",
					"type": "object",
					"properties": {
						"page": {
							"type": "integer"
						},
						"page_size": {
							"type": "integer"
						}
					}
				},
				"host": {
					"description": "the host where the request is made",
					"type": "string"
				},
				"request_ip": {
					"description": "The originating IP address",
					"type": "string"
				}
			}
		}
	}
}</con:content>
        <con:type>https://swagger.io/swagger2/specification</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
      <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
    </con:endpoints>
    <con:resource name="/v1/auth/{access_token}" path="/v1/auth/{access_token}" id="9ae53a37-bb59-4583-8163-9900aec3fe68">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>access_token</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>access token the user is using</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="626d675c-a7f2-4036-ad75-9bcc70b4b735" method="GET">
        <con:description>This endpoint verifies that an access token is valid, against the database of
authenticated users that logged in.

The response includes information on the user, on the RoleGroup, on the access level and on the permissions the user has.

This handler should only be available to calls from internal sources (API server)

Verifies an access token in the social media system.
- application/json</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "access_token" : "string",
    "user_id" : "string",
    "level" : 0,
    "rolegroup_ids" : "string",
    "permissions" : "string",
    "client_id" : "string",
    "instance_id" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="4e760fc4-8d3b-4fe6-9908-677bc40eb4cd" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/auth/eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzU2OTgyNSwiaWF0IjoxNTMyMDMzODI1fQ.eyJ1c2VyX2lkIjoiNTkzZWY2MTI0YjdkMGIwMDAxNGNhNzNmIiwiZXhwaXJlc19hdCI6MTU2MzU2OTgyNS40MTU2NDcsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.1W-y5W8TZidwraZTDypn8EbdYEJ6l1PZ91UI_zU_vbc</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="1560e644-8a0c-4a5e-af71-fd946601a5a9" method="DELETE">
        <con:description>When a user logs out of the system, this handler is called to revoke the
validity of the token.

Revokes the access to a user/invalidates access_token</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="8f30d836-4583-4f7d-a160-626c8c90c675" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/login" path="/v1/login" id="aefc35f8-b4de-47cc-a32c-383e3b2e3c6f">
      <con:settings/>
      <con:parameters/>
      <con:method name="POST" id="affdbaac-7359-4b48-abe6-f9d747c6d9a8" method="POST">
        <con:description>This endpoint authenticates the user in the system.

A user can authenticate in any of 3 levels:

  - System (0): This is Pagefreezer System level. This is the highest level.
  An example on how to authenticate at system level:

  ```json
    {
      "email": "yyy@yy.com",
      "password": "xxx",
      "domains": {}
    }
  ```

  - Instance (1): The Instance level are the actual instances where the accounts are
  contained. They are useful because Pagefreezer has resellers. So even though
  Pagefreezer has its own instance ('social'), other resellers will have their own.
  An example on how to authenticate at instance level:

  ```json
    {
      "email": "yyy@yy.com",
      "password": "xxx",
      "domains": {
        "sm1": {"instance_nameid": "gr"}
      }
    }
  ```


  - Client (2): This is the enduser. For an common user logging into the system to see
  the activities and freezing of their own social medias acccount. An example:

  ```json
    {
      "email": "yyy@yy.com",
      "password": "xxx",
      "domains": {
        "sm2": {"instance_nameid": "gr", "client_nameid": "test"}
      }
    }
  ```

Note: For both instance and clients, you can use either "instance_nameid" or
"instance_id". The same for client, you can use either "client_id" or "client_nameid".

Once authentication is done successfully, an access_token will be provided in the
response along with the level that the user belongs. Subsequent requests will not
need to have the full process but can rely on the already authenticated token.

Most endpoints on the API rely on operating in a given instance. How does the backend
detects the instance?

  If you are logged in a CLIENT or INSTANCE level, the user instance_id is frozen. You
  cannot operate on other instance.

  If you are a SYSTEM level user, the below happens:
    - First and foremost we check for a X-SM2-INSTANCE header.
    - If doesn't exist, we check for a parameter "sm2_instance" in the url querystring.
    - The value on the parameters above must be the instance nameid.
    - If nothing is found, it will operate on the system/social instance (default)
    
Note 2:

  In the interim, the name of the level is set in the login screen. We will setup a proxy to re-route the requests to the login screen. Accessing these urls will produce the following effects:
  - login.pagefreezer.com -> Access to system level
  - instancename.pagefreezer.com -> Access to instance level
  - instancename.pagefreezer.com/clientname -> access to client level
  
  
  We can also allow the option of:

  - clientname.pagefreezer.com that will redirect to instancename.pagefreezer.com/clientname
  
  All of these routings can be done with the help of the Amazon **route53** api.

Authenticates an access token in the User/Role management platform</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>email</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>password</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "email" : "string",
  "password" : "string",
  "domains" : {
    "test" : "adasdas"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "access_token" : "string",
    "user_id" : "string",
    "level" : 0,
    "rolegroup_ids" : "string",
    "permissions" : "string",
    "client_id" : "string",
    "instance_id" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="895a2d2d-1895-408e-b3c7-12eda8032869" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/login</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="password" value="greenphotowasalice"/>
            <con:entry key="email" value="demo@pagefreezer.com"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>email</con:entry>
            <con:entry>password</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/user" path="/v1/user" id="41d06270-ca49-41d8-bb0f-00ec7b0242e3">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="541e775b-e81d-4ae5-99ea-f7653ad3b252" method="GET">
        <con:description>This endpoint lists users present in the Management System. 

The list of users displayed is limited by the permissions the user has and by what layers of the systems the user has access to.

For instance, a user that has access to the client layer, will be displayed only the users that belong to his client. i.e. the users with the same instance_id and client_id as the user that made the request.

A user from an upper level can always access all the user lists from the lower levels.

A user from the *system* level can access all the users in the instances and the clients.

Parameters can be left blank to access the system user list (provided the requester has the permissions to do so)

List users.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The nameid or instance_id of an instance.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>A specific client_id to list its users.

You should pass the instance_id that the client lives if it's not the same
as the current/default one. This is useful for System users who can list clients
of any instance.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>tags</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="6516ec9d-a30b-404e-a374-10b576778b1e" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/user</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
            <con:entry key="instance_id" value="I_sm_social"/>
            <con:entry key="tags" value="sm2"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>instance_id</con:entry>
            <con:entry>client_id</con:entry>
            <con:entry>access_token</con:entry>
            <con:entry>tags</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
      <con:method name="POST" id="d8921009-fd92-40aa-a4f0-53be9520d60b" method="POST">
        <con:description>The created user will have the same instance_id, client_id, and access_levels as the _creating_ user, unless other is specified.  

The new user can be created to have a more limited access. For instance, if the creator user belongs to the **Instance** level, the new user can be created to be able to access only a specific client (specifying the client_id).

Creates a user.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance ID to which the user belongs to, if any. This can be extrapolated by the user that... creates this user.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client ID to which the user belongs to, if any. This can be extrapolated by the user... that is creating the user.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_levels</con:name>
            <con:style>QUERY</con:style>
            <con:description>The levels this user will have access to. This takes a form of a list of integers, identifying the access levels:

- 0: The Role Management System
- 1: The System level of SM2
- 2: The Instance level of SM2
- 3: The Client level of SM2</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user name</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>email</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user email.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>password</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user password.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>groups</con:name>
            <con:style>QUERY</con:style>
            <con:description>One or more group IDs that the user belongs to.
For more than one, split the IDs using comma.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>tags</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>firstname</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>lastname</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>level_role</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>role_id</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>usergroups</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "user_id" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="9694f6d8-afe7-47d2-9233-0bf6e27e1e04" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:originalUri>https://devgums.pagefreezer.com/api/v1/user</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
            <con:entry key="firstname" value="api-testfirstname"/>
            <con:entry key="password" value="ncy883nk"/>
            <con:entry key="instance_id" value="I_sm_social"/>
            <con:entry key="level_role" value="591eb14f9e47df1364e2a7d0"/>
            <con:entry key="usergroups" value="59824dc59e47df47a205899f"/>
            <con:entry key="name" value="api-test"/>
            <con:entry key="email" value="testing-mv1@pagefreezer.com"/>
            <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            <con:entry key="tags" value="sm2"/>
            <con:entry key="lastname" value="api-testlastname"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>instance_id</con:entry>
            <con:entry>client_id</con:entry>
            <con:entry>access_levels</con:entry>
            <con:entry>name</con:entry>
            <con:entry>email</con:entry>
            <con:entry>password</con:entry>
            <con:entry>groups</con:entry>
            <con:entry>access_token</con:entry>
            <con:entry>tags</con:entry>
            <con:entry>firstname</con:entry>
            <con:entry>lastname</con:entry>
            <con:entry>level_role</con:entry>
            <con:entry>usergroups</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/user/{user_id}" path="/v1/user/{user_id}" id="51fae083-5156-4b3e-ad35-4f1c4dfcc0af">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>user_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The user ID to be updated.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="fa2ca7fe-54ae-482b-951f-a93558a303f0" method="GET">
        <con:description>The User endpoint returns information about the accounts belonging to
a specified `:user_id`.

As usual this view is limited to the scope of the permissions of the requesting user and the data can be accessed only if the user is enabled to access the client or instance (it belongs to the access tree of this user).

Retrieves user information</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance ID to which the user we are getting information from, belongs to</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client ID the user we are getting information from, belongs to</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="127f51eb-bb52-43f6-afbe-9b0a6982491c" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/user/5931b6d49e47df1e03493d1a</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
            <con:entry key="instance_id" value="I_sm_social"/>
            <con:entry key="user_id" value="5931b6d49e47df1e03493d1a"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="8fe02bd2-e20d-40b0-bb08-c68728a1be09" method="DELETE">
        <con:description>Deletes a user.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="9dbb74ec-23dc-47d8-afaa-864134a6eae0" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:originalUri>https://devgums.pagefreezer.com/api/v1/user/5b5b6b7170a08c2fef5876af</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
            <con:entry key="user_id" value="5b5b6b7170a08c2fef5876af"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="f57ca99a-7576-46e3-a294-57ff766de39d" method="PATCH">
        <con:description>PATCH allows you to send one or more fields of the user. 
This can be useful for things such as group assignment.
The fields are the same from the POST, but only the user_id
in the URL and the client_id in the body are required.

Updates user information</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance ID to which the user belongs to, if any. This can be extrapolated by the user that... creates this user.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client ID to which the user belongs to, if any. This can be extrapolated by the user... that is creating the user.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>access_levels</con:name>
            <con:style>QUERY</con:style>
            <con:description>The levels this user will have access to. This takes a form of a list of integers, identifying the access levels:

- 0: The Role Management System
- 1: The System level of SM2
- 2: The Instance level of SM2
- 3: The Client level of SM2</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user name</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>email</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user email.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>password</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user password.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>groups</con:name>
            <con:style>QUERY</con:style>
            <con:description>One or more group IDs that the user belongs to.
For more than one, split the IDs using comma.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="63ae0aee-bcb3-4275-b18a-396926ff4f67" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
          <con:request/>
          <con:originalUri>https://sm2.pagefreezer.com/api/v1/user/</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
            <con:entry key="instance_id" value="I_sm_social"/>
            <con:entry key="user_id" value="5931b6d49e47df1e03493d1a"/>
            <con:entry key="name" value="updatedname"/>
            <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/rolegroup" path="/v1/rolegroup" id="1c667b4f-9e1b-4a40-aac3-8f21e815f3c1">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="9f5c0d94-04f3-4fa7-8e8a-becd97936b38" method="GET">
        <con:description>The process of retrieving this is pretty much the same as the GET /user to get the list of users, but for rolegroups.
The layer from which you'll pull the roles from will be defined by the fields being set in the body of the request. 
- no `instance_id` and no `client_id`: rolegroups will come from the System level
- only `instance_id` present: rolegroups will come from the Instance level
- both `instance_id` and `client_id` defined: rolegroups will come from the client level

Lists all rolegroups.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Identifies the instance for which you want to list the rolegroups</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>Identifies the client for which you want to list the rolegroups</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="acc78a04-4068-4eb6-8321-29641c62d5fe" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="POST" id="b2e849fd-a420-4862-87a0-cd6735a52f6d" method="POST">
        <con:description>Works the same way creating a user works.

Creates a rolegroup.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>instance_id where the role will be defined</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>client_id where the role will be defined</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Name of the group</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>roles</con:name>
            <con:style>QUERY</con:style>
            <con:description>At least one role ID. For multiple roles, split by comma.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="c4092131-5a86-42eb-bd98-8ac9aba49074" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/rolegroup/{rolegroup_id}" path="/v1/rolegroup/{rolegroup_id}" id="66043bb6-9757-4848-a034-3ad5da5fbf8d">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>rolegroup_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>the rolegroup ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="6ea1d731-73d0-44da-b454-66dc2b431766" method="GET">
        <con:description>Works the same way as GET `/user/&lt;user_id>`

Gets a rolegroup information</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance ID to which the rolegroup we are getting information from, belongs to</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client ID the rolegroup we are getting information from, belongs to</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="94417f88-9ba5-4b76-8615-7f10009e1294" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="b1b150ff-c480-4c12-a95e-050c156d4d58" method="DELETE">
        <con:description>Deletes a rolegroup.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance ID of the rolegroup we are trying to delete</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client_id of the rolegroup we are trying to delete</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="b2e8e127-43b5-4a48-8dd1-c4a924dda320" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="4d1a0182-7a6a-4c83-988f-6cd07d90c897" method="PATCH">
        <con:description>Edits a group. Currently only "roles" is editable.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance ID to which the rolegroup we are getting information from, belongs to</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>If given, will edit group of a client. Otherwise, will edit from instance.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>roles</con:name>
            <con:style>QUERY</con:style>
            <con:description>At least one role ID. For multiple roles, split by comma. You must send all roles the group has.</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="9ca0aa7a-4cf3-406c-bfcb-eceb82e31762" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/role" path="/v1/role" id="1e384488-cc41-40fb-a0eb-84041f9b40cc">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="1e5516f8-0482-43b8-b600-77d1a96dac43" method="GET">
        <con:description>Lists all roles.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>If given, will list roles of a client. Otherwise, will list from instance.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance ID that we are querying for the roles</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>tags</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>is_level_role</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="578d7992-a5e5-49a0-9174-b69abb8e4cea" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:originalUri>https://devgums.pagefreezer.com/api/v1/role</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
            <con:entry key="is_level_role" value="1"/>
            <con:entry key="tags" value="sm2"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>access_token</con:entry>
            <con:entry>tags</con:entry>
            <con:entry>is_level_role</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
      <con:method name="POST" id="15614d51-93ee-4d12-a35e-efd83a2c17c8" method="POST">
        <con:description>Creates a role.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client_id of the client where we want to create the role</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance_id of the instance where we want to create the role</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>name</con:name>
            <con:style>QUERY</con:style>
            <con:description>Name of the role</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>permissions</con:name>
            <con:style>QUERY</con:style>
            <con:description>At least one permission ID. For multiple permissions, split by comma. Example "ACTIVITY_READ,USER_DELETE" and so it goes.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>tags</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
          <con:parameter>
            <con:name>is_level_role</con:name>
            <con:style>QUERY</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="113992a2-92af-4e52-9bc1-4e5c0c7b0275" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:originalUri>https://devgums.pagefreezer.com/api/v1/role</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
            <con:entry key="is_level_role" value="1"/>
            <con:entry key="tags" value="sm2"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>client_id</con:entry>
            <con:entry>instance_id</con:entry>
            <con:entry>access_token</con:entry>
            <con:entry>name</con:entry>
            <con:entry>permissions</con:entry>
            <con:entry>tags</con:entry>
            <con:entry>is_level_role</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/role/{role_id}" path="/v1/role/{role_id}" id="f377ac21-5d24-44ec-b56a-a0b180b05fe4">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>role_id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>the role ID</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="b24be2f1-91fc-4036-a818-a92e5e815182" method="GET">
        <con:description>Gets a role information.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client_id of the client where the role we want to get info from resides</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance_id of the instance where the role we want to get info from resides</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="b3b3466b-c79f-4a66-af61-886eca222f77" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="4c6c754b-51dc-44b7-8074-56565598d8d6" method="DELETE">
        <con:description>Deletes a role.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client_id of the client where the role resides</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance_id of the instance where the role resides</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="ea695117-492f-4b28-863d-57b6d9fd9761" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="a732cb42-6f3b-46d9-9e54-bd85a05b0977" method="PATCH">
        <con:description>Edits a role.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>client_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The client_id of the client where the role resides</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>instance_id</con:name>
            <con:style>QUERY</con:style>
            <con:description>The instance_id of the instance where the role resides</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>access_token</con:name>
            <con:style>QUERY</con:style>
            <con:description>access_token provided from the Pagefreezer API</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>permissions</con:name>
            <con:style>QUERY</con:style>
            <con:description>At least one permission ID. For multiple permissions, split by comma. You must send all permissions the role has.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="3c8a2d06-3c57-4f4d-aceb-d67f6d407e9c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/v1/permissions" path="/v1/permissions" id="9b8e1f39-37e1-4efd-b0a9-4b7c0e49e045">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="5352d14b-5ac4-4de6-b2f5-ca6f0f71f70b" method="GET">
        <con:description>Lists all possible permissions.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "request" : {
    "elapsed_time" : 1.5,
    "request_url" : "string",
    "request_method" : "string",
    "paginated" : {
      "page" : 0,
      "page_size" : 0
    },
    "host" : "string",
    "request_ip" : "string"
  },
  "response" : {
    "success" : true,
    "code" : 0,
    "message" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="e18333ac-32d4-4b3e-a497-8a6f26703704" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="c9e889d1-4efa-4cd2-9aa2-e3016bb3532f" name="APIs">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="d5f84f6b-efd5-4f96-b8be-3af8b5a36716" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Project 1 TestCase 1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="restrequest" name="/v1/instance GET Request 1" id="35242b7d-edfe-46cb-8341-7dadc114048c">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/instance GET Request 1" id="8104bbaa-4fb0-4c01-9664-d28889a2ef00" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/instance POST Request 1" id="ac95d7cb-bd9f-4c0b-9b1f-237935292cb7">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/instance POST Request 1" id="54f7bea1-078a-4ea1-8277-0a94011f412f" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/instance/{instance_id} PUT Request 1" id="490d38f4-f229-4ec0-889c-a672e62e573d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/instance/{instance_id} PUT Request 1" id="8117f2f8-0280-46b4-9cde-84cc6b4f243b" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:parameterOrder>
              <con:entry>instance_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/instance/{instance_id} DELETE Request 1" id="c4fbf2ad-2ce9-4778-aa81-995fdf11cab5">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/instance/{instance_id} DELETE Request 1" id="4656fab2-55d3-4e8f-9422-68238c021c77" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:parameterOrder>
              <con:entry>instance_id</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/instance/{instance_id}/client GET Request 1" id="8e9c529c-4749-4172-ab00-0523b2043aeb">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}/client" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/instance/{instance_id}/client GET Request 1" id="ebf45991-5295-4582-96c9-d51650ad855f" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/instance/{instance_id}/client POST Request 1" id="35dd20d6-3338-4489-94b3-7cd0c1b9d59b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}/client" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/instance/{instance_id}/client POST Request 1" id="edbb8471-4518-4bd6-8675-c0a54213eee1" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="instance_id" value="I_sm_social" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>instance_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>nameid</con:entry>
              <con:entry>language</con:entry>
              <con:entry>timezone</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/instance/{instance_id}/client DELETE Request 1" id="9ca98684-c0d9-478e-ab42-b44215894ebc">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}/client" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/instance/{instance_id}/client DELETE Request 1" id="6183b07b-9648-4573-95bc-d484c22dd9e7" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client GET Request 1" id="36b3a730-26f3-4f42-b070-97a83961cc13">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client GET Request 1" id="8d2f8cc6-422d-4904-aa11-5987823f817c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjU2MzY2OCwiaWF0IjoxNTMyNTYwMDY4fQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTUzMjU2MzY2OCwidGFncyI6WyJzbTIiLCJndW1zIl19.V3B1qFwH8od894bQS0eDLGRFQ-RCQTjMnwkC92dM2Dw" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id} GET Request 1" id="4fa859b5-9368-4d98-bec0-817e62f2d315">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id} GET Request 1" id="8c011789-c016-47ce-bb71-152323c1a45c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client/P_9zSLdhy7jsYHujEcC9XjS</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTUzMjU2MzY2OCwiaWF0IjoxNTMyNTYwMDY4fQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTUzMjU2MzY2OCwidGFncyI6WyJzbTIiLCJndW1zIl19.V3B1qFwH8od894bQS0eDLGRFQ-RCQTjMnwkC92dM2Dw"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id} PATCH Request 1" id="019ee7f1-b6b7-4ca0-8c52-90ddda2f9005">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}" methodName="PATCH" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id} PATCH Request 1" id="398b61f7-85ad-4e81-aca3-fc0dae2cfad4" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/client/P_9zSLdhy7jsYHujEcC9XjS</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="name" value="updatedname"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>instance_id</con:entry>
              <con:entry>default_retention_tag</con:entry>
              <con:entry>alerts_enabled</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id}/accounts GET Request 1" id="6fd2e724-c393-4d7f-899e-060ff017413f">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/accounts" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id}/accounts GET Request 1" id="0e7ce8cf-183b-4736-ae57-6b1c964bab59" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/client/P_9zSLdhy7jsYHujEcC9XjS/accounts</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
              <con:entry key="network" value="FB"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/url/info GET Request 1" id="d2ee6c6e-b6d7-45f5-a3b5-84a5ff050b18">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/url/info" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/url/info GET Request 1" id="85ea97aa-2729-4c2b-a7ae-5d8a38d3ad25" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account POST Request 1" id="dd257e7b-b3a4-4eeb-a0aa-1004d66255ca">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account POST Request 1" id="5d234aff-f940-4391-9bda-1b3eec70fb0f" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account DELETE Request 1" id="de0387dc-0a0c-4265-96ad-a96961d0204f">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account DELETE Request 1" id="fc636d24-4d04-4af0-bc56-3764e2b31647" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/enterprise/{client_id}/ GET Request 1" id="99b88aaf-714e-44ff-9183-5fba9b54b023">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/enterprise/{client_id}/" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/enterprise/{client_id}/ GET Request 1" id="95e06306-0fda-4512-9c33-d176499e5d33" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/enterprise/9zSLdhy7jsYHujEcC9XjS/</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/enterprise/{client_id}/ POST Request 1" id="e0053b02-30de-4d4b-870e-d91cad00e3bf">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/enterprise/{client_id}/" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/enterprise/{client_id}/ POST Request 1" id="85faa3c5-317e-447b-94af-235aef5cd53c" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/enterprise/{client_id}/{enterprise_id}/force_capture GET Request 1" id="d6d1bf40-509c-4fee-b9dd-c562a11b71d5">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/enterprise/{client_id}/{enterprise_id}/force_capture" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/enterprise/{client_id}/{enterprise_id}/force_capture GET Request 1" id="d62a9016-96b6-4ef5-8a8d-aff6cbb9971c" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/enterprise/{client_id}/{enterprise_id} GET Request 1" id="b7b55c90-c135-4466-9814-e5f089536f86">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/enterprise/{client_id}/{enterprise_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/enterprise/{client_id}/{enterprise_id} GET Request 1" id="e6d2b883-cfda-4636-a04b-85d6be96c54e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/account/enterprise/P_9zSLdhy7jsYHujEcC9XjS/I_sm_social</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="enterprise_id" value="I_sm_social"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/enterprise/{client_id}/{enterprise_id} DELETE Request 1" id="4e93b21e-42f2-4157-9f35-08be61219a00">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/enterprise/{client_id}/{enterprise_id}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/enterprise/{client_id}/{enterprise_id} DELETE Request 1" id="7ab0d893-abc4-4fad-9650-8d2560abcf22" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/enterprise/{client_id}/{enterprise_id} PATCH Request 1" id="254246be-0277-455c-8ff5-5fafb353b70d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/enterprise/{client_id}/{enterprise_id}" methodName="PATCH" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/enterprise/{client_id}/{enterprise_id} PATCH Request 1" id="03eb0685-6037-4840-b26b-cd7bd309592e" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/enterprise/capturables POST Request 1" id="5d428e25-35ad-49a4-8483-86dd390a7460">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/enterprise/capturables" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/enterprise/capturables POST Request 1" id="950f27c4-4dcb-4751-aa40-9d92841ef51c" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/resolve_address/{slug} GET Request 1" id="b9a360b5-584c-4a10-96bb-502cb4598270">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/resolve_address/{slug}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/resolve_address/{slug} GET Request 1" id="e0c4658b-df55-410e-a8f3-ae38b0279fad" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/{account_id} GET Request 1" id="fa46f4a2-7835-42d6-befc-953eadbf815d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/{account_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/{account_id} GET Request 1" id="dcaededd-c4c3-4690-8545-94597a478b8d" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/AFBpg_10StPytACBm4YUm2ffv1du</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="client_id" value="9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/{account_id} PATCH Request 1" id="13cd0355-bca9-4936-a035-466e6ffef880">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/{account_id}" methodName="PATCH" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/{account_id} PATCH Request 1" id="6058bdde-59b1-4f39-aa3e-10b4eb0c4fa6" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/{client_id}/{action} POST Request 1" id="f33f1a6f-1e5b-4cdc-8dd8-1317dd77b8d8">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/{client_id}/{action}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/{client_id}/{action} POST Request 1" id="7876526c-f0f7-41d5-82f1-04073dc4283a" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/{client_id}/{account_id}/{action} POST Request 1" id="f665f368-28df-4072-80e1-9ab5fc40df48">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/{client_id}/{account_id}/{action}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/{client_id}/{account_id}/{action} POST Request 1" id="4c616637-981d-4800-8377-9c9cc55ce2dd" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/{client_id}/{account_id}/timeseries/creation GET Request 1" id="dc5e7c0d-d5ae-4405-9188-e5d744d15e56">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/{client_id}/{account_id}/timeseries/creation" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/{client_id}/{account_id}/timeseries/creation GET Request 1" id="813c058f-5402-4a44-b5d0-3c6586471ee1" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/{client_id}/{account_id}/timeseries/capture GET Request 1" id="30d5a8a6-83d8-4773-83ed-6f833f493c2f">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/{client_id}/{account_id}/timeseries/capture" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/{client_id}/{account_id}/timeseries/capture GET Request 1" id="201457a3-368b-4b65-9ddf-b4c8088e27d9" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{last_seen_ts} GET Request 1" id="ab41595a-5a01-4502-b2f5-825e273cc945">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{last_seen_ts}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{last_seen_ts} GET Request 1" id="0aedd5d8-eaed-4fcd-a207-8dec13219030" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="REST Request" id="09f733fc-8782-4601-9a9a-3fca814276f2">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="REST Request" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="grouped" value="true"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/account/{client_id}/{account_id}/activity GET Request 1" id="d8829112-adaa-4d6b-aee8-be68e346d123">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/account/{client_id}/{account_id}/activity" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/account/{client_id}/{account_id}/activity GET Request 1" id="427f28f0-d169-4795-ba45-c788d352aa44" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/{id} GET Request 1" id="24c2a580-6375-4d41-a754-e93554881ad9">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/{id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/{id} GET Request 1" id="c2b308c7-bdaf-42ea-b223-d89af73373b2" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/smid/{sm_activity_id} GET Request 1" id="a1c0e74d-2edd-4705-9067-64d8c5487639">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/smid/{sm_activity_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/smid/{sm_activity_id} GET Request 1" id="b031a0ed-aabe-4a3e-8c1b-1bdd3e6014bb" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/{root_id}/tag/retention POST Request 1" id="096b5b56-136b-4e75-a64b-f667f0b979d5">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/{root_id}/tag/retention" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/{root_id}/tag/retention POST Request 1" id="aae1feae-6ba5-456d-8a3a-58bcf06f77f7" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/{root_id}/{entity_type}/{sm_activity_id}/{sm_creation_ts}/tag/retention POST Request 1" id="d9b3c205-21aa-4bfb-8041-16d1ad9d6c0b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/{root_id}/{entity_type}/{sm_activity_id}/{sm_creation_ts}/tag/retention" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/{root_id}/{entity_type}/{sm_activity_id}/{sm_creation_ts}/tag/retention POST Request 1" id="8ce08a1b-adeb-44cb-a9ef-b0e986431817" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/{id}/{action} GET Request 1" id="14989c2b-3359-49d6-ba1f-8267b2655796">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/{id}/{action}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/{id}/{action} GET Request 1" id="5f7bfcf4-3915-4799-91a6-1b7dec081046" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{sm_activity_id}/{sm_creation_ts}/{action} GET Request 1" id="6c6f0e39-a66b-4fdd-ae52-9dca61567c76">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{sm_activity_id}/{sm_creation_ts}/{action}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/{root_id}/{group}/{sm_activity_id}/{sm_creation_ts}/{action} GET Request 1" id="1584331d-4e2d-44e0-9a11-6cd8444ce2f1" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/ POST Request 1" id="f2e99f7c-da92-450f-b037-715941cd055b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/ POST Request 1" id="f56d21d4-4517-49b1-9140-4389f0a02cc1" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/{account_id}/{activity_root_id}/{entity_type}/{sm_activity_id} GET Request 1" id="555713c4-0ec1-4bf7-84e4-d3116e7ef071">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/{account_id}/{activity_root_id}/{entity_type}/{sm_activity_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/{account_id}/{activity_root_id}/{entity_type}/{sm_activity_id} GET Request 1" id="b8ac8af5-2884-4275-86c2-0dc9b4f2161a" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/publicportal/address/{slug} GET Request 1" id="1b6fd4cd-0da9-4545-825f-dd39d2e5260d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/publicportal/address/{slug}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/publicportal/address/{slug} GET Request 1" id="4f760b5d-0daf-4a48-a514-0a7cacd39618" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/publicportal/domain/{domain} GET Request 1" id="0fa9c861-cee8-4866-bdf7-4a4b27e02bd7">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/publicportal/domain/{domain}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/publicportal/domain/{domain} GET Request 1" id="c65e19c7-7dec-4eb2-ad6b-707b293136c5" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id}/publicportal GET Request 1" id="fd46b03e-4427-42bc-9f53-5fbfa51d4bc3">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/publicportal" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id}/publicportal GET Request 1" id="fba9f97e-ce31-48e7-876d-4abd14c5cffb" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client/P_10WFBozcTkEIiLnrDR2Q2y/publicportal</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="client_id" value="P_10WFBozcTkEIiLnrDR2Q2y" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id}/publicportal PUT Request 1" id="9df81a55-0aa1-4650-a0a6-d1e9e114ef88">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/publicportal" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id}/publicportal PUT Request 1" id="b7ee74ec-e037-47db-8496-b9ec9abeebce" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id}/publicportal/archives POST Request 1" id="969f4b5c-2689-4582-a7a6-806ed21e668e">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/publicportal/archives" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id}/publicportal/archives POST Request 1" id="77d39794-4e4f-4927-8ee3-0b93fddd73ae" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id}/publicportal/archives/{operation} POST Request 1" id="8ec14367-19c3-4c36-8fda-8667970c161d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/publicportal/archives/{operation}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id}/publicportal/archives/{operation} POST Request 1" id="57f64fd4-d9f2-43f0-bc11-80953ed2cbbc" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id}/accounts/search GET Request 1" id="008bc996-76c7-42cc-8b2d-abbb7c2a2283">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/accounts/search" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id}/accounts/search GET Request 1" id="8ae83bc0-dd9c-4405-b9ee-772fce4eb4d1" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/activities/{client_id}/search GET Request 1" id="71a448ff-0527-4ce0-b136-8ce21ff30647">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/activities/{client_id}/search" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/activities/{client_id}/search GET Request 1" id="deb7015e-90ba-4d66-a789-ae49cd1d0a7f" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>account_id</con:entry>
              <con:entry>search_id</con:entry>
              <con:entry>author</con:entry>
              <con:entry>month</con:entry>
              <con:entry>index</con:entry>
              <con:entry>date.lte</con:entry>
              <con:entry>date.gte</con:entry>
              <con:entry>author.raw</con:entry>
              <con:entry>content</con:entry>
              <con:entry>attachment.content</con:entry>
              <con:entry>changed</con:entry>
              <con:entry>flagged</con:entry>
              <con:entry>deleted</con:entry>
              <con:entry>_operator</con:entry>
              <con:entry>size</con:entry>
              <con:entry>offset</con:entry>
              <con:entry>only_raw</con:entry>
              <con:entry>sort_field</con:entry>
              <con:entry>timezone</con:entry>
              <con:entry>order</con:entry>
              <con:entry>full_activity</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/me GET Request 1" id="08840995-90f6-4fc2-b5d0-f71bd7a3acea">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/me" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/me GET Request 1" id="7898785d-652e-4120-81e6-94899a65129b" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/user GET Request 1" id="bf1793d8-a7ae-4f21-b2ea-5576687b30c1">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/user" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/user GET Request 1" id="f1c1f778-6133-472c-b1c9-58d5c87c6de7" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/user/{user_id}/impersonate POST Request 1" id="75f5ecd8-27d3-4056-91e2-c71de5c4225b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/user/{user_id}/impersonate" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/user/{user_id}/impersonate POST Request 1" id="e77b0939-e68d-4227-ad7d-d9aad8174b03" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/user/utils/authentication/facebook GET Request 1" id="33ff2ec9-7696-4250-a6c0-f569071a3ac5">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/user/utils/authentication/facebook" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/user/utils/authentication/facebook GET Request 1" id="d7395c3b-68d8-4762-a734-c84aa69d0040" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/user/utils/authentication/facebook POST Request 1" id="d913b64e-829a-4449-bf52-66304bde285a">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/user/utils/authentication/facebook" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/user/utils/authentication/facebook POST Request 1" id="8f5b7fe8-436c-4a9d-9414-f36888bc4fe9" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/pdf/request POST Request 1" id="57b6f63e-484a-4d26-893d-d9767142ebeb">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/pdf/request" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/pdf/request POST Request 1" id="2be72adb-1971-4a77-9dea-6b9441ffdd76" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/pdf/status/{task_id} GET Request 1" id="f9236539-5251-4f43-a2f7-a5f9b3d8ac08">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/pdf/status/{task_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/pdf/status/{task_id} GET Request 1" id="45eac608-7a2e-468b-a2cc-5a0a969527da" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/dashboard/status/instances GET Request 1" id="3f251898-7668-4586-bb3a-f37e1b5a69e2">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/dashboard/status/instances" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/dashboard/status/instances GET Request 1" id="bd0e8739-e91e-43b2-b604-aca6bc1f83a7" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/dashboard/status/instances</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="${#Project#access_token}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/dashboard/status/clients GET Request 1" id="f756f56e-ff7b-4256-8f27-4065163d1289">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/dashboard/status/clients" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/dashboard/status/clients GET Request 1" id="ea6b5663-6109-4b73-bf42-e244144215ad" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/dashboard/status/clients</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="instance_id" value="I_sm_social"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/dashboard/status/accounts GET Request 1" id="58dc8cdf-afda-4e84-bbfd-cc9d87f39e03">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/dashboard/status/accounts" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/dashboard/status/accounts GET Request 1" id="982c94dd-5959-4d36-8dad-68b1d0c0c38f" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/dashboard/status/accounts</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="instance_id" value="I_sm_social"/>
              <con:entry key="size" value="10"/>
              <con:entry key="sort_field" value="name"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
              <con:entry key="status" value="facebook,instagram"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/dashboard/status/mails GET Request 1" id="daace777-cbdf-4ff8-b1bd-b9f37bd0b751">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/dashboard/status/mails" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/dashboard/status/mails GET Request 1" id="3e2186e4-73c4-40a6-9f4d-9c25559272da" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/dashboard/status/users GET Request 1" id="1e3949c3-6a8a-4ba5-9593-dce5688244ae">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/dashboard/status/users" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/dashboard/status/users GET Request 1" id="b8941806-c1a4-4349-97fa-35d3ad6a30e6" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://socialmedia/dashboard/status/users</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="size" value="10"/>
              <con:entry key="page" value="1"/>
              <con:entry key="order" value="asc"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/cases GET Request 1" id="d7007b01-181a-4e69-9a84-56b53e16a136">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/cases" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/cases GET Request 1" id="90de31f8-3278-4555-a05f-c54db5a2679d" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/api/socialmedia/v1/client/cases</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="P_10Zt_KChuIUHzcSLU6PGnN"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/cases POST Request 1" id="9c994ef2-9b94-4e11-9a73-d0f28f3b51e9">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/cases" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/cases POST Request 1" id="99a3fca1-c27c-4c82-b8a0-40e2b21df879" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/api/socialmedia/v1/client/P_10Zt_KChuIUHzcSLU6PGnN/cases</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="P_10Zt_KChuIUHzcSLU6PGnN"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id} GET Request 1" id="471948cc-ef60-44a1-b6ba-24ae2eb105b3">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id} GET Request 1" id="ecd6e425-703a-417a-808f-e099c83b9455" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id} POST Request 1" id="ab94d4eb-0925-45fd-952f-d0190b1845dd">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id} POST Request 1" id="61b420fc-e680-456b-8455-1783ebb1c05e" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id} DELETE Request 1" id="48789820-8649-4fb5-a1ee-32f9dc28490d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id} DELETE Request 1" id="aac20892-4f4d-472a-b684-62bcceafd1c6" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities GET Request 1" id="cccfd223-f4ee-46ed-b5bf-b50c873bd06b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities GET Request 1" id="c13d63ba-9c1c-4017-84e7-d6ec05bc10e0" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/add POST Request 1" id="b355a1b6-50e6-4759-96b1-fbf347680cb9">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/add" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/add POST Request 1" id="e387406e-2397-44b9-ae1e-08d2aa6b4146" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/remove POST Request 1" id="0c87350c-ca2e-4735-bb9e-418f34aefce1">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/remove" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/cases/{case_id}/activities/remove POST Request 1" id="08178ef8-b5e6-45fa-b314-3f1471984612" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/integrations GET Request 1" id="a0809012-ac81-469a-9c67-2871ed720330">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/integrations" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/integrations GET Request 1" id="afe7e9c5-05c9-46ac-ad8e-658f379ba322" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/api/socialmedia/v1/integrations</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="${#Project#access_token}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/integrations POST Request 1" id="438b6575-607b-4f6f-87d1-a3fb5d4ee31d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/integrations" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/integrations POST Request 1" id="8b173474-eafe-4441-810a-36857c134f91" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/integrations/{integration_id} GET Request 1" id="50a5a92a-2bff-462c-98c9-261678e5e220">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/integrations/{integration_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/integrations/{integration_id} GET Request 1" id="cef41d1a-bcb7-4cbb-891f-8da8ca4e35f3" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/integrations/{integration_id} PUT Request 1" id="69ceba36-3d38-4b1e-9631-ef9c8c91ef96">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/integrations/{integration_id}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/integrations/{integration_id} PUT Request 1" id="36ccbc36-0a8e-49c6-b79b-d23f8c3a017a" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/integrations/{integration_id} DELETE Request 1" id="9770e652-00a7-46fd-ab0b-f63fd9e3d084">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/integrations/{integration_id}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/integrations/{integration_id} DELETE Request 1" id="7c869e4f-0395-4e04-9648-b47d6af1f1ae" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/integrations GET Request 1" id="2f49b72e-8f19-41b4-bd8b-b07333481d44">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/integrations" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/integrations GET Request 1" id="47648a90-e904-4329-94f2-9f15fffa166b" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id} GET Request 1" id="539e1038-a799-4d66-a83d-feed4e4f4edf">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id} GET Request 1" id="95265513-c430-4d54-9a5c-486473dd665e" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id} POST Request 1" id="66e6b9df-7975-48ff-8229-f005ab53adf9">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id} POST Request 1" id="7a7fcc1c-4c0e-4007-a3a8-425248916479" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/connect POST Request 1" id="55f36684-19e8-4616-99c8-77237ada89f1">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/connect" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/connect POST Request 1" id="a3b0addb-7688-4e42-a1d4-d677e4be3fd7" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/disconnect POST Request 1" id="387612d8-b452-49e4-9616-e12271ddcbf8">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/disconnect" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/disconnect POST Request 1" id="055d3697-5a0b-4d88-a3e4-2ecfd4722425" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/{path} POST Request 1" id="6e9e7fd1-aab9-40d3-8d06-72dd4344b732">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/{path}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/api/socialmedia/v1/client/{client_id}/integration/{integration_id}/{path} POST Request 1" id="8ca9afef-2057-4cb3-883a-d2e849068770" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/client/{client_id}/websites/search GET Request 1" id="89a71335-e8be-4ada-a86f-41881cdd283a">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/websites/search" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/client/{client_id}/websites/search GET Request 1" id="3d014daf-f8c5-4401-a3bd-b005648c957a" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/websites/{client_id}/search GET Request 1" id="536817ad-c0f0-42ef-a8c3-24ba9da98617">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/websites/{client_id}/search" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/websites/{client_id}/search GET Request 1" id="6f2af7be-980f-42ae-b62d-1507df35d8e7" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/notes/{client_id}/{account_id}/{activity_id} GET Request 1" id="014a894e-a918-4e00-be4f-e35e87ee8048">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/notes/{client_id}/{account_id}/{activity_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/notes/{client_id}/{account_id}/{activity_id} GET Request 1" id="ca1b05c8-123a-4144-9d74-7cc5198a6cac" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/notes/{client_id}/{account_id}/{activity_id} POST Request 1" id="aaf3a369-a309-41da-a2bc-0b997c44ca56">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/notes/{client_id}/{account_id}/{activity_id}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/notes/{client_id}/{account_id}/{activity_id} POST Request 1" id="b4acfb30-94dd-44f7-b970-bd136f1d9741" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts} GET Request 1" id="5b50d0b1-9148-415a-9cc8-68b2bc98b8b0">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts} GET Request 1" id="ba6b00cc-b437-471e-82c6-0696f00bd311" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts} POST Request 1" id="97029884-f18c-4315-b8ce-0815b03b80d8">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/notes/{client_id}/{account_id}/{activity_id}/{entity_type}/{entity_id}/{entity_creation_ts} POST Request 1" id="c9cc5c0d-96f5-4c75-be43-33fc616c3372" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/{client_id}/{account_id}/capture POST Request 1" id="a2dcc141-a36a-458f-913e-548971d43ad9">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/{client_id}/{account_id}/capture{sm_activity_id}{post_id}{parent_id}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/{client_id}/{account_id}/capture POST Request 1" id="ea60535d-fae8-4f8d-b0d6-cc042c7aef5a" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/alert/{client_id}/all GET Request 1" id="e043a1a0-a6b1-4d4f-9d54-ac7803694521">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alert/{client_id}/all" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/alert/{client_id}/all GET Request 1" id="68e546c9-add4-4f59-8514-537a8c18594f" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>start_ts</con:entry>
              <con:entry>size</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/alert/{client_id}/{alert_id} GET Request 1" id="f711ba28-24bf-46a6-9fb2-9e09e853ee68">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alert/{client_id}/{alert_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/alert/{client_id}/{alert_id} GET Request 1" id="aea9bd94-ae69-46b8-8a56-a71a2dc89b9d" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/alerts/send_email_notifications GET Request 1" id="2f6b9b1c-22c4-4bee-9c9e-9730028ff6cf">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/send_email_notifications" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/alerts/send_email_notifications GET Request 1" id="b66a6fe0-82d2-4762-89ff-b0ab47e2651a" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/alerts/{client_id} GET Request 1" id="1bd50716-db91-4a64-bd46-a4e1fb6a022b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/alerts/{client_id} GET Request 1" id="5b2501df-8d80-475e-acd3-778af9a73331" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/alerts/</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="P_10Zt_KChuIUHzcSLU6PGnN"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/alerts/{client_id} POST Request 1" id="7132944d-279a-4c3a-bbd3-b38eba0a2245">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/alerts/{client_id} POST Request 1" id="e23a2f7c-d745-4320-b844-9f4c9a65073d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/alerts/P_10WFBozcTkEIiLnrDR2Q2y</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="P_10Zt_KChuIUHzcSLU6PGnN"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/translate/account/smid GET Request 1" id="62a22abe-6a6d-4a34-8685-ce28cc8d5641">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/translate/account/smid{network}{sm_ids}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/translate/account/smid GET Request 1" id="98d6d0d9-a530-4c0d-8afe-3a51f53f559d" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/alerts/{client_id}/{alert_id} PUT Request 1" id="719bf99f-1a55-4dc3-99b0-0bdd28335fdb">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}/{alert_id}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/alerts/{client_id}/{alert_id} PUT Request 1" id="b8d6db09-4a24-4931-9e5e-d1d784335b56" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>keywords</con:entry>
              <con:entry>email_list</con:entry>
              <con:entry>capture_type</con:entry>
              <con:entry>capture_list</con:entry>
              <con:entry>frequency</con:entry>
              <con:entry>alert_id</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/alerts/{client_id}/{alert_id} DELETE Request 1" id="a2d1106e-7caf-4ec3-8b0b-c132bc2f5ed5">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}/{alert_id}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/alerts/{client_id}/{alert_id} DELETE Request 1" id="8bfb83a9-32df-418d-bbf0-fca2c4b5e7ae" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/v1/alerts/{client_id}/{alert_id} PATCH Request 1" id="18111ac2-6276-4827-83c9-aabae9e45722">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}/{alert_id}" methodName="PATCH" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/v1/alerts/{client_id}/{alert_id} PATCH Request 1" id="f41012a3-2b61-4bab-ac7f-6ac80178c0f9" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="0c3cf799-13d9-47be-b6b4-bded89ee1d18" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="SanityTestingForAccountActivity" searchProperties="true" timeout="0" disabled="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="GETClientDetails-/v1/client" id="0cdeccd0-bbaf-4a5f-bbeb-5988d8ec897c">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GETClientDetails-/v1/client" id="8d2f8cc6-422d-4904-aa11-5987823f817c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client</con:originalUri>
            <con:assertion type="JsonPath Existence Match" id="1edf9650-0201-48a1-90a7-fee1e830a3c9" name="Check for existence of [size]">
              <con:configuration>
                <path>$['request']['paginated']['size']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="${#Project#access_token}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetClientAccounts/v1/client/{client_id}/accounts" id="9437b015-e7e7-439e-adf3-1055029c46dc">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/accounts" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetClientAccounts/v1/client/{client_id}/accounts" id="0e7ce8cf-183b-4736-ae57-6b1c964bab59" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client/9zSLdhy7jsYHujEcC9XjS/accounts</con:originalUri>
            <con:assertion type="JsonPath Match" id="63d81b6e-25a2-4134-9f95-568404a3e7ff" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="P_10WFBozcTkEIiLnrDR2Q2y"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-AB" id="48f202bd-1133-4bab-913d-7d016faebb54">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-AB" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="4e9199ee-e1dc-4fab-b566-bb25f7d11853" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][1]['activity_type']</path>
                <content>AB</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="activity" value="AB"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-IN-Messages" id="33bd2894-cd08-47d1-a292-c35d617dcedd">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-IN-Messages" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="190d1bc9-2464-4f91-9920-da58d16c1776" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][2]['activity_type']</path>
                <content>IN</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="activity" value="IN"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-ST-Timeline" id="f129a39c-7d14-4279-b775-772f8e3ff29f">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-ST-Timeline" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="e216694e-d321-4a25-be14-c14dcd64b56f" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][49]['activity_type']</path>
                <content>ST</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="activity" value="ST"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-RA-Reviews" id="7d899a58-22e4-4cf6-9d5c-fa0ee6a82c95">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-RA-Reviews" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="1f558cea-0ef7-4868-b415-9e29a0d656e0" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][0]['activity_type']</path>
                <content>RA</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="activity" value="RA"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-AL-Photos" id="e5c1ab11-d986-48aa-aed0-987802ee6740">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-AL-Photos" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="4e9199ee-e1dc-4fab-b566-bb25f7d11853" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][1]['activity_type']</path>
                <content>AL</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="activity" value="AL"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-VI-Videos" id="214af913-3da0-4acd-ba92-9621a55b1eef">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-VI-Videos" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="4e9199ee-e1dc-4fab-b566-bb25f7d11853" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][1]['activity_type']</path>
                <content>VI</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="activity" value="VI"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-VP-VisitorPosts" id="ca1b021b-574a-4af6-bd2f-33710605a71b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-VP-VisitorPosts" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="4e9199ee-e1dc-4fab-b566-bb25f7d11853" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][1]['activity_type']</path>
                <content>VP</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="activity" value="VP"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-AB-size1" id="71a94ded-8e16-4a61-b1cf-e87a1bac2792">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-AB-size1" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="508b3607-585d-42fa-9efb-40cc0c8594b6" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][0]['activity_type']</path>
                <content>AB</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="AFBpg_10StPytACBm4YUm2ffv1du"/>
              <con:entry key="activity" value="AB"/>
              <con:entry key="size" value="1"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>0cdeccd0-bbaf-4a5f-bbeb-5988d8ec897c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>48f202bd-1133-4bab-913d-7d016faebb54</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>9437b015-e7e7-439e-adf3-1055029c46dc</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase id="29f78980-b30e-4d04-a08a-e31b1a53cd53" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="AccountActivity" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="IncludeOverview">true</con:setting>
        <con:setting id="IncludeResults">true</con:setting>
        <con:setting id="FlowLayout">false</con:setting>
        <con:setting id="ErrorDetails">true</con:setting>
        <con:setting id="IncludeCoverage">true</con:setting>
        <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
        <con:setting id="GeneratableJUnitReport@Folder">/Users/mehakverma/Documents/Reports</con:setting>
      </con:settings>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="properties" name="Properties 1" id="88e3080b-b26b-40f9-affd-a01fd7ff8846">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:properties>
            <con:property>
              <con:name>account_id</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>client_id</con:name>
              <con:value>P_10Zt_KChuIUHzcSLU6PGnN</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GETClientDetails-/v1/client" id="47f4dee5-7506-47c9-a14b-14ea679fd3f2">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GETClientDetails-/v1/client" id="8d2f8cc6-422d-4904-aa11-5987823f817c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client</con:originalUri>
            <con:assertion type="JsonPath Existence Match" id="1edf9650-0201-48a1-90a7-fee1e830a3c9" name="Check for existence of [size]">
              <con:configuration>
                <path>$['request']['paginated']['size']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="${#Project#access_token}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="PropertyTransfer 1" id="da8301ca-7918-4cd4-b0d8-a68f0c7d9a45">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
            <con:name>client_id</con:name>
            <con:sourceType>Response</con:sourceType>
            <con:sourceStep>GETClientDetails-/v1/client</con:sourceStep>
            <con:sourcePath>$['response']['data']['I_sm_social'][1]['client_id']</con:sourcePath>
            <con:targetType>client_id</con:targetType>
            <con:targetStep>#Project#</con:targetStep>
            <con:targetPath/>
            <con:type>JSONPATH</con:type>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetClientAccounts/v1/client/{client_id}/accounts" id="97024132-36e8-4947-a8ff-c1ba41e5cef0">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/accounts" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetClientAccounts/v1/client/{client_id}/accounts" id="0e7ce8cf-183b-4736-ae57-6b1c964bab59" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client/9zSLdhy7jsYHujEcC9XjS/accounts</con:originalUri>
            <con:assertion type="JsonPath Match" id="63d81b6e-25a2-4134-9f95-568404a3e7ff" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="PropertyTransfer 2" id="f1798346-c8c7-4a7e-ae1c-664a7bfaa879">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
            <con:name>account_id</con:name>
            <con:sourceType>Response</con:sourceType>
            <con:sourceStep>GetClientAccounts/v1/client/{client_id}/accounts</con:sourceStep>
            <con:sourcePath>$['response']['accounts'][0]['account_id']</con:sourcePath>
            <con:targetType>account_id</con:targetType>
            <con:targetStep>Properties 1</con:targetStep>
            <con:targetPath/>
            <con:type>JSONPATH</con:type>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-AB" id="3c462099-029c-458f-ae05-9feda35b453d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-AB" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="2f947e54-6472-45eb-8fa9-6fdde5a4f5d7" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][0]['activity_type']</path>
                <content>AB</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="${Properties 1#account_id}"/>
              <con:entry key="activity" value="AB"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-IN-Messages" id="4898cb21-a482-41f1-a0e8-6c8987bc064d">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-IN-Messages" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="530b5662-f616-4bbc-aea0-e3cc884da00c" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="${Properties 1#account_id}"/>
              <con:entry key="activity" value="IN"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-ST-Timeline" id="b036dcef-61a6-4480-ba06-c68f1b0ed1b2">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-ST-Timeline" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="e216694e-d321-4a25-be14-c14dcd64b56f" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][49]['activity_type']</path>
                <content>ST</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="${Properties 1#account_id}"/>
              <con:entry key="activity" value="ST"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-RA-Reviews" id="080c329f-fba8-48f0-931d-29bfa64c61fc">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-RA-Reviews" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="1f558cea-0ef7-4868-b415-9e29a0d656e0" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][0]['activity_type']</path>
                <content>RA</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="${Properties 1#account_id}"/>
              <con:entry key="activity" value="RA"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-AL-Photos" id="345fefcb-5b8a-4ef9-8ac8-2db360b4aeba">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-AL-Photos" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="4e9199ee-e1dc-4fab-b566-bb25f7d11853" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][1]['activity_type']</path>
                <content>AL</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="${Properties 1#account_id}"/>
              <con:entry key="activity" value="AL"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-VI-Videos" id="9730f79e-d0a8-4a0c-9195-cd152b1f0c44">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-VI-Videos" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="4e9199ee-e1dc-4fab-b566-bb25f7d11853" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][1]['activity_type']</path>
                <content>VI</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="${Properties 1#account_id}"/>
              <con:entry key="activity" value="VI"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-VP-VisitorPosts" id="c9983ac0-4ee7-4361-9da1-013e06a3bead">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-VP-VisitorPosts" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="4e9199ee-e1dc-4fab-b566-bb25f7d11853" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][1]['activity_type']</path>
                <content>VP</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="${Properties 1#account_id}"/>
              <con:entry key="activity" value="VP"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountActivity-AB-size1" id="8dd3592e-3314-496f-b954-e14060a91410">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" methodName="GET" resourcePath="/v1/account/{client_id}/{account_id}/activity" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountActivity-AB-size1" id="662d6eac-ecbb-4b6e-a082-7ad0e65a3c7e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/account/activity</con:originalUri>
            <con:assertion type="JsonPath Match" id="508b3607-585d-42fa-9efb-40cc0c8594b6" name="Match content of [activity_type]">
              <con:configuration>
                <path>$['response']['data'][0]['activity_type']</path>
                <content>AB</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="grouped" value="true"/>
              <con:entry key="account_id" value="${Properties 1#account_id}"/>
              <con:entry key="activity" value="AB"/>
              <con:entry key="size" value="1"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>client_id</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>account_id</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>0cdeccd0-bbaf-4a5f-bbeb-5988d8ec897c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>48f202bd-1133-4bab-913d-7d016faebb54</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>9437b015-e7e7-439e-adf3-1055029c46dc</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>88e3080b-b26b-40f9-affd-a01fd7ff8846</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>47f4dee5-7506-47c9-a14b-14ea679fd3f2</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase id="7db2fb21-b650-45d5-b3b1-24ddaa05d696" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Alerts" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="IncludeOverview">true</con:setting>
        <con:setting id="IncludeResults">true</con:setting>
        <con:setting id="FlowLayout">false</con:setting>
        <con:setting id="ErrorDetails">true</con:setting>
        <con:setting id="IncludeCoverage">true</con:setting>
        <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
        <con:setting id="GeneratableJUnitReport@Folder">/Users/mehakverma/Documents</con:setting>
      </con:settings>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="CreateAlert /v1/alerts/{client_id} POST" id="272959fd-1434-4402-899e-bda65ca6381b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CreateAlert /v1/alerts/{client_id} POST" id="e23a2f7c-d745-4320-b844-9f4c9a65073d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/alerts/P_10WFBozcTkEIiLnrDR2Q2y</con:originalUri>
            <con:assertion type="JsonPath Match" id="4e8b94b7-7c75-43f5-8030-8af4f1fd5890" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="capture_list" value="FB"/>
              <con:entry key="keywords" value="testKeywordalertapi"/>
              <con:entry key="email_list" value="testemail"/>
              <con:entry key="name" value="testnamealertapi"/>
              <con:entry key="capture_type" value="SOCIAL_MEDIA"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
              <con:entry key="frequency" value="I"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>keywords</con:entry>
              <con:entry>email_list</con:entry>
              <con:entry>capture_type</con:entry>
              <con:entry>capture_list</con:entry>
              <con:entry>frequency</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetAllAlerts /v1/alert/{client_id}/all GET" id="d2294119-4bdf-4c91-8efa-4be416ce366c">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alert/{client_id}/all" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetAllAlerts /v1/alert/{client_id}/all GET" id="68e546c9-add4-4f59-8514-537a8c18594f" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/alert/P_10i%40bCqQPhVBs9O7pI63fd/all</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>start_ts</con:entry>
              <con:entry>size</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="PropertyTransfer 1" id="7e15079b-69c3-4e09-b3c1-f698e9fd0c6c">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
            <con:name>alert_id</con:name>
            <con:sourceType>Response</con:sourceType>
            <con:sourceStep>CreateAlert /v1/alerts/{client_id} POST</con:sourceStep>
            <con:sourcePath>$['response']['data']['alert']['alert_id']</con:sourcePath>
            <con:targetType>alert_id</con:targetType>
            <con:targetStep>Properties 1</con:targetStep>
            <con:targetPath/>
            <con:type>JSONPATH</con:type>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetAlert /v1/alerts/{client_id} GET" id="1f4edbb9-d2c0-4129-9858-fd5ee9e77bee">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetAlert /v1/alerts/{client_id} GET" id="5b2501df-8d80-475e-acd3-778af9a73331" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/alerts/10WFBozcTkEIiLnrDR2Q2y</con:originalUri>
            <con:assertion type="JsonPath Match" id="8cc060f0-92a6-4cdd-929b-bbb2a55795dd" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="active_only" value="true"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="UpdateAlert/v1/alerts/{client_id}/{alert_id} PUT" id="ad00ff7e-c6f8-4a3e-8c2d-d8b102385e12">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}/{alert_id}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="UpdateAlert/v1/alerts/{client_id}/{alert_id} PUT" id="b8d6db09-4a24-4931-9e5e-d1d784335b56" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://socialmedia/v1/alerts/P_10WFBozcTkEIiLnrDR2Q2y/</con:originalUri>
            <con:assertion type="JsonPath Match" id="90123a31-3663-4e17-aa61-76f6eb12e2c4" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="capture_list" value="FB"/>
              <con:entry key="keywords" value="Updated-testKeyword"/>
              <con:entry key="email_list" value="testemail"/>
              <con:entry key="alert_id" value="${Properties 1#alert_id}"/>
              <con:entry key="name" value="Updated-testname"/>
              <con:entry key="capture_type" value="SOCIAL_MEDIA"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
              <con:entry key="frequency" value="I"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>keywords</con:entry>
              <con:entry>email_list</con:entry>
              <con:entry>capture_type</con:entry>
              <con:entry>capture_list</con:entry>
              <con:entry>frequency</con:entry>
              <con:entry>alert_id</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="properties" name="Properties 1" id="1013690c-20df-469f-8241-4df9bb9c93eb">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:properties>
            <con:property>
              <con:name>alert_id</con:name>
              <con:value>17oo379lrUjQ7DJS5xqOUp</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="PatchAlert /v1/alerts/{client_id}/{alert_id} PATCH" id="372d2523-2fc5-423b-85fd-33f0353bac29">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}/{alert_id}" methodName="PATCH" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PatchAlert /v1/alerts/{client_id}/{alert_id} PATCH" id="f41012a3-2b61-4bab-ac7f-6ac80178c0f9" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/alerts/P_10WFBozcTkEIiLnrDR2Q2y/3br8JnwraoJg6_l2nMLArQ</con:originalUri>
            <con:assertion type="JsonPath Match" id="f5b04d44-d0bd-41a5-a317-3f840953ee65" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="alert_id" value="${Properties 1#alert_id}"/>
              <con:entry key="client_id" value="${#Project#access_token}"/>
              <con:entry key="status" value="1"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="CheckAlertStatus /v1/alerts/{client_id} GET" id="06d45a52-adbf-4b3b-9bc8-c6fefd7dde63">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CheckAlertStatus /v1/alerts/{client_id} GET" id="5b2501df-8d80-475e-acd3-778af9a73331" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/alerts/10WFBozcTkEIiLnrDR2Q2y</con:originalUri>
            <con:assertion type="JsonPath Match" id="8cc060f0-92a6-4cdd-929b-bbb2a55795dd" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="b870152e-9a7c-42d9-b118-54e62bccbe8a" name="Contains">
              <con:configuration>
                <token>9876</token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="active_only" value="true"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DeleteAlert /v1/alerts/{client_id}/{alert_id} DELETE" id="0831ffd4-7a6a-4a7e-9bdb-1bb6083b8fdd">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alerts/{client_id}/{alert_id}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DeleteAlert /v1/alerts/{client_id}/{alert_id} DELETE" id="8bfb83a9-32df-418d-bbf0-fca2c4b5e7ae" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://socialmedia/v1/alerts/P_10WFBozcTkEIiLnrDR2Q2y/3br8JnwraoJg6_l2nMLArQ</con:originalUri>
            <con:assertion type="JsonPath Match" id="c97040d9-4097-4599-881c-d9836a18868c" name="Match content of [code]">
              <con:configuration>
                <path>$['response']['code']</path>
                <content>200</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="6ad5fca2-0388-42fe-a6ce-de7872656a91" name="Match content of [request_method]">
              <con:configuration>
                <path>$['request']['request_method']</path>
                <content>DELETE</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="alert_id" value="${Properties 1#alert_id}"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Copy of GetAllAlerts /v1/alert/{client_id}/all GET" id="073f8007-62a0-4154-8c10-57529487a5ea" disabled="true">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/alert/{client_id}/all" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of GetAllAlerts /v1/alert/{client_id}/all GET" id="68e546c9-add4-4f59-8514-537a8c18594f" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/alert/P_10i%40bCqQPhVBs9O7pI63fd/all</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>start_ts</con:entry>
              <con:entry>size</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>372d2523-2fc5-423b-85fd-33f0353bac29</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d2294119-4bdf-4c91-8efa-4be416ce366c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>06d45a52-adbf-4b3b-9bc8-c6fefd7dde63</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase id="46da889b-273d-47bf-970d-e0cd3f87a948" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Role Management- Login,Users" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="login /v1/login POST" id="d84999cb-bb4b-40b3-8188-db32c1c04774">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/login" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="login /v1/login POST" id="895a2d2d-1895-408e-b3c7-12eda8032869" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/login</con:originalUri>
            <con:assertion type="JsonPath Match" id="a1b06d24-e575-40bc-8c59-38305bc36455" name="Match content of [success]">
              <con:configuration>
                <path>$['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="password" value="loveyouDAD219@"/>
              <con:entry key="email" value="mehak@pagefreezer.com"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>email</con:entry>
              <con:entry>password</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get all roles GET" id="276d80a8-1ed2-4e59-9f9c-da93b232012e">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/auth/{access_token}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get all roles GET" id="4e760fc4-8d3b-4fe6-9908-677bc40eb4cd" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/auth/eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzU2OTgyNSwiaWF0IjoxNTMyMDMzODI1fQ.eyJ1c2VyX2lkIjoiNTkzZWY2MTI0YjdkMGIwMDAxNGNhNzNmIiwiZXhwaXJlc19hdCI6MTU2MzU2OTgyNS40MTU2NDcsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.1W-y5W8TZidwraZTDypn8EbdYEJ6l1PZ91UI_zU_vbc</con:originalUri>
            <con:assertion type="JsonPath Match" id="cf8a2ccb-51e4-42ea-8f95-9e4ee6f7ff73" name="Match content of [success]">
              <con:configuration>
                <path>$['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Login as admin POST" id="dba6d071-d34f-4bf6-ade9-11f8b86d3191">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/login" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Login as admin POST" id="895a2d2d-1895-408e-b3c7-12eda8032869" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/login</con:originalUri>
            <con:assertion type="JsonPath Match" id="bf6eded0-5ee5-468e-aa29-1d77f1d82a07" name="Match content of [success]">
              <con:configuration>
                <path>$['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="password" value="greenphotowasalice"/>
              <con:entry key="email" value="demo@pagefreezer.com"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>email</con:entry>
              <con:entry>password</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get user details /v1/user GET" id="906c72a7-0dc9-4a29-92f6-63f6d1429a64">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/user" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get user details /v1/user GET" id="6516ec9d-a30b-404e-a374-10b576778b1e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/user</con:originalUri>
            <con:assertion type="JsonPath Match" id="f0da498c-327d-46f5-9274-f28822e6cef7" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
              <con:entry key="instance_id" value="I_sm_social"/>
              <con:entry key="client_id" value="${#Project#client_id}"/>
              <con:entry key="tags" value="sm2"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get role by tags sm2 /v1/role GET" id="77f86495-3118-4920-9345-6b66523498f6">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/role" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get role by tags sm2 /v1/role GET" id="578d7992-a5e5-49a0-9174-b69abb8e4cea" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
            <con:request/>
            <con:originalUri>https://devgums.pagefreezer.com/api/v1/role</con:originalUri>
            <con:assertion type="JsonPath Match" id="69ec7b17-4cec-42f4-bacb-b4e206444546" name="Match content of [success]">
              <con:configuration>
                <path>$['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
              <con:entry key="is_level_role" value="1"/>
              <con:entry key="tags" value="sm2"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>access_token</con:entry>
              <con:entry>tags</con:entry>
              <con:entry>is_level_role</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Add user /v1/user POST" id="903c4ea2-205d-4940-8efa-3598d5362717">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/user" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Add user /v1/user POST" id="9694f6d8-afe7-47d2-9233-0bf6e27e1e04" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
            <con:request/>
            <con:originalUri>https://devgums.pagefreezer.com/api/v1/user</con:originalUri>
            <con:assertion type="JsonPath Match" id="ba666d31-28de-49bd-bb3e-ad1f922801e0" name="Match content of [success]">
              <con:configuration>
                <path>$['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
              <con:entry key="firstname" value="api-testfirstname"/>
              <con:entry key="password" value="ncy883nk"/>
              <con:entry key="level_role" value="591eb14f9e47df1364e2a7d0"/>
              <con:entry key="usergroups" value="59824dc59e47df47a205899f"/>
              <con:entry key="name" value="api-test"/>
              <con:entry key="email" value="testing-mv4@pagefreezer.com"/>
              <con:entry key="tags" value="sm2"/>
              <con:entry key="lastname" value="api-testlastname"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>instance_id</con:entry>
              <con:entry>client_id</con:entry>
              <con:entry>access_levels</con:entry>
              <con:entry>name</con:entry>
              <con:entry>email</con:entry>
              <con:entry>password</con:entry>
              <con:entry>groups</con:entry>
              <con:entry>access_token</con:entry>
              <con:entry>tags</con:entry>
              <con:entry>firstname</con:entry>
              <con:entry>lastname</con:entry>
              <con:entry>level_role</con:entry>
              <con:entry>usergroups</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="PropertyTransfer 1" id="0ff16284-09dd-440a-a0c1-50222ec7efef">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
            <con:name>_id</con:name>
            <con:sourceType>Response</con:sourceType>
            <con:sourceStep>Add user /v1/user POST</con:sourceStep>
            <con:sourcePath>$['data']['_id']</con:sourcePath>
            <con:targetType>user_id</con:targetType>
            <con:targetStep>#TestCase#</con:targetStep>
            <con:targetPath/>
            <con:type>JSONPATH</con:type>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get user details by user_id /v1/user/{user_id} GET" id="793a7419-add2-4b6a-91a3-3b63506bb406">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/user/{user_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get user details by user_id /v1/user/{user_id} GET" id="127f51eb-bb52-43f6-afbe-9b0a6982491c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/user/5931b6d49e47df1e03493d1a</con:originalUri>
            <con:assertion type="JsonPath Match" id="38a5f94f-f683-4fae-bc8d-7d9dbd247061" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
              <con:entry key="user_id" value="${#TestCase#user_id}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Patch the user by user_id /v1/user/{user_id} PATCH" id="08f44b61-2ce9-444a-9849-740205a068da">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/user/{user_id}" methodName="PATCH" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Patch the user by user_id /v1/user/{user_id} PATCH" id="63ae0aee-bcb3-4275-b18a-396926ff4f67" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/v1/user/</con:originalUri>
            <con:assertion type="JsonPath Match" id="8e08c650-938f-448d-aeaf-a9f327a36dc2" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
              <con:entry key="user_id" value="${#TestCase#user_id}"/>
              <con:entry key="name" value="updatedname"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete user by user_id /v1/user/{user_id} DELETE" id="9d158e4a-6aee-45df-895a-917aa6a13c71">
        <con:settings/>
        <con:config service="Saint Peter - Role Management" resourcePath="/v1/user/{user_id}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete user by user_id /v1/user/{user_id} DELETE" id="9dbb74ec-23dc-47d8-afaa-864134a6eae0" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://devgums.pagefreezer.com/api/</con:endpoint>
            <con:request/>
            <con:originalUri>https://devgums.pagefreezer.com/api/v1/user/5b5b6b7170a08c2fef5876af</con:originalUri>
            <con:assertion type="JsonPath Match" id="99ea4cf7-b1e0-4581-b761-b5ceac393d94" name="Match content of [success]">
              <con:configuration>
                <path>$['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="42352442-9862-4e97-bfe8-449f57d2f93a" name="Match content of [deleted]">
              <con:configuration>
                <path>$['data']['deleted']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g"/>
              <con:entry key="user_id" value="${#TestCase#user_id}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>user_id</con:name>
          <con:value>5b5b9d1470a08c2fef5876d9</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>08f44b61-2ce9-444a-9849-740205a068da</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>793a7419-add2-4b6a-91a3-3b63506bb406</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase id="3c4256b4-d573-4831-9c36-bc0e5102cd93" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Instances" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Get All Instances of /v1/instance GET" id="38b92398-4975-477a-a4bc-32ce34b3bddc">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get All Instances of /v1/instance GET" id="8104bbaa-4fb0-4c01-9664-d28889a2ef00" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance</con:originalUri>
            <con:assertion type="JsonPath Match" id="0eaa7d59-522f-4390-a647-c7e915fb4483" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="${#Project#access_token}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create an Instance /v1/instance POST Request 1" id="14c044c0-326d-41ba-acab-8e6d31629dac">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create an Instance /v1/instance POST Request 1" id="54f7bea1-078a-4ea1-8277-0a94011f412f" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance</con:originalUri>
            <con:assertion type="JsonPath Match" id="f1bc0a71-eb8a-459f-a4d2-214c89ee65a3" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="name" value="apitestinstancename"/>
              <con:entry key="nameid" value="apitestinstancenameid"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Update an instance /v1/instance/{instance_id} PUT" id="c8f1750c-b377-470c-b199-1d61c39f6d0f">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Update an instance /v1/instance/{instance_id} PUT" id="8117f2f8-0280-46b4-9cde-84cc6b4f243b" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_apitestinstancenameid</con:originalUri>
            <con:assertion type="JsonPath Match" id="98ca66ad-9f8a-48cc-8b0f-72553dc7e082" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="instance_id" value="I_sm_apitestinstancenameid"/>
              <con:entry key="name" value="apitestinstancename_updated"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>instance_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get updated Instances of /v1/instance GET" id="a12ca9ed-c406-4665-975b-e968edfb72c9">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get updated Instances of /v1/instance GET" id="8104bbaa-4fb0-4c01-9664-d28889a2ef00" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance</con:originalUri>
            <con:assertion type="JsonPath Match" id="0eaa7d59-522f-4390-a647-c7e915fb4483" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="32f80892-108f-4479-ac0e-6f74ae4ce776" name="Contains">
              <con:configuration>
                <token>apitestinstancename_updated</token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="${#Project#access_token}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create a client in an Instance /v1/instance/{instance_id}/client POST" id="cb53d7f9-928e-4b31-baca-4316f9add7bb">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}/client" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create a client in an Instance /v1/instance/{instance_id}/client POST" id="edbb8471-4518-4bd6-8675-c0a54213eee1" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_apitestinstancenameid/client</con:originalUri>
            <con:assertion type="JsonPath Match" id="2536d3f5-4689-4f63-be11-303d6726573f" name="Match content of [nameid]">
              <con:configuration>
                <path>$['response']['nameid']</path>
                <content>apinameid</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="06f53596-d011-4ae9-8776-387d496c4549" name="Match content of [instance_id]">
              <con:configuration>
                <path>$['response']['instance_id']</path>
                <content>I_sm_apitestinstancenameid</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="instance_id" value="I_sm_apitestinstancenameid"/>
              <con:entry key="name" value="apiname"/>
              <con:entry key="nameid" value="apinameid"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>instance_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>nameid</con:entry>
              <con:entry>language</con:entry>
              <con:entry>timezone</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get clients by instanceId /v1/instance/{instance_id}/client GET" id="f3643328-42fa-4269-9c59-7ddcc105a07f">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}/client" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get clients by instanceId /v1/instance/{instance_id}/client GET" id="ebf45991-5295-4582-96c9-d51650ad855f" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_apitestinstancenameid/client</con:originalUri>
            <con:assertion type="JsonPath Match" id="fdcfd32d-1655-4624-80eb-7ffc8913c823" name="Match content of [instance_id]">
              <con:configuration>
                <path>$['response']['data'][0]['instance_id']</path>
                <content>I_sm_apitestinstancenameid</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="d6ef1257-467a-4134-b31b-34882d309399" name="Match content of [nameid]">
              <con:configuration>
                <path>$['response']['data'][0]['nameid']</path>
                <content>apinameid</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="7d76af0f-a391-4d14-9215-9f6a01996a75" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="instance_id" value="I_sm_apitestinstancenameid"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="PropertyTransfer 1" id="d63507bf-fda1-4bcf-97c9-229924094c59">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
            <con:name>client_id</con:name>
            <con:sourceType>Response</con:sourceType>
            <con:sourceStep>Get clients by instanceId /v1/instance/{instance_id}/client GET</con:sourceStep>
            <con:sourcePath>$['response']['data'][0]['client_id']</con:sourcePath>
            <con:targetType>client_id</con:targetType>
            <con:targetStep>Delete a client in an Instance /v1/instance/{instance_id}/client</con:targetStep>
            <con:targetPath/>
            <con:type>JSONPATH</con:type>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete a client in an Instance /v1/instance/{instance_id}/client" id="8b3dbebc-fa9c-4b8d-b869-ba877afe1a8b">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}/client" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete a client in an Instance /v1/instance/{instance_id}/client" id="6183b07b-9648-4573-95bc-d484c22dd9e7" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_apitestinstancenameid/client</con:originalUri>
            <con:assertion type="JsonPath Match" id="e12654a5-40d9-4f12-b675-2d45c1888eea" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="22bbafe9-f0e5-44ed-a328-1d25b947ce5e" name="Match content of [request_method]">
              <con:configuration>
                <path>$['request']['request_method']</path>
                <content>DELETE</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8db2e1e5-29a7-4f86-8e97-6d741e66bbde" name="Match content of [deleted]">
              <con:configuration>
                <path>$['response']['deleted']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="instance_id" value="I_sm_apitestinstancenameid"/>
              <con:entry key="client_id" value="P_2XRQvfrFYSWz7o_o1i0bu_"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Delete an instance /v1/instance/{instance_id} DELETE" id="c217c556-670b-4f81-8050-572f27c18397">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/instance/{instance_id}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Delete an instance /v1/instance/{instance_id} DELETE" id="4656fab2-55d3-4e8f-9422-68238c021c77" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/instance/I_sm_apitestinstancenameid</con:originalUri>
            <con:assertion type="JsonPath Match" id="829a0e7c-a06b-42ed-a0fa-a9d842a376c9" name="Match content of [deleted]">
              <con:configuration>
                <path>$['response']['deleted']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b35daea8-2990-40e9-bf22-97f2f7b473af" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="15059277-51e3-4799-b500-f20a70cb5839" name="Match content of [request_method]">
              <con:configuration>
                <path>$['request']['request_method']</path>
                <content>DELETE</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="instance_id" value="${Create an Instance /v1/instance POST Request 1#Response#$['response']['instance_id']}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>instance_id</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>cb53d7f9-928e-4b31-baca-4316f9add7bb</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a12ca9ed-c406-4665-975b-e968edfb72c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c217c556-670b-4f81-8050-572f27c18397</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase id="276e4aaf-3005-4486-8ded-1760dc28917a" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Client" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Get Client details /v1/client GET" id="56f6fee4-6666-4618-a633-64d01942d7d0">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Client details /v1/client GET" id="8d2f8cc6-422d-4904-aa11-5987823f817c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client</con:originalUri>
            <con:assertion type="JsonPath Match" id="3170f5b3-6992-43eb-98bd-57fb76b251d5" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="${#Project#access_token}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get Client details by clientId of /v1/client/{client_id} GET" id="d04147c0-7c27-4fdc-a84e-15021d435a41">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Client details by clientId of /v1/client/{client_id} GET" id="8c011789-c016-47ce-bb71-152323c1a45c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client/P_9zSLdhy7jsYHujEcC9XjS</con:originalUri>
            <con:assertion type="JsonPath Match" id="eb1a7ad0-2736-4c7e-b704-d7caea9fce11" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Update Client details by clientId /v1/client/{client_id} PATCH" id="e0d97664-ae2f-49d7-995d-85fab7a48169">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}" methodName="PATCH" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Update Client details by clientId /v1/client/{client_id} PATCH" id="398b61f7-85ad-4e81-aca3-fc0dae2cfad4" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/client/P_9zSLdhy7jsYHujEcC9XjS</con:originalUri>
            <con:assertion type="JsonPath Match" id="103b68c8-355c-4f72-a30e-0980da4fb52e" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="6a5b8fe6-7b00-4ee2-b444-3a31a3542613" name="Contains">
              <con:configuration>
                <token>updatedname</token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="name" value="updatedname"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>client_id</con:entry>
              <con:entry>name</con:entry>
              <con:entry>instance_id</con:entry>
              <con:entry>default_retention_tag</con:entry>
              <con:entry>alerts_enabled</con:entry>
              <con:entry>access_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get Client account details by clientId /v1/client/{client_id}/accounts GET" id="022e717a-99bc-48bd-9814-5b27b95fd663">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client/{client_id}/accounts" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get Client account details by clientId /v1/client/{client_id}/accounts GET" id="0e7ce8cf-183b-4736-ae57-6b1c964bab59" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://sm2.pagefreezer.com/api/socialmedia/v1/client/P_9zSLdhy7jsYHujEcC9XjS/accounts</con:originalUri>
            <con:assertion type="JsonPath Match" id="c16f89b5-4c6a-44d7-9b59-6e33892a8b4c" name="Match content of [success]">
              <con:configuration>
                <path>$['response']['success']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="access_token" value="${#Project#access_token}"/>
              <con:entry key="client_id" value="P_9zSLdhy7jsYHujEcC9XjS"/>
              <con:entry key="network" value="FB"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="ded804d8-c33d-49c0-ac20-15be4db40423" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Sanity-Test" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="GETClientDetails-/v1/client" id="c3013382-2fc5-4341-ac2f-988f0552b9fd">
        <con:settings/>
        <con:config service="Social Media 2.0 GUI API" resourcePath="/v1/client" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GETClientDetails-/v1/client" id="8d2f8cc6-422d-4904-aa11-5987823f817c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://social.pagefreezer.com/api/socialmedia</con:endpoint>
            <con:request/>
            <con:originalUri>https://social.pagefreezer.com/api/socialmedia/v1/client</con:originalUri>
            <con:assertion type="JsonPath Existence Match" id="1edf9650-0201-48a1-90a7-fee1e830a3c9" name="Check for existence of [size]">
              <con:configuration>
                <path>$['request']['paginated']['size']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="access_token" value="${#Project#access_token}" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="fab5dccc-0f11-492a-a306-490d4f097d85">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
              <con:entry environmentId="36ccbca3-71e7-4f37-8dd1-24b2d96c6893">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>access_token</con:name>
      <con:value>eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzU2OTgyNSwiaWF0IjoxNTMyMDMzODI1fQ.eyJ1c2VyX2lkIjoiNTkzZWY2MTI0YjdkMGIwMDAxNGNhNzNmIiwiZXhwaXJlc19hdCI6MTU2MzU2OTgyNS40MTU2NDcsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.1W-y5W8TZidwraZTDypn8EbdYEJ6l1PZ91UI_zU_vbc</con:value>
    </con:property>
    <con:property>
      <con:name>client_id</con:name>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="fab5dccc-0f11-492a-a306-490d4f097d85" name="QA">
    <con:service type="REST" name="Social Media 2.0 GUI API">
      <con:endpoint authProfile="Inherit From Parent" username="" password="" domain="" incomingWss="" outgoingWss="" wssTimeToLive="" wssType="">https://sm2.pagefreezer.com/api/socialmedia</con:endpoint>
    </con:service>
    <con:service type="REST" name="Saint Peter - Role Management">
      <con:endpoint authProfile="No Authorization">https://sm2.pagefreezer.com/api/</con:endpoint>
    </con:service>
    <con:property>
      <con:name>access_token</con:name>
      <con:value>eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzY2NTI5MCwiaWF0IjoxNTMyMTI5MjkwfQ.eyJ1c2VyX2lkIjoiNTkxZWIwZDU5ZTQ3ZGYxMzY0ZTJhN2M4IiwiZXhwaXJlc19hdCI6MTU2MzY2NTI5MC44NDY0NjgsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.d82fFeg7lTKLJR2CFqEMYbzpnod4KKJ0gp7KiCWIh6g</con:value>
    </con:property>
    <con:property>
      <con:name>client_id</con:name>
      <con:value>P_1jzu8wcVsX3OD0qmz_UfN2</con:value>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="36ccbca3-71e7-4f37-8dd1-24b2d96c6893" name="Production">
    <con:service type="REST" name="Social Media 2.0 GUI API">
      <con:endpoint authProfile="Inherit From Parent" username="" password="" domain="" incomingWss="" outgoingWss="" wssTimeToLive="" wssType="" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://social.pagefreezer.com/api/socialmedia</con:endpoint>
    </con:service>
    <con:service type="REST" name="Saint Peter - Role Management">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://social.pagefreezer.com/api/socialmedia</con:endpoint>
    </con:service>
    <con:property>
      <con:name>access_token</con:name>
      <con:value>eyJhbGciOiJIUzI1NiIsImV4cCI6MTU2MzU2OTgyNSwiaWF0IjoxNTMyMDMzODI1fQ.eyJ1c2VyX2lkIjoiNTkzZWY2MTI0YjdkMGIwMDAxNGNhNzNmIiwiZXhwaXJlc19hdCI6MTU2MzU2OTgyNS40MTU2NDcsInRhZ3MiOlsic20yIiwiZ3VtcyJdfQ.1W-y5W8TZidwraZTDypn8EbdYEJ6l1PZ91UI_zU_vbc</con:value>
    </con:property>
    <con:property>
      <con:name>client_id</con:name>
      <con:value/>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
